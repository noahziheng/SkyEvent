{"version":3,"sources":["webpack:///app.1706979ef88c9d65d6f2.js","webpack:///webpack/bootstrap a1bac829570ca63131fa","webpack:///./src/main.js","webpack:///App.vue","webpack:///Events.vue","webpack:///Index.vue","webpack:///Eventlist.vue","webpack:///Jumbotron.vue","webpack:///Navbar.vue","webpack:///Userbar.vue","webpack:///./src/lang-detect.js","webpack:///./src/lang/en.js","webpack:///./src/lang/zh.js","webpack:///./src/model/events.js","webpack:///./src/model/user.js","webpack:///./~/js-cookie/src/js.cookie.js","webpack:///./src/App.vue?d818","webpack:///./src/Pages/Events.vue?c1fe","webpack:///./src/Pages/Index.vue?76d1","webpack:///./src/components/Eventlist.vue?3c22","webpack:///./src/components/Features.vue?175e","webpack:///./src/components/Jumbotron.vue?d82f","webpack:///./src/components/Navbar.vue?d2d8","webpack:///./src/components/Userbar.vue?978d","webpack:///./~/vue-i18n/dist/vue-i18n.common.js","webpack:///./src/App.vue","webpack:///./src/Pages/Events.vue","webpack:///./src/Pages/Index.vue","webpack:///./src/components/Eventlist.vue","webpack:///./src/components/Features.vue","webpack:///./src/components/Jumbotron.vue","webpack:///./src/components/Navbar.vue","webpack:///./src/components/Userbar.vue","webpack:///./~/vue-router/dist/vue-router.js","webpack:///./~/vue/dist/vue.common.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_vue","_vue2","_vueRouter","_vueRouter2","_vueI18n","_vueI18n2","_zh","_zh2","_en","_en2","_Index","_Index2","_Events","_Events2","_langDetect","_langDetect2","_App","_App2","locales","en","zh","use","lang","get","router","map","/","component","/events","methods","language","set","location","reload","start","Object","defineProperty","value","_Navbar","_Navbar2","_user","_user2","_events","_events2","_version","e","Error","code","_version2","components","Navbar","data","version","user","events","_Eventlist","_Eventlist2","Eventlist","_Jumbotron","_Jumbotron2","_Features","_Features2","Jumbotron","Features","this","$root","getAll","hr","index","length","_Userbar","_Userbar2","Userbar","_lang","$parent","M","init","flaq","getState","_jsCookie","_jsCookie2","navigator","browserLanguage","substr","message","current_version","home","event","guest","flights","versionlog","description","login","reg","logout","title","image","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","factory","undefined","extend","i","result","arguments","attributes","key","converter","api","path","defaults","expires","Date","setMilliseconds","getMilliseconds","JSON","stringify","test","write","encodeURIComponent","String","replace","decodeURIComponent","escape","document","cookie","toUTCString","domain","secure","join","cookies","split","rdecode","parts","name","slice","charAt","read","json","parse","getJSON","apply","remove","withConverter","format","string","_len","args","Array","_key","babelHelpers","hasOwnProperty","RE_NARGS","match","v","temp","arr","splice","push","compare","v1","v2","s1","s2","n1","parseInt","n2","indexOf","p1","PATCH_PATTERN","exec","p2","Vue","getVal","val","getPath","parsers","util","t","config","isObject","isArray","prototype","$t","_len2","_key2","concat","plugin","opts","defineConfig","Symbol","constructor","__vue_script__","__vue_template__","options","template","global","Target","matcher","delegate","Matcher","target","routes","children","generateMatch","startingPath","nestedCallback","fullPath","addRoute","routeArray","handler","len","l","route","eachRoute","baseRoute","callback","binding","addRouteCallback","add","toString","StaticSegment","DynamicSegment","StarSegment","EpsilonSegment","names","specificity","segments","results","segment","State","charSpec","nextStates","sortSolutions","states","sort","a","b","recognizeChar","ch","state","RecognizeResults","queryParams","findHandler","handlers","regex","captures","currentCapture","params","j","isDynamic","addSegment","currentState","eachChar","put","decodeQueryParamPart","part","warn","msg","window","console","exports$1","debug","stack","resolvePath","base","relative","append","query","pop","unshift","isPromise","then","getRouteConfig","$options","resolveAsyncComponent","cb","resolver","_","resolve","_resolveComponent","Component","mapParams","genQuery","canReuse","view","transition","childVM","canReuseFn","to","from","canDeactivate","next","fromComponent","hook","callHook","expectBoolean","canActivate","aborted","deactivate","callHooks","activate","depth","reuse","activateQueue","saveChildView","_bound","setComponent","activateHook","dataHook","waitForData","activated","loading","$loadingRouteData","unbuild","build","_meta","created","_routerView","keepAlive","cachedChildView","_keepAliveRouterView","childView","cleanup","$destroy","insert","_rendered","_transitionOnLoad","setCurrent","$before","anchor","afterData","afterActivate","loadData","onError","_needMerge","reduce","res","isPlainObject","keys","forEach","create","promises","resolvedVal","$set","all","$emit","expectData","isPlainOjbect","toArray","applyOverride","_Vue$util","defineReactive","_init","root","_parent","parent","$router","$route","_children","_defineMeta","destroy","_destroy","_isBeingDestroyed","$remove","strats","optionMergeStrategies","hooksToMergeRE","parentVal","childVal","ret","View","componentDef","directive","internalDirectives","viewDef","_isRouterView","bind","vm","_isDynamicLiteral","parentView","_rootView","_currentTransition","done","unbind","elementDirective","Link","sameOrigin","link","protocol","hostname","port","_bind","addClass","removeClass","priority","el","__v_link_active","unwatch","$watch","onRouteUpdate","activeEl","parentNode","tagName","getAttribute","addEventListener","onClick","update","exact","prevActiveClass","activeClass","metaKey","ctrlKey","shiftKey","defaultPrevented","button","preventDefault","go","pathname","newPath","_stringifyPath","updateActiveMatch","updateHref","updateClasses","activeRE","RegExp","queryStringRE","regexEscapeRE","isAbsolute","href","mode","history","formatPath","removeAttribute","_linkActiveClass","dest","trailingSlashRE","removeEventListener","guardComponent","comp","classCallCheck","instance","Constructor","TypeError","willAddRoute","addChild","contextEntered","specials","escapeRegex","validChars","generate","invalidChars","repeat","child","isEqual","chars","returned","oCreate","proto","F","RouteRecognizer","rootState","allSegments","isEmpty","as","handlersFor","hasRoute","output","generateQueryString","pairs","pair","arrayPair","parseQueryString","queryString","keyLength","recognize","pathLen","queryStart","isSlashDropped","decodeURI","solutions","source","VERSION","hashRE","HTML5History","_ref","onChange","rootRE","baseEl","querySelector","_this","listener","url","search","hash","stop","replaceState","pos","x","pageXOffset","y","pageYOffset","pushState","hashMatch","HashHistory","hashbang","self","raw","formattedPath","isAbsoloute","prefix","AbstractHistory","currentPath","RouteTransition","abort","abortingOnLoad","redirect","deactivateQueue","reverseDeactivateQueue","reverse","matched","reuseQueue","runQueue","_onTransitionValidated","_view","queue","fn","step","context","_ref$expectBoolean","_ref$expectData","nextCalled","err","_suppress","exposed","resIsPromise","ok","hooks","r","internalKeysRE","Route","_recognizer","prev","cur","_notFoundHandler","freeze","historyBackends","abstract","html5","Router","_ref$hashbang","_ref$abstract","_ref$history","_ref$saveScrollPosition","saveScrollPosition","_ref$transitionOnLoad","transitionOnLoad","_ref$suppressTransitionError","suppressTransitionError","_ref$root","_ref$linkActiveClass","linkActiveClass","installed","app","_guardRecognizer","_started","_startCb","_currentRoute","_previousTransition","_notFoundRedirect","_beforeEachHooks","_afterEachHooks","_root","_abstract","_hashbang","hasPushState","_history","_historyFallback","inBrowser","History","_match","_saveScrollPosition","_map","on","rootPath","_notFound","_addRoute","_addRedirect","alias","_addAlias","beforeEach","afterEach","App","container","_appContainer","Ctor","_appConstructor","_location","assign","subRoutes","subPath","redirectPath","_addGuard","aliasPath","mappedPath","_handler","_this2","realPath","_checkGuard","_this3","currentRoute","currentTransition","_prevTransition","beforeHooks","startTransition","_postTransition","nextTick","scrollTo","getElementById","scrollX","offsetTop","currentParams","targetParams","encodeURI","install","externalVue","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","_proxy","_digest","del","_unproxy","isLiteral","exp","literalValueRE","isReserved","str","charCodeAt","_toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","camelize","camelizeRE","toUpper","toUpperCase","hyphenate","hyphenateRE","toLowerCase","classify","classifyRE","bind$1","ctx","list","OBJECT_STRING","def","enumerable","writable","configurable","_debounce","func","wait","timeout","timestamp","later","last","now","setTimeout","cancellable","cancelled","cancel","looseEqual","Cache","limit","size","head","tail","_keymap","pushFilter","filter","lastFilterIndex","trim","tokens","filterTokenRE","processFilterArg","dir","filters","arg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","inSingle","inDouble","curly","square","paren","expression","compileRegex","open","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","htmlRE","cache","parseText","text","html","first","oneTime","lastIndex","tag","tokensToExp","token","formatToken","single","$eval","inlineFilters","filterRE$1","appendWithTransition","applyTransition","appendChild","beforeWithTransition","before","removeWithTransition","direction","op","__v_trans","transitionEndEvent","_isCompiled","action","inDoc","node","doc","documentElement","nodeType","contains","getAttr","_attr","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","removeChild","prepend","firstChild","replaceChild","on$1","useCapture","off","setClass","cls","isIE9","SVGElement","setAttribute","className","classList","tar","extractContent","asFragment","rawContent","isTemplate","content","DocumentFragment","hasChildNodes","trimNode","createDocumentFragment","createElement","isTrimmable","lastChild","createAnchor","persist","createComment","createTextNode","__vue_anchor","findRef","hasAttributes","attrs","refRE","mapNodeRange","end","removeNodeRange","frag","onRemoved","removed","nodes","checkComponentAttr","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","initProp","prop","coerceProp","assertProp","required","expectedType","type","valid","Boolean","Function","validator","coerce","mergeData","toVal","fromVal","mergeAssets","guardArrayAssets","guardComponents","ids","guardProps","props","assets","asset","mergeOptions","mergeField","strat","defaultStrat","mixins","camelizedId","assertAsset","Dep","uid$3","subs","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","src","__proto__","observe","isExtensible","addVm","getter","setter","convertAllProperties","property","getOwnPropertyDescriptor","childOb","depend","newVal","initMixin","$el","$children","$refs","$els","_watchers","_directives","_uid","uid","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_vForRemoving","_unlinkFn","_context","_scope","_frag","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","formatSubPath","trimmed","maybeUnescapeQuote","nextChar","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","parsePath","pathCache","parseExpression","setPath","original","save","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","booleanLiteralRE","resetBatcherState","userQueue","has","circular","waiting","internalQueueDepleted","flushBatcherQueue","runBatcherQueue","devtools","emit","watcher","run","pushWatcher","q","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","prevError","twoWay","queued","shallow","traverse","normalize","propCache","camel","upper","testEl","prefixed","prefixes","camelPrefixes","style","keyFilter","codes","charCode","keyCodes","keyCode","stopFilter","stopPropagation","preventFilter","selfFilter","currentTarget","getValue","multi","selected","_value","indexOf$1","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","wrap","efault","suffix","innerHTML","nodeToFragment","textContent","clonedNode","cloneNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","shouldClone","idSelectorCache","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__vfrag__","withTransition","method","attach","shouldCallRemove","beforeRemove","detach","FragmentFactory","cid","cacheId","outerHTML","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","n","Math","floor","pushJob","job","queue$1","flush","f","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","isHidden","offsetWidth","getClientRects","stringToObject","contains$1","compileProps","propOptions","attr","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","getDefault","$get","_bindDir","propDef","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","directiveComparator","descriptor","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileElement","compileTextNode","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","publicDirectives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","ref","modifiers","literal","componentLinkFn","skip","previousElementSibling","dirName","terminalDirectives","pushDir","interpTokens","hasOneTimeToken","hasOneTime","rawName","rawValue","interp","dirDef","parseModifiers","modifierRE","transitionRE","bindRE","onRE","dirAttrRE","makeNodeLinkFn","directives","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","stateMixin","noop","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","propsData","optionsDataFn","optionsData","oldData","removeVm","computed","userDef","metas","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","register","onAttached","callAttach","onDetached","callDetach","watch","_initDOMHooks","Directive","_locked","_listeners","_host","lifecycleMixin","refs","_compile","_initElement","contentLinkFn","rootLinker","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","teardown","$off","miscMixin","_applyFilters","oldValue","offset","k","resolved","requested","pendingCallbacks","cbs","reason","globalAPI","createClass","compiler","text$1","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","mixin","definition","dataAPI","clean","asStatement","$arguments","$delete","deep","sync","immediate","filterRE","$interpolate","$log","log","domAPI","op1","op2","targetIsDetached","shouldCallHook","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$after","inDocument","realCb","eventsAPI","modifyListenerCount","count","hookRE","$once","isSource","shouldPropagate","hasParentCbs","some","$broadcast","$dispatch","lifecycleAPI","ready","$compile","limitBy","filterBy","delimiter","convertArray","item","$value","$key","orderBy","sortKey","order","extractFragment","main","__v_selected","__VUE_DEVTOOLS_GLOBAL_HOOK__","userAgent","isAndroid","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","counter","observer","textNode","characterData","setImmediate","shift","entry","newer","older","returnEntry","defineProperties","silent","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","instanceData","defaultData","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","paramAttributes","arrayProto","addSub","sub","removeSub","addDep","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","_withLock","$index","current","depIds","cloak","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","FOR","IF","SLOT","importantRE","cssText","handleObject","handleSingle","isImportant","setProperty","removeProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","modelProps","true-value","false-value","invalid","modelProp","model","__v_model","setAttributeNS","esc","tab","enter","space","delete","up","right","down","acceptStatement","iframeBind","contentWindow","capture","prevent","reset","checkbox","getBooleanValue","checked","_trueValue","_falseValue","_watcher","afterBind","select","forceUpdate","multiple","initValue","selectedIndex","radio","text$2","isRange","composing","focused","rawListener","hasjQuery","jQuery","checkFilters","hasRead","hasWrite","_unbind","show","nextElementSibling","elseEl","toggle","display","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","circle","ellipse","line","polygon","polyline","rect","placeholder","vIf","elseFactory","elseFrag","uid$1","vFor","inMatch","itMatch","iterator","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackByKey","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","staggerAmount","getStagger","total","trans","stagger","_preProcess","_postProcess","swap","for","if","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","oldId","bindingModes","childKey","parentKey","parentWatcher","childWatcher","inlineTemplate","pendingComponentCb","pendingRemovals","pendingRemovalCb","invalidatePending","resolveComponent","mountComponent","ComponentName","cached","getCached","newComponent","waitingFor","extraOptions","defer","transitionMode","vClass","handleArray","prevKeys","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","called","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","digitsRE","indent","capitalize","uppercase","lowercase","currency","_currency","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay","slot","fallback","slotName","selector","tryCompile","elseBlock","namedSlot","elementDirectives","_namedSlot","transitions","partials"],"mappings":"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","file":"app.1706979ef88c9d65d6f2.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/static/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _vue = __webpack_require__(40);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _vueRouter = __webpack_require__(39);\n\t\n\tvar _vueRouter2 = _interopRequireDefault(_vueRouter);\n\t\n\tvar _vueI18n = __webpack_require__(30);\n\t\n\tvar _vueI18n2 = _interopRequireDefault(_vueI18n);\n\t\n\tvar _zh = __webpack_require__(11);\n\t\n\tvar _zh2 = _interopRequireDefault(_zh);\n\t\n\tvar _en = __webpack_require__(10);\n\t\n\tvar _en2 = _interopRequireDefault(_en);\n\t\n\tvar _Index = __webpack_require__(33);\n\t\n\tvar _Index2 = _interopRequireDefault(_Index);\n\t\n\tvar _Events = __webpack_require__(32);\n\t\n\tvar _Events2 = _interopRequireDefault(_Events);\n\t\n\tvar _langDetect = __webpack_require__(9);\n\t\n\tvar _langDetect2 = _interopRequireDefault(_langDetect);\n\t\n\tvar _App = __webpack_require__(31);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar locales = {\n\t  en: _en2.default,\n\t  zh: _zh2.default\n\t};\n\t\n\t_vue2.default.use(_vueI18n2.default, {\n\t  lang: _langDetect2.default.get(),\n\t  locales: locales\n\t});\n\t_vue2.default.use(_vueRouter2.default);\n\tvar router = new _vueRouter2.default();\n\trouter.map({\n\t  '/': {\n\t    component: _Index2.default\n\t  },\n\t  '/events': {\n\t    component: _Events2.default\n\t  }\n\t});\n\t\n\t_App2.default.methods.language = function (lang) {\n\t  _langDetect2.default.set(lang);\n\t  location.reload();\n\t};\n\trouter.start(_App2.default, '#app');\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Navbar = __webpack_require__(37);\n\t\n\tvar _Navbar2 = _interopRequireDefault(_Navbar);\n\t\n\tvar _user = __webpack_require__(13);\n\t\n\tvar _user2 = _interopRequireDefault(_user);\n\t\n\tvar _events = __webpack_require__(12);\n\t\n\tvar _events2 = _interopRequireDefault(_events);\n\t\n\tvar _version = __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"./version\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n\t\n\tvar _version2 = _interopRequireDefault(_version);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  components: {\n\t    Navbar: _Navbar2.default\n\t  },\n\t  data: function data() {\n\t    return {\n\t      version: _version2.default.data,\n\t      user: _user2.default,\n\t      events: _events2.default\n\t    };\n\t  },\n\t  methods: {\n\t    language: function language(lang) {}\n\t  }\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Eventlist = __webpack_require__(34);\n\t\n\tvar _Eventlist2 = _interopRequireDefault(_Eventlist);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  components: {\n\t    Eventlist: _Eventlist2.default\n\t  }\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Jumbotron = __webpack_require__(36);\n\t\n\tvar _Jumbotron2 = _interopRequireDefault(_Jumbotron);\n\t\n\tvar _Features = __webpack_require__(35);\n\t\n\tvar _Features2 = _interopRequireDefault(_Features);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  components: {\n\t    Jumbotron: _Jumbotron2.default,\n\t    Features: _Features2.default\n\t  }\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      events: this.$root.events.getAll()\n\t    };\n\t  },\n\t  methods: {\n\t    hr: function hr(index) {\n\t      if (this.events.length === index + 1) {\n\t        return false;\n\t      } else {\n\t        return true;\n\t      }\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {};\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      version: this.$root.version\n\t    };\n\t  }\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Userbar = __webpack_require__(38);\n\t\n\tvar _Userbar2 = _interopRequireDefault(_Userbar);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  components: {\n\t    Userbar: _Userbar2.default\n\t  },\n\t  methods: {\n\t    lang: function lang(_lang) {\n\t      this.$parent.language(_lang);\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar M;\n\t\n\texports.default = {\n\t  init: function init() {\n\t    M = this.$root.user;\n\t  },\n\t  data: function data() {\n\t    return {\n\t      flaq: M.getState()\n\t    };\n\t  },\n\t  methods: {\n\t    lang: function lang(_lang) {\n\t      this.$parent.language(_lang);\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _jsCookie = __webpack_require__(21);\n\t\n\tvar _jsCookie2 = _interopRequireDefault(_jsCookie);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  set: function set(lang) {\n\t    _jsCookie2.default.set('language', lang);\n\t  },\n\t  get: function get() {\n\t    var language = _jsCookie2.default.get('language');\n\t    if (!language) {\n\t      language = navigator.browserLanguage ? navigator.browserLanguage : navigator.language;\n\t      language = language.substr(0, 2);\n\t    }\n\t    if (language !== 'zh' && language !== 'en') {\n\t      language = 'en';\n\t    }\n\t    return language;\n\t  }\n\t};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  message: {\n\t    current_version: 'Current Version',\n\t    home: 'Home',\n\t    event: 'Event',\n\t    guest: 'Guest'\n\t  },\n\t  index: {\n\t    events: 'Events List',\n\t    flights: 'Flights List',\n\t    versionlog: 'Version Log',\n\t    description: 'SkyEvent is a website for manage flight simuate events from VATPRC. You can join a event and get more infomation,Rank system is available too. More features will online...'\n\t  },\n\t  user: {\n\t    login: 'Login',\n\t    reg: 'Register',\n\t    logout: 'Logout'\n\t  }\n\t};\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  message: {\n\t    current_version: '当前版本',\n\t    home: '首页',\n\t    event: '活动',\n\t    guest: '游客'\n\t  },\n\t  index: {\n\t    events: '活动列表',\n\t    flights: '航班列表',\n\t    versionlog: '版本更新记录',\n\t    description: 'SkyEvent是VATPRC旗下管理各种模拟飞行活动网站，您可以选择您感兴趣活动的活动报名参加，并获得活动有关的信息，您可通过参与活动加入积分评比。更多功能不断加入中...'\n\t  },\n\t  user: {\n\t    login: '登录',\n\t    reg: '注册',\n\t    logout: '登出'\n\t  }\n\t};\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  getAll: function getAll() {\n\t    return [{\n\t      title: '巴基斯坦vACC独立日纪念活动',\n\t      description: '巴基斯坦一直与中国有着良好的友谊关系，两国保持着密切的文化往来。',\n\t      image: 'http://forum.vatprc.net/uploads/monthly_07_2015/post-628-0-85587800-1437650188.png'\n\t    }, {\n\t      title: 'Tour of China 2015 & 环中国 2015 贵阳 - 三亚',\n\t      description: '本周环中国我们将飞向中国最南端旅游城市鹿城三亚！',\n\t      image: 'http://forum.vatprc.net/uploads/monthly_08_2015/post-577-0-56088900-1439629176.png'\n\t    }, {\n\t      title: '中韩双城记 北京 首尔',\n\t      description: '久违的“中韩双城记” 北京 <-> 首尔连飞活动再度归来，VATSIM中国分部与韩国分部再度合作。经典线路，经典旅程，期待各位飞友前来参加！',\n\t      image: 'http://forum.vatprc.net/uploads/monthly_01_2016/post-577-0-80573900-1453379139.png'\n\t    }];\n\t  }\n\t};\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  getState: function getState() {\n\t    return true;\n\t  }\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t * JavaScript Cookie v2.1.0\n\t * https://github.com/js-cookie/js-cookie\n\t *\n\t * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n\t * Released under the MIT license\n\t */\n\t(function (factory) {\n\t\tif (true) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else if (typeof exports === 'object') {\n\t\t\tmodule.exports = factory();\n\t\t} else {\n\t\t\tvar _OldCookies = window.Cookies;\n\t\t\tvar api = window.Cookies = factory();\n\t\t\tapi.noConflict = function () {\n\t\t\t\twindow.Cookies = _OldCookies;\n\t\t\t\treturn api;\n\t\t\t};\n\t\t}\n\t}(function () {\n\t\tfunction extend () {\n\t\t\tvar i = 0;\n\t\t\tvar result = {};\n\t\t\tfor (; i < arguments.length; i++) {\n\t\t\t\tvar attributes = arguments[ i ];\n\t\t\t\tfor (var key in attributes) {\n\t\t\t\t\tresult[key] = attributes[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\n\t\tfunction init (converter) {\n\t\t\tfunction api (key, value, attributes) {\n\t\t\t\tvar result;\n\t\n\t\t\t\t// Write\n\t\n\t\t\t\tif (arguments.length > 1) {\n\t\t\t\t\tattributes = extend({\n\t\t\t\t\t\tpath: '/'\n\t\t\t\t\t}, api.defaults, attributes);\n\t\n\t\t\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\t\t\tvar expires = new Date();\n\t\t\t\t\t\texpires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);\n\t\t\t\t\t\tattributes.expires = expires;\n\t\t\t\t\t}\n\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\tresult = JSON.stringify(value);\n\t\t\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\t\t\tvalue = result;\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {}\n\t\n\t\t\t\t\tif (!converter.write) {\n\t\t\t\t\t\tvalue = encodeURIComponent(String(value))\n\t\t\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = converter.write(value, key);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tkey = encodeURIComponent(String(key));\n\t\t\t\t\tkey = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);\n\t\t\t\t\tkey = key.replace(/[\\(\\)]/g, escape);\n\t\n\t\t\t\t\treturn (document.cookie = [\n\t\t\t\t\t\tkey, '=', value,\n\t\t\t\t\t\tattributes.expires && '; expires=' + attributes.expires.toUTCString(), // use expires attribute, max-age is not supported by IE\n\t\t\t\t\t\tattributes.path    && '; path=' + attributes.path,\n\t\t\t\t\t\tattributes.domain  && '; domain=' + attributes.domain,\n\t\t\t\t\t\tattributes.secure ? '; secure' : ''\n\t\t\t\t\t].join(''));\n\t\t\t\t}\n\t\n\t\t\t\t// Read\n\t\n\t\t\t\tif (!key) {\n\t\t\t\t\tresult = {};\n\t\t\t\t}\n\t\n\t\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t\t// in case there are no cookies at all. Also prevents odd result when\n\t\t\t\t// calling \"get()\"\n\t\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\t\tvar rdecode = /(%[0-9A-Z]{2})+/g;\n\t\t\t\tvar i = 0;\n\t\n\t\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\t\tvar name = parts[0].replace(rdecode, decodeURIComponent);\n\t\t\t\t\tvar cookie = parts.slice(1).join('=');\n\t\n\t\t\t\t\tif (cookie.charAt(0) === '\"') {\n\t\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t\t}\n\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\tcookie = converter.read ?\n\t\t\t\t\t\t\tconverter.read(cookie, name) : converter(cookie, name) ||\n\t\t\t\t\t\t\tcookie.replace(rdecode, decodeURIComponent);\n\t\n\t\t\t\t\t\tif (this.json) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\t\tresult = cookie;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif (!key) {\n\t\t\t\t\t\t\tresult[name] = cookie;\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {}\n\t\t\t\t}\n\t\n\t\t\t\treturn result;\n\t\t\t}\n\t\n\t\t\tapi.get = api.set = api;\n\t\t\tapi.getJSON = function () {\n\t\t\t\treturn api.apply({\n\t\t\t\t\tjson: true\n\t\t\t\t}, [].slice.call(arguments));\n\t\t\t};\n\t\t\tapi.defaults = {};\n\t\n\t\t\tapi.remove = function (key, attributes) {\n\t\t\t\tapi(key, '', extend(attributes, {\n\t\t\t\t\texpires: -1\n\t\t\t\t}));\n\t\t\t};\n\t\n\t\t\tapi.withConverter = init;\n\t\n\t\t\treturn api;\n\t\t}\n\t\n\t\treturn init(function () {});\n\t}));\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div><navbar></navbar><router-view></router-view><div class=container><hr><footer><div class=row><div class=col-lg-12><p>Copyright &copy; SkyEvent 2016 <span class=pull-right>Create by Ziheng Gao</span></p></div></div></footer></div></div>\";\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=container><div class=\\\"jumbotron hero-spacer\\\"><div class=row><div class=col-lg-12><h2 class=page-header>{{ $t('index.events') }}</h2></div></div><eventlist></eventlist></div></div>\";\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<jumbotron></jumbotron><features></features>\";\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div v-for=\\\"event in events\\\"><div class=row><div class=col-md-7><a href=#><img class=img-responsive :src=event.image alt=\\\"\\\"></a></div><div class=col-md-5><h3>{{ event.title }}</h3><h4>Subheading</h4><p>{{ event.description }}</p><a class=\\\"btn btn-primary\\\" href=#>View Project <span class=\\\"glyphicon glyphicon-chevron-right\\\"></span></a></div></div><hr v-show=hr($index)></div>\";\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=container><div class=row><div class=col-lg-12><h3>近期活动</h3></div></div><div class=\\\"row text-center\\\"><div class=\\\"col-md-3 col-sm-6 hero-feature\\\" v-for=\\\"event in events\\\"><div class=thumbnail><img src=\\\"{{ event.image }}\\\" alt=\\\"\\\"><div class=caption><h3>{{ event.title }}</h3><p>{{ event.description }}</p><p><a href=# class=\\\"btn btn-primary\\\">Buy Now!</a> <a href=# class=\\\"btn btn-default\\\">More Info</a></p></div></div></div></div></div>\";\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=container><div class=\\\"jumbotron hero-spacer\\\"><h1 class=text-center>SkyEvent <small>v{{ version.num }} {{ version.sign }}</small></h1><p class=text-center><small>{{ $t('message.current_version') }}: v{{ version.num }} {{ version.sign }} build{{ version.build }}</small></p><p>{{ $t('index.description') }}</p><p><a v-link=\\\"{ path: '/events' }\\\" class=\\\"btn btn-primary btn-lg\\\">{{ $t('index.events') }}</a> <a v-link=\\\"{ path: '/flights' }\\\" class=\\\"btn btn-primary btn-lg\\\">{{ $t('index.flights') }}</a> <a v-link=\\\"{ path: '/logs' }\\\" class=\\\"btn btn-primary btn-lg\\\">{{ $t('index.versionlog') }}</a></p></div></div>\";\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\" role=navigation><div class=container><div class=navbar-header><button type=button class=navbar-toggle data-toggle=collapse data-target=#bs-example-navbar-collapse-1><span class=sr-only>Toggle navigation</span> <span class=icon-bar></span> <span class=icon-bar></span> <span class=icon-bar></span></button> <a class=navbar-brand href=#>SkyEvent</a></div><div class=\\\"collapse navbar-collapse\\\"><ul class=\\\"nav navbar-nav\\\"><li v-link=\\\"{ path: '/', exact: true, activeClass: 'active' }\\\"><a v-link=\\\"{ path: '/' }\\\">{{ $t('message.home') }}</a></li><li v-link=\\\"{ path: '/events', exact: true, activeClass: 'active' }\\\"><a v-link=\\\"{ path: '/events' }\\\">{{ $t('message.event') }}</a></li></ul><ul class=\\\"nav navbar-nav navbar-right\\\"><li class=dropdown><a href=# class=dropdown-toggle data-toggle=dropdown role=button aria-haspopup=true aria-expanded=false>语言 / Languages <span class=caret></span></a><ul class=dropdown-menu><li><a class=vlink @click=\\\"lang('zh')\\\">简体中文 (Simplified Chinese)</a></li><li><a class=vlink @click=\\\"lang('en')\\\">English</a></li></ul></li><userbar></userbar></ul></div></div></nav>\";\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<li class=dropdown v-if=flaq><a href=# class=dropdown-toggle data-toggle=dropdown role=button aria-haspopup=true aria-expanded=false>{{ $t('message.guest') }} <span class=caret></span></a><ul class=dropdown-menu><li><a href=#>{{ $t('user.login') }}</a></li><li><a href=#>{{ $t('user.reg') }}</a></li></ul></li><li class=dropdown v-else><a href=# class=dropdown-toggle data-toggle=dropdown role=button aria-haspopup=true aria-expanded=false>C1航路管制员 Ziheng Gao <span class=caret></span></a><ul class=dropdown-menu><li><a href=#>Action</a></li><li><a href=#>Another action</a></li><li><a href=#>Something else here</a></li><li role=separator class=divider></li><li><a href=#>{{ $t('user.logout') }}</a></li></ul></li>\";\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * vue-i18n v2.4.0\n\t * (c) 2016 kazuya kawaguchi\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tvar babelHelpers = {};\n\t\n\tbabelHelpers.typeof = function (obj) {\n\t  return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n\t};\n\t\n\tbabelHelpers;\n\t/**\n\t *  String format template\n\t *  - Inspired:  \n\t *    https://github.com/Matt-Esch/string-template/index.js\n\t */\n\t\n\tvar RE_NARGS = /\\{([0-9a-zA-Z]+)\\}/g;\n\t\n\t/**\n\t * template\n\t *  \n\t * @param {String} string\n\t * @param {Array} ...args\n\t * @return {String}\n\t */\n\t\n\tfunction format (string) {\n\t  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t    args[_key - 1] = arguments[_key];\n\t  }\n\t\n\t  if (args.length === 1 && babelHelpers.typeof(args[0]) === 'object') {\n\t    args = args[0];\n\t  }\n\t\n\t  if (!args || !args.hasOwnProperty) {\n\t    args = {};\n\t  }\n\t\n\t  return string.replace(RE_NARGS, function (match, i, index) {\n\t    var result = undefined;\n\t\n\t    if (string[index - 1] === '{' && string[index + match.length] === '}') {\n\t      return i;\n\t    } else {\n\t      result = args.hasOwnProperty(i) ? args[i] : null;\n\t      if (result === null || result === undefined) {\n\t        return '';\n\t      }\n\t\n\t      return result;\n\t    }\n\t  });\n\t}\n\t\n\t/**\n\t * Version compare\n\t * - Inspired:\n\t *   https://github.com/omichelsen/compare-versions\n\t */\n\t\n\tvar PATCH_PATTERN = /-([\\w-.]+)/;\n\t\n\tfunction split(v) {\n\t  var temp = v.split('.');\n\t  var arr = temp.splice(0, 2);\n\t  arr.push(temp.join('.'));\n\t  return arr;\n\t}\n\t\n\t/**\n\t * compare\n\t *\n\t * @param {String} v1\n\t * @param {String} v2\n\t * @return {Number}\n\t */\n\t\n\tfunction compare (v1, v2) {\n\t  var s1 = split(v1);\n\t  var s2 = split(v2);\n\t\n\t  for (var i = 0; i < 3; i++) {\n\t    var n1 = parseInt(s1[i] || 0, 10);\n\t    var n2 = parseInt(s2[i] || 0, 10);\n\t\n\t    if (n1 > n2) {\n\t      return 1;\n\t    }\n\t    if (n2 > n1) {\n\t      return -1;\n\t    }\n\t  }\n\t\n\t  if ((s1[2] + s2[2] + '').indexOf('-') > -1) {\n\t    var p1 = (PATCH_PATTERN.exec(s1[2]) || [''])[0];\n\t    var p2 = (PATCH_PATTERN.exec(s2[2]) || [''])[0];\n\t\n\t    if (p1 === '') {\n\t      return 1;\n\t    }\n\t    if (p2 === '') {\n\t      return -1;\n\t    }\n\t    if (p1 > p2) {\n\t      return 1;\n\t    }\n\t    if (p2 > p1) {\n\t      return -1;\n\t    }\n\t  }\n\t\n\t  return 0;\n\t}\n\t\n\t/**\n\t * extend\n\t * \n\t * @param {Vue} Vue\n\t * @param {Object} locales\n\t * @return {Vue}\n\t */\n\t\n\tfunction extend (Vue, locales) {\n\t  var getPath = Vue.version && compare('1.0.8', Vue.version) === -1 ? Vue.parsers.path.getPath : Vue.parsers.path.get;\n\t  var util = Vue.util;\n\t\n\t  function getVal(key, lang, args) {\n\t    var value = key;\n\t    try {\n\t      var val = getPath(locales[lang], key) || locales[lang][key];\n\t      value = (args ? format(val, args) : val) || key;\n\t    } catch (e) {\n\t      value = key;\n\t    }\n\t    return value;\n\t  }\n\t\n\t  /**\n\t   * Vue.t\n\t   *\n\t   * @param {String} key\n\t   * @param {Array} ...args\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.t = function (key) {\n\t    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t      args[_key - 1] = arguments[_key];\n\t    }\n\t\n\t    if (!key) {\n\t      return '';\n\t    }\n\t\n\t    var language = Vue.config.lang;\n\t    if (args.length === 1) {\n\t      if (util.isObject(args[0]) || util.isArray(args[0])) {\n\t        args = args[0];\n\t      } else if (typeof args[0] === 'string') {\n\t        language = args[0];\n\t      }\n\t    } else if (args.length === 2) {\n\t      if (typeof args[0] === 'string') {\n\t        language = args[0];\n\t      }\n\t      if (util.isObject(args[1]) || util.isArray(args[1])) {\n\t        args = args[1];\n\t      }\n\t    }\n\t\n\t    return getVal(key, language, args);\n\t  };\n\t\n\t  /**\n\t   * $t\n\t   *\n\t   * @param {String} key\n\t   * @param {Array} ...args\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$t = function (key) {\n\t    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n\t      args[_key2 - 1] = arguments[_key2];\n\t    }\n\t\n\t    return Vue.t.apply(Vue, [key].concat(args));\n\t  };\n\t\n\t  return Vue;\n\t}\n\t\n\t/**\n\t * plugin\n\t *\n\t * @param {Object} Vue\n\t * @param {Object} opts\n\t */\n\t\n\tfunction plugin(Vue) {\n\t  var opts = arguments.length <= 1 || arguments[1] === undefined ? { lang: 'en', locales: {} } : arguments[1];\n\t\n\t  defineConfig(Vue.config, opts.lang);\n\t  extend(Vue, opts.locales);\n\t}\n\t\n\t/**\n\t * defineConfig\n\t *\n\t * This function define `lang` property to `Vue.config`.\n\t *\n\t * @param {Object} config\n\t * @param {String} lang\n\t * @private\n\t */\n\t\n\tfunction defineConfig(config, lang) {\n\t  Object.defineProperty(config, 'lang', {\n\t    get: function get() {\n\t      return lang;\n\t    },\n\t    set: function set(val) {\n\t      lang = val;\n\t    }\n\t  });\n\t}\n\t\n\tplugin.version = '2.4.0';\n\t\n\tmodule.exports = plugin;\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(14)\n\t__vue_script__ = __webpack_require__(1)\n\t__vue_template__ = __webpack_require__(22)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(15)\n\t__vue_script__ = __webpack_require__(2)\n\t__vue_template__ = __webpack_require__(23)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(3)\n\t__vue_template__ = __webpack_require__(24)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(16)\n\t__vue_script__ = __webpack_require__(4)\n\t__vue_template__ = __webpack_require__(25)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(17)\n\t__vue_script__ = __webpack_require__(5)\n\t__vue_template__ = __webpack_require__(26)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(18)\n\t__vue_script__ = __webpack_require__(6)\n\t__vue_template__ = __webpack_require__(27)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(19)\n\t__vue_script__ = __webpack_require__(7)\n\t__vue_template__ = __webpack_require__(28)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(20)\n\t__vue_script__ = __webpack_require__(8)\n\t__vue_template__ = __webpack_require__(29)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * vue-router v0.7.10\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  global.VueRouter = factory();\n\t}(this, function () { 'use strict';\n\t\n\t  var babelHelpers = {};\n\t\n\t  babelHelpers.classCallCheck = function (instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  };\n\t  function Target(path, matcher, delegate) {\n\t    this.path = path;\n\t    this.matcher = matcher;\n\t    this.delegate = delegate;\n\t  }\n\t\n\t  Target.prototype = {\n\t    to: function to(target, callback) {\n\t      var delegate = this.delegate;\n\t\n\t      if (delegate && delegate.willAddRoute) {\n\t        target = delegate.willAddRoute(this.matcher.target, target);\n\t      }\n\t\n\t      this.matcher.add(this.path, target);\n\t\n\t      if (callback) {\n\t        if (callback.length === 0) {\n\t          throw new Error(\"You must have an argument in the function passed to `to`\");\n\t        }\n\t        this.matcher.addChild(this.path, target, callback, this.delegate);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t\n\t  function Matcher(target) {\n\t    this.routes = {};\n\t    this.children = {};\n\t    this.target = target;\n\t  }\n\t\n\t  Matcher.prototype = {\n\t    add: function add(path, handler) {\n\t      this.routes[path] = handler;\n\t    },\n\t\n\t    addChild: function addChild(path, target, callback, delegate) {\n\t      var matcher = new Matcher(target);\n\t      this.children[path] = matcher;\n\t\n\t      var match = generateMatch(path, matcher, delegate);\n\t\n\t      if (delegate && delegate.contextEntered) {\n\t        delegate.contextEntered(target, match);\n\t      }\n\t\n\t      callback(match);\n\t    }\n\t  };\n\t\n\t  function generateMatch(startingPath, matcher, delegate) {\n\t    return function (path, nestedCallback) {\n\t      var fullPath = startingPath + path;\n\t\n\t      if (nestedCallback) {\n\t        nestedCallback(generateMatch(fullPath, matcher, delegate));\n\t      } else {\n\t        return new Target(startingPath + path, matcher, delegate);\n\t      }\n\t    };\n\t  }\n\t\n\t  function addRoute(routeArray, path, handler) {\n\t    var len = 0;\n\t    for (var i = 0, l = routeArray.length; i < l; i++) {\n\t      len += routeArray[i].path.length;\n\t    }\n\t\n\t    path = path.substr(len);\n\t    var route = { path: path, handler: handler };\n\t    routeArray.push(route);\n\t  }\n\t\n\t  function eachRoute(baseRoute, matcher, callback, binding) {\n\t    var routes = matcher.routes;\n\t\n\t    for (var path in routes) {\n\t      if (routes.hasOwnProperty(path)) {\n\t        var routeArray = baseRoute.slice();\n\t        addRoute(routeArray, path, routes[path]);\n\t\n\t        if (matcher.children[path]) {\n\t          eachRoute(routeArray, matcher.children[path], callback, binding);\n\t        } else {\n\t          callback.call(binding, routeArray);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function map (callback, addRouteCallback) {\n\t    var matcher = new Matcher();\n\t\n\t    callback(generateMatch(\"\", matcher, this.delegate));\n\t\n\t    eachRoute([], matcher, function (route) {\n\t      if (addRouteCallback) {\n\t        addRouteCallback(this, route);\n\t      } else {\n\t        this.add(route);\n\t      }\n\t    }, this);\n\t  }\n\t\n\t  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\t\n\t  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\t\n\t  function isArray(test) {\n\t    return Object.prototype.toString.call(test) === \"[object Array]\";\n\t  }\n\t\n\t  // A Segment represents a segment in the original route description.\n\t  // Each Segment type provides an `eachChar` and `regex` method.\n\t  //\n\t  // The `eachChar` method invokes the callback with one or more character\n\t  // specifications. A character specification consumes one or more input\n\t  // characters.\n\t  //\n\t  // The `regex` method returns a regex fragment for the segment. If the\n\t  // segment is a dynamic of star segment, the regex fragment also includes\n\t  // a capture.\n\t  //\n\t  // A character specification contains:\n\t  //\n\t  // * `validChars`: a String with a list of all valid characters, or\n\t  // * `invalidChars`: a String with a list of all invalid characters\n\t  // * `repeat`: true if the character specification can repeat\n\t\n\t  function StaticSegment(string) {\n\t    this.string = string;\n\t  }\n\t  StaticSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      var string = this.string,\n\t          ch;\n\t\n\t      for (var i = 0, l = string.length; i < l; i++) {\n\t        ch = string.charAt(i);\n\t        callback({ validChars: ch });\n\t      }\n\t    },\n\t\n\t    regex: function regex() {\n\t      return this.string.replace(escapeRegex, '\\\\$1');\n\t    },\n\t\n\t    generate: function generate() {\n\t      return this.string;\n\t    }\n\t  };\n\t\n\t  function DynamicSegment(name) {\n\t    this.name = name;\n\t  }\n\t  DynamicSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"/\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"([^/]+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function StarSegment(name) {\n\t    this.name = name;\n\t  }\n\t  StarSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"(.+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function EpsilonSegment() {}\n\t  EpsilonSegment.prototype = {\n\t    eachChar: function eachChar() {},\n\t    regex: function regex() {\n\t      return \"\";\n\t    },\n\t    generate: function generate() {\n\t      return \"\";\n\t    }\n\t  };\n\t\n\t  function parse(route, names, specificity) {\n\t    // normalize route as not starting with a \"/\". Recognition will\n\t    // also normalize.\n\t    if (route.charAt(0) === \"/\") {\n\t      route = route.substr(1);\n\t    }\n\t\n\t    var segments = route.split(\"/\"),\n\t        results = [];\n\t\n\t    // A routes has specificity determined by the order that its different segments\n\t    // appear in. This system mirrors how the magnitude of numbers written as strings\n\t    // works.\n\t    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n\t    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n\t    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n\t    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n\t    // leading symbol, \"1\".\n\t    // The rule is that symbols to the left carry more weight than symbols to the right\n\t    // when a number is written out as a string. In the above strings, the leading digit\n\t    // represents how many 100's are in the number, and it carries more weight than the middle\n\t    // number which represents how many 10's are in the number.\n\t    // This system of number magnitude works well for route specificity, too. A route written as\n\t    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n\t    // `x`, irrespective of the other parts.\n\t    // Because of this similarity, we assign each type of segment a number value written as a\n\t    // string. We can find the specificity of compound routes by concatenating these strings\n\t    // together, from left to right. After we have looped through all of the segments,\n\t    // we convert the string to a number.\n\t    specificity.val = '';\n\t\n\t    for (var i = 0, l = segments.length; i < l; i++) {\n\t      var segment = segments[i],\n\t          match;\n\t\n\t      if (match = segment.match(/^:([^\\/]+)$/)) {\n\t        results.push(new DynamicSegment(match[1]));\n\t        names.push(match[1]);\n\t        specificity.val += '3';\n\t      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n\t        results.push(new StarSegment(match[1]));\n\t        specificity.val += '2';\n\t        names.push(match[1]);\n\t      } else if (segment === \"\") {\n\t        results.push(new EpsilonSegment());\n\t        specificity.val += '1';\n\t      } else {\n\t        results.push(new StaticSegment(segment));\n\t        specificity.val += '4';\n\t      }\n\t    }\n\t\n\t    specificity.val = +specificity.val;\n\t\n\t    return results;\n\t  }\n\t\n\t  // A State has a character specification and (`charSpec`) and a list of possible\n\t  // subsequent states (`nextStates`).\n\t  //\n\t  // If a State is an accepting state, it will also have several additional\n\t  // properties:\n\t  //\n\t  // * `regex`: A regular expression that is used to extract parameters from paths\n\t  //   that reached this accepting state.\n\t  // * `handlers`: Information on how to convert the list of captures into calls\n\t  //   to registered handlers with the specified parameters\n\t  // * `types`: How many static, dynamic or star segments in this route. Used to\n\t  //   decide which route to use if multiple registered routes match a path.\n\t  //\n\t  // Currently, State is implemented naively by looping over `nextStates` and\n\t  // comparing a character specification against a character. A more efficient\n\t  // implementation would use a hash of keys pointing at one or more next states.\n\t\n\t  function State(charSpec) {\n\t    this.charSpec = charSpec;\n\t    this.nextStates = [];\n\t  }\n\t\n\t  State.prototype = {\n\t    get: function get(charSpec) {\n\t      var nextStates = this.nextStates;\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        var child = nextStates[i];\n\t\n\t        var isEqual = child.charSpec.validChars === charSpec.validChars;\n\t        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\t\n\t        if (isEqual) {\n\t          return child;\n\t        }\n\t      }\n\t    },\n\t\n\t    put: function put(charSpec) {\n\t      var state;\n\t\n\t      // If the character specification already exists in a child of the current\n\t      // state, just return that state.\n\t      if (state = this.get(charSpec)) {\n\t        return state;\n\t      }\n\t\n\t      // Make a new state for the character spec\n\t      state = new State(charSpec);\n\t\n\t      // Insert the new state as a child of the current state\n\t      this.nextStates.push(state);\n\t\n\t      // If this character specification repeats, insert the new state as a child\n\t      // of itself. Note that this will not trigger an infinite loop because each\n\t      // transition during recognition consumes a character.\n\t      if (charSpec.repeat) {\n\t        state.nextStates.push(state);\n\t      }\n\t\n\t      // Return the new state\n\t      return state;\n\t    },\n\t\n\t    // Find a list of child states matching the next character\n\t    match: function match(ch) {\n\t      // DEBUG \"Processing `\" + ch + \"`:\"\n\t      var nextStates = this.nextStates,\n\t          child,\n\t          charSpec,\n\t          chars;\n\t\n\t      // DEBUG \"  \" + debugState(this)\n\t      var returned = [];\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        child = nextStates[i];\n\t\n\t        charSpec = child.charSpec;\n\t\n\t        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) !== -1) {\n\t            returned.push(child);\n\t          }\n\t        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) === -1) {\n\t            returned.push(child);\n\t          }\n\t        }\n\t      }\n\t\n\t      return returned;\n\t    }\n\t\n\t    /** IF DEBUG\n\t    , debug: function() {\n\t      var charSpec = this.charSpec,\n\t          debug = \"[\",\n\t          chars = charSpec.validChars || charSpec.invalidChars;\n\t       if (charSpec.invalidChars) { debug += \"^\"; }\n\t      debug += chars;\n\t      debug += \"]\";\n\t       if (charSpec.repeat) { debug += \"+\"; }\n\t       return debug;\n\t    }\n\t    END IF **/\n\t  };\n\t\n\t  /** IF DEBUG\n\t  function debug(log) {\n\t    console.log(log);\n\t  }\n\t\n\t  function debugState(state) {\n\t    return state.nextStates.map(function(n) {\n\t      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n\t      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n\t    }).join(\", \")\n\t  }\n\t  END IF **/\n\t\n\t  // Sort the routes by specificity\n\t  function sortSolutions(states) {\n\t    return states.sort(function (a, b) {\n\t      return b.specificity.val - a.specificity.val;\n\t    });\n\t  }\n\t\n\t  function recognizeChar(states, ch) {\n\t    var nextStates = [];\n\t\n\t    for (var i = 0, l = states.length; i < l; i++) {\n\t      var state = states[i];\n\t\n\t      nextStates = nextStates.concat(state.match(ch));\n\t    }\n\t\n\t    return nextStates;\n\t  }\n\t\n\t  var oCreate = Object.create || function (proto) {\n\t    function F() {}\n\t    F.prototype = proto;\n\t    return new F();\n\t  };\n\t\n\t  function RecognizeResults(queryParams) {\n\t    this.queryParams = queryParams || {};\n\t  }\n\t  RecognizeResults.prototype = oCreate({\n\t    splice: Array.prototype.splice,\n\t    slice: Array.prototype.slice,\n\t    push: Array.prototype.push,\n\t    length: 0,\n\t    queryParams: null\n\t  });\n\t\n\t  function findHandler(state, path, queryParams) {\n\t    var handlers = state.handlers,\n\t        regex = state.regex;\n\t    var captures = path.match(regex),\n\t        currentCapture = 1;\n\t    var result = new RecognizeResults(queryParams);\n\t\n\t    for (var i = 0, l = handlers.length; i < l; i++) {\n\t      var handler = handlers[i],\n\t          names = handler.names,\n\t          params = {};\n\t\n\t      for (var j = 0, m = names.length; j < m; j++) {\n\t        params[names[j]] = captures[currentCapture++];\n\t      }\n\t\n\t      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n\t    }\n\t\n\t    return result;\n\t  }\n\t\n\t  function addSegment(currentState, segment) {\n\t    segment.eachChar(function (ch) {\n\t      var state;\n\t\n\t      currentState = currentState.put(ch);\n\t    });\n\t\n\t    return currentState;\n\t  }\n\t\n\t  function decodeQueryParamPart(part) {\n\t    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n\t    part = part.replace(/\\+/gm, '%20');\n\t    return decodeURIComponent(part);\n\t  }\n\t\n\t  // The main interface\n\t\n\t  var RouteRecognizer = function RouteRecognizer() {\n\t    this.rootState = new State();\n\t    this.names = {};\n\t  };\n\t\n\t  RouteRecognizer.prototype = {\n\t    add: function add(routes, options) {\n\t      var currentState = this.rootState,\n\t          regex = \"^\",\n\t          specificity = {},\n\t          handlers = [],\n\t          allSegments = [],\n\t          name;\n\t\n\t      var isEmpty = true;\n\t\n\t      for (var i = 0, l = routes.length; i < l; i++) {\n\t        var route = routes[i],\n\t            names = [];\n\t\n\t        var segments = parse(route.path, names, specificity);\n\t\n\t        allSegments = allSegments.concat(segments);\n\t\n\t        for (var j = 0, m = segments.length; j < m; j++) {\n\t          var segment = segments[j];\n\t\n\t          if (segment instanceof EpsilonSegment) {\n\t            continue;\n\t          }\n\t\n\t          isEmpty = false;\n\t\n\t          // Add a \"/\" for the new segment\n\t          currentState = currentState.put({ validChars: \"/\" });\n\t          regex += \"/\";\n\t\n\t          // Add a representation of the segment to the NFA and regex\n\t          currentState = addSegment(currentState, segment);\n\t          regex += segment.regex();\n\t        }\n\t\n\t        var handler = { handler: route.handler, names: names };\n\t        handlers.push(handler);\n\t      }\n\t\n\t      if (isEmpty) {\n\t        currentState = currentState.put({ validChars: \"/\" });\n\t        regex += \"/\";\n\t      }\n\t\n\t      currentState.handlers = handlers;\n\t      currentState.regex = new RegExp(regex + \"$\");\n\t      currentState.specificity = specificity;\n\t\n\t      if (name = options && options.as) {\n\t        this.names[name] = {\n\t          segments: allSegments,\n\t          handlers: handlers\n\t        };\n\t      }\n\t    },\n\t\n\t    handlersFor: function handlersFor(name) {\n\t      var route = this.names[name],\n\t          result = [];\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      for (var i = 0, l = route.handlers.length; i < l; i++) {\n\t        result.push(route.handlers[i]);\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    hasRoute: function hasRoute(name) {\n\t      return !!this.names[name];\n\t    },\n\t\n\t    generate: function generate(name, params) {\n\t      var route = this.names[name],\n\t          output = \"\";\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      var segments = route.segments;\n\t\n\t      for (var i = 0, l = segments.length; i < l; i++) {\n\t        var segment = segments[i];\n\t\n\t        if (segment instanceof EpsilonSegment) {\n\t          continue;\n\t        }\n\t\n\t        output += \"/\";\n\t        output += segment.generate(params);\n\t      }\n\t\n\t      if (output.charAt(0) !== '/') {\n\t        output = '/' + output;\n\t      }\n\t\n\t      if (params && params.queryParams) {\n\t        output += this.generateQueryString(params.queryParams);\n\t      }\n\t\n\t      return output;\n\t    },\n\t\n\t    generateQueryString: function generateQueryString(params) {\n\t      var pairs = [];\n\t      var keys = [];\n\t      for (var key in params) {\n\t        if (params.hasOwnProperty(key)) {\n\t          keys.push(key);\n\t        }\n\t      }\n\t      keys.sort();\n\t      for (var i = 0, len = keys.length; i < len; i++) {\n\t        key = keys[i];\n\t        var value = params[key];\n\t        if (value == null) {\n\t          continue;\n\t        }\n\t        var pair = encodeURIComponent(key);\n\t        if (isArray(value)) {\n\t          for (var j = 0, l = value.length; j < l; j++) {\n\t            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n\t            pairs.push(arrayPair);\n\t          }\n\t        } else {\n\t          pair += \"=\" + encodeURIComponent(value);\n\t          pairs.push(pair);\n\t        }\n\t      }\n\t\n\t      if (pairs.length === 0) {\n\t        return '';\n\t      }\n\t\n\t      return \"?\" + pairs.join(\"&\");\n\t    },\n\t\n\t    parseQueryString: function parseQueryString(queryString) {\n\t      var pairs = queryString.split(\"&\"),\n\t          queryParams = {};\n\t      for (var i = 0; i < pairs.length; i++) {\n\t        var pair = pairs[i].split('='),\n\t            key = decodeQueryParamPart(pair[0]),\n\t            keyLength = key.length,\n\t            isArray = false,\n\t            value;\n\t        if (pair.length === 1) {\n\t          value = 'true';\n\t        } else {\n\t          //Handle arrays\n\t          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n\t            isArray = true;\n\t            key = key.slice(0, keyLength - 2);\n\t            if (!queryParams[key]) {\n\t              queryParams[key] = [];\n\t            }\n\t          }\n\t          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n\t        }\n\t        if (isArray) {\n\t          queryParams[key].push(value);\n\t        } else {\n\t          queryParams[key] = value;\n\t        }\n\t      }\n\t      return queryParams;\n\t    },\n\t\n\t    recognize: function recognize(path) {\n\t      var states = [this.rootState],\n\t          pathLen,\n\t          i,\n\t          l,\n\t          queryStart,\n\t          queryParams = {},\n\t          isSlashDropped = false;\n\t\n\t      queryStart = path.indexOf('?');\n\t      if (queryStart !== -1) {\n\t        var queryString = path.substr(queryStart + 1, path.length);\n\t        path = path.substr(0, queryStart);\n\t        queryParams = this.parseQueryString(queryString);\n\t      }\n\t\n\t      path = decodeURI(path);\n\t\n\t      // DEBUG GROUP path\n\t\n\t      if (path.charAt(0) !== \"/\") {\n\t        path = \"/\" + path;\n\t      }\n\t\n\t      pathLen = path.length;\n\t      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n\t        path = path.substr(0, pathLen - 1);\n\t        isSlashDropped = true;\n\t      }\n\t\n\t      for (i = 0, l = path.length; i < l; i++) {\n\t        states = recognizeChar(states, path.charAt(i));\n\t        if (!states.length) {\n\t          break;\n\t        }\n\t      }\n\t\n\t      // END DEBUG GROUP\n\t\n\t      var solutions = [];\n\t      for (i = 0, l = states.length; i < l; i++) {\n\t        if (states[i].handlers) {\n\t          solutions.push(states[i]);\n\t        }\n\t      }\n\t\n\t      states = sortSolutions(solutions);\n\t\n\t      var state = solutions[0];\n\t\n\t      if (state && state.handlers) {\n\t        // if a trailing slash was dropped and a star segment is the last segment\n\t        // specified, put the trailing slash back\n\t        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n\t          path = path + \"/\";\n\t        }\n\t        return findHandler(state, path, queryParams);\n\t      }\n\t    }\n\t  };\n\t\n\t  RouteRecognizer.prototype.map = map;\n\t\n\t  RouteRecognizer.VERSION = '0.1.9';\n\t\n\t  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\t\n\t  // export default for holding the Vue reference\n\t  var exports$1 = {};\n\t  /**\n\t   * Warn stuff.\n\t   *\n\t   * @param {String} msg\n\t   */\n\t\n\t  function warn(msg) {\n\t    /* istanbul ignore next */\n\t    if (window.console) {\n\t      console.warn('[vue-router] ' + msg);\n\t      if (!exports$1.Vue || exports$1.Vue.config.debug) {\n\t        console.warn(new Error('warning stack trace:').stack);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Resolve a relative path.\n\t   *\n\t   * @param {String} base\n\t   * @param {String} relative\n\t   * @param {Boolean} append\n\t   * @return {String}\n\t   */\n\t\n\t  function resolvePath(base, relative, append) {\n\t    var query = base.match(/(\\?.*)$/);\n\t    if (query) {\n\t      query = query[1];\n\t      base = base.slice(0, -query.length);\n\t    }\n\t    // a query!\n\t    if (relative.charAt(0) === '?') {\n\t      return base + relative;\n\t    }\n\t    var stack = base.split('/');\n\t    // remove trailing segment if:\n\t    // - not appending\n\t    // - appending to trailing slash (last segment is empty)\n\t    if (!append || !stack[stack.length - 1]) {\n\t      stack.pop();\n\t    }\n\t    // resolve relative path\n\t    var segments = relative.replace(/^\\//, '').split('/');\n\t    for (var i = 0; i < segments.length; i++) {\n\t      var segment = segments[i];\n\t      if (segment === '.') {\n\t        continue;\n\t      } else if (segment === '..') {\n\t        stack.pop();\n\t      } else {\n\t        stack.push(segment);\n\t      }\n\t    }\n\t    // ensure leading slash\n\t    if (stack[0] !== '') {\n\t      stack.unshift('');\n\t    }\n\t    return stack.join('/');\n\t  }\n\t\n\t  /**\n\t   * Forgiving check for a promise\n\t   *\n\t   * @param {Object} p\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isPromise(p) {\n\t    return p && typeof p.then === 'function';\n\t  }\n\t\n\t  /**\n\t   * Retrive a route config field from a component instance\n\t   * OR a component contructor.\n\t   *\n\t   * @param {Function|Vue} component\n\t   * @param {String} name\n\t   * @return {*}\n\t   */\n\t\n\t  function getRouteConfig(component, name) {\n\t    var options = component && (component.$options || component.options);\n\t    return options && options.route && options.route[name];\n\t  }\n\t\n\t  /**\n\t   * Resolve an async component factory. Have to do a dirty\n\t   * mock here because of Vue core's internal API depends on\n\t   * an ID check.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Function} cb\n\t   */\n\t\n\t  var resolver = undefined;\n\t\n\t  function resolveAsyncComponent(handler, cb) {\n\t    if (!resolver) {\n\t      resolver = {\n\t        resolve: exports$1.Vue.prototype._resolveComponent,\n\t        $options: {\n\t          components: {\n\t            _: handler.component\n\t          }\n\t        }\n\t      };\n\t    } else {\n\t      resolver.$options.components._ = handler.component;\n\t    }\n\t    resolver.resolve('_', function (Component) {\n\t      handler.component = Component;\n\t      cb(Component);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Map the dynamic segments in a path to params.\n\t   *\n\t   * @param {String} path\n\t   * @param {Object} params\n\t   * @param {Object} query\n\t   */\n\t\n\t  function mapParams(path, params, query) {\n\t    if (params === undefined) params = {};\n\t\n\t    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n\t      var val = params[key];\n\t      /* istanbul ignore if */\n\t      if (!val) {\n\t        warn('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n\t      }\n\t      return val || '';\n\t    });\n\t    if (query) {\n\t      path += genQuery(query);\n\t    }\n\t    return path;\n\t  }\n\t\n\t  var hashRE = /#.*$/;\n\t\n\t  var HTML5History = (function () {\n\t    function HTML5History(_ref) {\n\t      var root = _ref.root;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HTML5History);\n\t\n\t      if (root) {\n\t        // make sure there's the starting slash\n\t        if (root.charAt(0) !== '/') {\n\t          root = '/' + root;\n\t        }\n\t        // remove trailing slash\n\t        this.root = root.replace(/\\/$/, '');\n\t        this.rootRE = new RegExp('^\\\\' + this.root);\n\t      } else {\n\t        this.root = null;\n\t      }\n\t      this.onChange = onChange;\n\t      // check base tag\n\t      var baseEl = document.querySelector('base');\n\t      this.base = baseEl && baseEl.getAttribute('href');\n\t    }\n\t\n\t    HTML5History.prototype.start = function start() {\n\t      var _this = this;\n\t\n\t      this.listener = function (e) {\n\t        var url = decodeURI(location.pathname + location.search);\n\t        if (_this.root) {\n\t          url = url.replace(_this.rootRE, '');\n\t        }\n\t        _this.onChange(url, e && e.state, location.hash);\n\t      };\n\t      window.addEventListener('popstate', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HTML5History.prototype.stop = function stop() {\n\t      window.removeEventListener('popstate', this.listener);\n\t    };\n\t\n\t    HTML5History.prototype.go = function go(path, replace, append) {\n\t      var url = this.formatPath(path, append);\n\t      if (replace) {\n\t        history.replaceState({}, '', url);\n\t      } else {\n\t        // record scroll position by replacing current state\n\t        history.replaceState({\n\t          pos: {\n\t            x: window.pageXOffset,\n\t            y: window.pageYOffset\n\t          }\n\t        }, '');\n\t        // then push new state\n\t        history.pushState({}, '', url);\n\t      }\n\t      var hashMatch = path.match(hashRE);\n\t      var hash = hashMatch && hashMatch[0];\n\t      path = url\n\t      // strip hash so it doesn't mess up params\n\t      .replace(hashRE, '')\n\t      // remove root before matching\n\t      .replace(this.rootRE, '');\n\t      this.onChange(path, null, hash);\n\t    };\n\t\n\t    HTML5History.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/'\n\t      // absolute path\n\t      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n\t    };\n\t\n\t    return HTML5History;\n\t  })();\n\t\n\t  var HashHistory = (function () {\n\t    function HashHistory(_ref) {\n\t      var hashbang = _ref.hashbang;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HashHistory);\n\t\n\t      this.hashbang = hashbang;\n\t      this.onChange = onChange;\n\t    }\n\t\n\t    HashHistory.prototype.start = function start() {\n\t      var self = this;\n\t      this.listener = function () {\n\t        var path = location.hash;\n\t        var raw = path.replace(/^#!?/, '');\n\t        // always\n\t        if (raw.charAt(0) !== '/') {\n\t          raw = '/' + raw;\n\t        }\n\t        var formattedPath = self.formatPath(raw);\n\t        if (formattedPath !== path) {\n\t          location.replace(formattedPath);\n\t          return;\n\t        }\n\t        // determine query\n\t        // note it's possible to have queries in both the actual URL\n\t        // and the hash fragment itself.\n\t        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n\t        self.onChange(decodeURI(path.replace(/^#!?/, '') + query));\n\t      };\n\t      window.addEventListener('hashchange', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HashHistory.prototype.stop = function stop() {\n\t      window.removeEventListener('hashchange', this.listener);\n\t    };\n\t\n\t    HashHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.formatPath(path, append);\n\t      if (replace) {\n\t        location.replace(path);\n\t      } else {\n\t        location.hash = path;\n\t      }\n\t    };\n\t\n\t    HashHistory.prototype.formatPath = function formatPath(path, append) {\n\t      var isAbsoloute = path.charAt(0) === '/';\n\t      var prefix = '#' + (this.hashbang ? '!' : '');\n\t      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n\t    };\n\t\n\t    return HashHistory;\n\t  })();\n\t\n\t  var AbstractHistory = (function () {\n\t    function AbstractHistory(_ref) {\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, AbstractHistory);\n\t\n\t      this.onChange = onChange;\n\t      this.currentPath = '/';\n\t    }\n\t\n\t    AbstractHistory.prototype.start = function start() {\n\t      this.onChange('/');\n\t    };\n\t\n\t    AbstractHistory.prototype.stop = function stop() {\n\t      // noop\n\t    };\n\t\n\t    AbstractHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.currentPath = this.formatPath(path, append);\n\t      this.onChange(path);\n\t    };\n\t\n\t    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n\t    };\n\t\n\t    return AbstractHistory;\n\t  })();\n\t\n\t  /**\n\t   * Determine the reusability of an existing router view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function canReuse(view, handler, transition) {\n\t    var component = view.childVM;\n\t    if (!component || !handler) {\n\t      return false;\n\t    }\n\t    // important: check view.Component here because it may\n\t    // have been changed in activate hook\n\t    if (view.Component !== handler.component) {\n\t      return false;\n\t    }\n\t    var canReuseFn = getRouteConfig(component, 'canReuse');\n\t    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n\t      to: transition.to,\n\t      from: transition.from\n\t    }) : true; // defaults to true\n\t  }\n\t\n\t  /**\n\t   * Check if a component can deactivate.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canDeactivate(view, transition, next) {\n\t    var fromComponent = view.childVM;\n\t    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHook(hook, fromComponent, next, {\n\t        expectBoolean: true\n\t      });\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Check if a component can activate.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canActivate(handler, transition, next) {\n\t    resolveAsyncComponent(handler, function (Component) {\n\t      // have to check due to async-ness\n\t      if (transition.aborted) {\n\t        return;\n\t      }\n\t      // determine if this component can be activated\n\t      var hook = getRouteConfig(Component, 'canActivate');\n\t      if (!hook) {\n\t        next();\n\t      } else {\n\t        transition.callHook(hook, null, next, {\n\t          expectBoolean: true\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Call deactivate hooks for existing router-views.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function deactivate(view, transition, next) {\n\t    var component = view.childVM;\n\t    var hook = getRouteConfig(component, 'deactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHooks(hook, component, next);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Activate / switch component for a router-view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Number} depth\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function activate(view, transition, depth, cb, reuse) {\n\t    var handler = transition.activateQueue[depth];\n\t    if (!handler) {\n\t      saveChildView(view);\n\t      if (view._bound) {\n\t        view.setComponent(null);\n\t      }\n\t      cb && cb();\n\t      return;\n\t    }\n\t\n\t    var Component = view.Component = handler.component;\n\t    var activateHook = getRouteConfig(Component, 'activate');\n\t    var dataHook = getRouteConfig(Component, 'data');\n\t    var waitForData = getRouteConfig(Component, 'waitForData');\n\t\n\t    view.depth = depth;\n\t    view.activated = false;\n\t\n\t    var component = undefined;\n\t    var loading = !!(dataHook && !waitForData);\n\t\n\t    // \"reuse\" is a flag passed down when the parent view is\n\t    // either reused via keep-alive or as a child of a kept-alive view.\n\t    // of course we can only reuse if the current kept-alive instance\n\t    // is of the correct type.\n\t    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\t\n\t    if (reuse) {\n\t      // just reuse\n\t      component = view.childVM;\n\t      component.$loadingRouteData = loading;\n\t    } else {\n\t      saveChildView(view);\n\t\n\t      // unbuild current component. this step also destroys\n\t      // and removes all nested child views.\n\t      view.unbuild(true);\n\t\n\t      // build the new component. this will also create the\n\t      // direct child view of the current one. it will register\n\t      // itself as view.childView.\n\t      component = view.build({\n\t        _meta: {\n\t          $loadingRouteData: loading\n\t        },\n\t        created: function created() {\n\t          this._routerView = view;\n\t        }\n\t      });\n\t\n\t      // handle keep-alive.\n\t      // when a kept-alive child vm is restored, we need to\n\t      // add its cached child views into the router's view list,\n\t      // and also properly update current view's child view.\n\t      if (view.keepAlive) {\n\t        component.$loadingRouteData = loading;\n\t        var cachedChildView = component._keepAliveRouterView;\n\t        if (cachedChildView) {\n\t          view.childView = cachedChildView;\n\t          component._keepAliveRouterView = null;\n\t        }\n\t      }\n\t    }\n\t\n\t    // cleanup the component in case the transition is aborted\n\t    // before the component is ever inserted.\n\t    var cleanup = function cleanup() {\n\t      component.$destroy();\n\t    };\n\t\n\t    // actually insert the component and trigger transition\n\t    var insert = function insert() {\n\t      if (reuse) {\n\t        cb && cb();\n\t        return;\n\t      }\n\t      var router = transition.router;\n\t      if (router._rendered || router._transitionOnLoad) {\n\t        view.transition(component);\n\t      } else {\n\t        // no transition on first render, manual transition\n\t        /* istanbul ignore if */\n\t        if (view.setCurrent) {\n\t          // 0.12 compat\n\t          view.setCurrent(component);\n\t        } else {\n\t          // 1.0\n\t          view.childVM = component;\n\t        }\n\t        component.$before(view.anchor, null, false);\n\t      }\n\t      cb && cb();\n\t    };\n\t\n\t    var afterData = function afterData() {\n\t      // activate the child view\n\t      if (view.childView) {\n\t        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n\t      }\n\t      insert();\n\t    };\n\t\n\t    // called after activation hook is resolved\n\t    var afterActivate = function afterActivate() {\n\t      view.activated = true;\n\t      if (dataHook && waitForData) {\n\t        // wait until data loaded to insert\n\t        loadData(component, transition, dataHook, afterData, cleanup);\n\t      } else {\n\t        // load data and insert at the same time\n\t        if (dataHook) {\n\t          loadData(component, transition, dataHook);\n\t        }\n\t        afterData();\n\t      }\n\t    };\n\t\n\t    if (activateHook) {\n\t      transition.callHooks(activateHook, component, afterActivate, { cleanup: cleanup });\n\t    } else {\n\t      afterActivate();\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Reuse a view, just reload data if necessary.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function reuse(view, transition) {\n\t    var component = view.childVM;\n\t    var dataHook = getRouteConfig(component, 'data');\n\t    if (dataHook) {\n\t      loadData(component, transition, dataHook);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Asynchronously load and apply data to component.\n\t   *\n\t   * @param {Vue} component\n\t   * @param {Transition} transition\n\t   * @param {Function} hook\n\t   * @param {Function} cb\n\t   * @param {Function} cleanup\n\t   */\n\t\n\t  function loadData(component, transition, hook, cb, cleanup) {\n\t    component.$loadingRouteData = true;\n\t    transition.callHooks(hook, component, function (data, onError) {\n\t      // merge data from multiple data hooks\n\t      if (Array.isArray(data) && data._needMerge) {\n\t        data = data.reduce(function (res, obj) {\n\t          if (isPlainObject(obj)) {\n\t            Object.keys(obj).forEach(function (key) {\n\t              res[key] = obj[key];\n\t            });\n\t          }\n\t          return res;\n\t        }, Object.create(null));\n\t      }\n\t      // handle promise sugar syntax\n\t      var promises = [];\n\t      if (isPlainObject(data)) {\n\t        Object.keys(data).forEach(function (key) {\n\t          var val = data[key];\n\t          if (isPromise(val)) {\n\t            promises.push(val.then(function (resolvedVal) {\n\t              component.$set(key, resolvedVal);\n\t            }));\n\t          } else {\n\t            component.$set(key, val);\n\t          }\n\t        });\n\t      }\n\t      if (!promises.length) {\n\t        component.$loadingRouteData = false;\n\t        component.$emit('route-data-loaded', component);\n\t        cb && cb();\n\t      } else {\n\t        promises[0].constructor.all(promises).then(function () {\n\t          component.$loadingRouteData = false;\n\t          component.$emit('route-data-loaded', component);\n\t          cb && cb();\n\t        }, onError);\n\t      }\n\t    }, {\n\t      cleanup: cleanup,\n\t      expectData: true\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Save the child view for a kept-alive view so that\n\t   * we can restore it when it is switched back to.\n\t   *\n\t   * @param {Directive} view\n\t   */\n\t\n\t  function saveChildView(view) {\n\t    if (view.keepAlive && view.childVM && view.childView) {\n\t      view.childVM._keepAliveRouterView = view.childView;\n\t    }\n\t    view.childView = null;\n\t  }\n\t\n\t  /**\n\t   * Check plain object.\n\t   *\n\t   * @param {*} val\n\t   */\n\t\n\t  function isPlainObject(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  /**\n\t   * A RouteTransition object manages the pipeline of a\n\t   * router-view switching process. This is also the object\n\t   * passed into user route hooks.\n\t   *\n\t   * @param {Router} router\n\t   * @param {Route} to\n\t   * @param {Route} from\n\t   */\n\t\n\t  var RouteTransition = (function () {\n\t    function RouteTransition(router, to, from) {\n\t      babelHelpers.classCallCheck(this, RouteTransition);\n\t\n\t      this.router = router;\n\t      this.to = to;\n\t      this.from = from;\n\t      this.next = null;\n\t      this.aborted = false;\n\t      this.done = false;\n\t    }\n\t\n\t    /**\n\t     * Abort current transition and return to previous location.\n\t     */\n\t\n\t    RouteTransition.prototype.abort = function abort() {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        // if the root path throws an error during validation\n\t        // on initial load, it gets caught in an infinite loop.\n\t        var abortingOnLoad = !this.from.path && this.to.path === '/';\n\t        if (!abortingOnLoad) {\n\t          this.router.replace(this.from.path || '/');\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Abort current transition and redirect to a new location.\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    RouteTransition.prototype.redirect = function redirect(path) {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        if (typeof path === 'string') {\n\t          path = mapParams(path, this.to.params, this.to.query);\n\t        } else {\n\t          path.params = path.params || this.to.params;\n\t          path.query = path.query || this.to.query;\n\t        }\n\t        this.router.replace(path);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * A router view transition's pipeline can be described as\n\t     * follows, assuming we are transitioning from an existing\n\t     * <router-view> chain [Component A, Component B] to a new\n\t     * chain [Component A, Component C]:\n\t     *\n\t     *  A    A\n\t     *  | => |\n\t     *  B    C\n\t     *\n\t     * 1. Reusablity phase:\n\t     *   -> canReuse(A, A)\n\t     *   -> canReuse(B, C)\n\t     *   -> determine new queues:\n\t     *      - deactivation: [B]\n\t     *      - activation: [C]\n\t     *\n\t     * 2. Validation phase:\n\t     *   -> canDeactivate(B)\n\t     *   -> canActivate(C)\n\t     *\n\t     * 3. Activation phase:\n\t     *   -> deactivate(B)\n\t     *   -> activate(C)\n\t     *\n\t     * Each of these steps can be asynchronous, and any\n\t     * step can potentially abort the transition.\n\t     *\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.start = function start(cb) {\n\t      var transition = this;\n\t\n\t      // determine the queue of views to deactivate\n\t      var deactivateQueue = [];\n\t      var view = this.router._rootView;\n\t      while (view) {\n\t        deactivateQueue.unshift(view);\n\t        view = view.childView;\n\t      }\n\t      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\t\n\t      // determine the queue of route handlers to activate\n\t      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n\t        return match.handler;\n\t      });\n\t\n\t      // 1. Reusability phase\n\t      var i = undefined,\n\t          reuseQueue = undefined;\n\t      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n\t        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n\t          break;\n\t        }\n\t      }\n\t      if (i > 0) {\n\t        reuseQueue = reverseDeactivateQueue.slice(0, i);\n\t        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n\t        activateQueue = activateQueue.slice(i);\n\t      }\n\t\n\t      // 2. Validation phase\n\t      transition.runQueue(deactivateQueue, canDeactivate, function () {\n\t        transition.runQueue(activateQueue, canActivate, function () {\n\t          transition.runQueue(deactivateQueue, deactivate, function () {\n\t            // 3. Activation phase\n\t\n\t            // Update router current route\n\t            transition.router._onTransitionValidated(transition);\n\t\n\t            // trigger reuse for all reused views\n\t            reuseQueue && reuseQueue.forEach(function (view) {\n\t              return reuse(view, transition);\n\t            });\n\t\n\t            // the root of the chain that needs to be replaced\n\t            // is the top-most non-reusable view.\n\t            if (deactivateQueue.length) {\n\t              var _view = deactivateQueue[deactivateQueue.length - 1];\n\t              var depth = reuseQueue ? reuseQueue.length : 0;\n\t              activate(_view, transition, depth, cb);\n\t            } else {\n\t              cb();\n\t            }\n\t          });\n\t        });\n\t      });\n\t    };\n\t\n\t    /**\n\t     * Asynchronously and sequentially apply a function to a\n\t     * queue.\n\t     *\n\t     * @param {Array} queue\n\t     * @param {Function} fn\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n\t      var transition = this;\n\t      step(0);\n\t      function step(index) {\n\t        if (index >= queue.length) {\n\t          cb();\n\t        } else {\n\t          fn(queue[index], transition, function () {\n\t            step(index + 1);\n\t          });\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a user provided route transition hook and handle\n\t     * the response (e.g. if the user returns a promise).\n\t     *\n\t     * If the user neither expects an argument nor returns a\n\t     * promise, the hook is assumed to be synchronous.\n\t     *\n\t     * @param {Function} hook\n\t     * @param {*} [context]\n\t     * @param {Function} [cb]\n\t     * @param {Object} [options]\n\t     *                 - {Boolean} expectBoolean\n\t     *                 - {Boolean} expectData\n\t     *                 - {Function} cleanup\n\t     */\n\t\n\t    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n\t      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\t\n\t      var _ref$expectBoolean = _ref.expectBoolean;\n\t      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n\t      var _ref$expectData = _ref.expectData;\n\t      var expectData = _ref$expectData === undefined ? false : _ref$expectData;\n\t      var cleanup = _ref.cleanup;\n\t\n\t      var transition = this;\n\t      var nextCalled = false;\n\t\n\t      // abort the transition\n\t      var abort = function abort() {\n\t        cleanup && cleanup();\n\t        transition.abort();\n\t      };\n\t\n\t      // handle errors\n\t      var onError = function onError(err) {\n\t        // cleanup indicates an after-activation hook,\n\t        // so instead of aborting we just let the transition\n\t        // finish.\n\t        cleanup ? next() : abort();\n\t        if (err && !transition.router._suppress) {\n\t          warn('Uncaught error during transition: ');\n\t          throw err instanceof Error ? err : new Error(err);\n\t        }\n\t      };\n\t\n\t      // advance the transition to the next step\n\t      var next = function next(data) {\n\t        if (nextCalled) {\n\t          warn('transition.next() should be called only once.');\n\t          return;\n\t        }\n\t        nextCalled = true;\n\t        if (transition.aborted) {\n\t          cleanup && cleanup();\n\t          return;\n\t        }\n\t        cb && cb(data, onError);\n\t      };\n\t\n\t      // expose a clone of the transition object, so that each\n\t      // hook gets a clean copy and prevent the user from\n\t      // messing with the internals.\n\t      var exposed = {\n\t        to: transition.to,\n\t        from: transition.from,\n\t        abort: abort,\n\t        next: next,\n\t        redirect: function redirect() {\n\t          transition.redirect.apply(transition, arguments);\n\t        }\n\t      };\n\t\n\t      // actually call the hook\n\t      var res = undefined;\n\t      try {\n\t        res = hook.call(context, exposed);\n\t      } catch (err) {\n\t        return onError(err);\n\t      }\n\t\n\t      // handle boolean/promise return values\n\t      var resIsPromise = isPromise(res);\n\t      if (expectBoolean) {\n\t        if (typeof res === 'boolean') {\n\t          res ? next() : abort();\n\t        } else if (resIsPromise) {\n\t          res.then(function (ok) {\n\t            ok ? next() : abort();\n\t          }, onError);\n\t        } else if (!hook.length) {\n\t          next(res);\n\t        }\n\t      } else if (resIsPromise) {\n\t        res.then(next, onError);\n\t      } else if (expectData && isPlainOjbect(res) || !hook.length) {\n\t        next(res);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a single hook or an array of async hooks in series.\n\t     *\n\t     * @param {Array} hooks\n\t     * @param {*} context\n\t     * @param {Function} cb\n\t     * @param {Object} [options]\n\t     */\n\t\n\t    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n\t      var _this = this;\n\t\n\t      if (Array.isArray(hooks)) {\n\t        (function () {\n\t          var res = [];\n\t          res._needMerge = true;\n\t          var onError = undefined;\n\t          _this.runQueue(hooks, function (hook, _, next) {\n\t            if (!_this.aborted) {\n\t              _this.callHook(hook, context, function (r, onError) {\n\t                if (r) res.push(r);\n\t                onError = onError;\n\t                next();\n\t              }, options);\n\t            }\n\t          }, function () {\n\t            cb(res, onError);\n\t          });\n\t        })();\n\t      } else {\n\t        this.callHook(hooks, context, cb, options);\n\t      }\n\t    };\n\t\n\t    return RouteTransition;\n\t  })();\n\t\n\t  function isPlainOjbect(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  function toArray(val) {\n\t    return val ? Array.prototype.slice.call(val) : [];\n\t  }\n\t\n\t  var internalKeysRE = /^(component|subRoutes)$/;\n\t\n\t  /**\n\t   * Route Context Object\n\t   *\n\t   * @param {String} path\n\t   * @param {Router} router\n\t   */\n\t\n\t  var Route = function Route(path, router) {\n\t    var _this = this;\n\t\n\t    babelHelpers.classCallCheck(this, Route);\n\t\n\t    var matched = router._recognizer.recognize(path);\n\t    if (matched) {\n\t      // copy all custom fields from route configs\n\t      [].forEach.call(matched, function (match) {\n\t        for (var key in match.handler) {\n\t          if (!internalKeysRE.test(key)) {\n\t            _this[key] = match.handler[key];\n\t          }\n\t        }\n\t      });\n\t      // set query and params\n\t      this.query = matched.queryParams;\n\t      this.params = [].reduce.call(matched, function (prev, cur) {\n\t        if (cur.params) {\n\t          for (var key in cur.params) {\n\t            prev[key] = cur.params[key];\n\t          }\n\t        }\n\t        return prev;\n\t      }, {});\n\t    }\n\t    // expose path and router\n\t    this.path = path;\n\t    this.router = router;\n\t    // for internal use\n\t    this.matched = matched || router._notFoundHandler;\n\t    // Important: freeze self to prevent observation\n\t    Object.freeze(this);\n\t  };\n\t\n\t  function applyOverride (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var extend = _Vue$util.extend;\n\t    var isArray = _Vue$util.isArray;\n\t    var defineReactive = _Vue$util.defineReactive;\n\t\n\t    // override Vue's init and destroy process to keep track of router instances\n\t    var init = Vue.prototype._init;\n\t    Vue.prototype._init = function (options) {\n\t      options = options || {};\n\t      var root = options._parent || options.parent || this;\n\t      var router = root.$router;\n\t      var route = root.$route;\n\t      if (router) {\n\t        // expose router\n\t        this.$router = router;\n\t        router._children.push(this);\n\t        /* istanbul ignore if */\n\t        if (this._defineMeta) {\n\t          // 0.12\n\t          this._defineMeta('$route', route);\n\t        } else {\n\t          // 1.0\n\t          defineReactive(this, '$route', route);\n\t        }\n\t      }\n\t      init.call(this, options);\n\t    };\n\t\n\t    var destroy = Vue.prototype._destroy;\n\t    Vue.prototype._destroy = function () {\n\t      if (!this._isBeingDestroyed && this.$router) {\n\t        this.$router._children.$remove(this);\n\t      }\n\t      destroy.apply(this, arguments);\n\t    };\n\t\n\t    // 1.0 only: enable route mixins\n\t    var strats = Vue.config.optionMergeStrategies;\n\t    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\t\n\t    if (strats) {\n\t      strats.route = function (parentVal, childVal) {\n\t        if (!childVal) return parentVal;\n\t        if (!parentVal) return childVal;\n\t        var ret = {};\n\t        extend(ret, parentVal);\n\t        for (var key in childVal) {\n\t          var a = ret[key];\n\t          var b = childVal[key];\n\t          // for data, activate and deactivate, we need to merge them into\n\t          // arrays similar to lifecycle hooks.\n\t          if (a && hooksToMergeRE.test(key)) {\n\t            ret[key] = (isArray(a) ? a : [a]).concat(b);\n\t          } else {\n\t            ret[key] = b;\n\t          }\n\t        }\n\t        return ret;\n\t      };\n\t    }\n\t  }\n\t\n\t  function View (Vue) {\n\t\n\t    var _ = Vue.util;\n\t    var componentDef =\n\t    // 0.12\n\t    Vue.directive('_component') ||\n\t    // 1.0\n\t    Vue.internalDirectives.component;\n\t    // <router-view> extends the internal component directive\n\t    var viewDef = _.extend({}, componentDef);\n\t\n\t    // with some overrides\n\t    _.extend(viewDef, {\n\t\n\t      _isRouterView: true,\n\t\n\t      bind: function bind() {\n\t        var route = this.vm.$route;\n\t        /* istanbul ignore if */\n\t        if (!route) {\n\t          warn('<router-view> can only be used inside a ' + 'router-enabled app.');\n\t          return;\n\t        }\n\t        // force dynamic directive so v-component doesn't\n\t        // attempt to build right now\n\t        this._isDynamicLiteral = true;\n\t        // finally, init by delegating to v-component\n\t        componentDef.bind.call(this);\n\t\n\t        // locate the parent view\n\t        var parentView = undefined;\n\t        var parent = this.vm;\n\t        while (parent) {\n\t          if (parent._routerView) {\n\t            parentView = parent._routerView;\n\t            break;\n\t          }\n\t          parent = parent.$parent;\n\t        }\n\t        if (parentView) {\n\t          // register self as a child of the parent view,\n\t          // instead of activating now. This is so that the\n\t          // child's activate hook is called after the\n\t          // parent's has resolved.\n\t          this.parentView = parentView;\n\t          parentView.childView = this;\n\t        } else {\n\t          // this is the root view!\n\t          var router = route.router;\n\t          router._rootView = this;\n\t        }\n\t\n\t        // handle late-rendered view\n\t        // two possibilities:\n\t        // 1. root view rendered after transition has been\n\t        //    validated;\n\t        // 2. child view rendered after parent view has been\n\t        //    activated.\n\t        var transition = route.router._currentTransition;\n\t        if (!parentView && transition.done || parentView && parentView.activated) {\n\t          var depth = parentView ? parentView.depth + 1 : 0;\n\t          activate(this, transition, depth);\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        if (this.parentView) {\n\t          this.parentView.childView = null;\n\t        }\n\t        componentDef.unbind.call(this);\n\t      }\n\t    });\n\t\n\t    Vue.elementDirective('router-view', viewDef);\n\t  }\n\t\n\t  var trailingSlashRE = /\\/$/;\n\t  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\t  var queryStringRE = /\\?.*$/;\n\t\n\t  // install v-link, which provides navigation support for\n\t  // HTML5 history mode\n\t  function Link (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var _bind = _Vue$util.bind;\n\t    var isObject = _Vue$util.isObject;\n\t    var addClass = _Vue$util.addClass;\n\t    var removeClass = _Vue$util.removeClass;\n\t\n\t    Vue.directive('link-active', {\n\t      priority: 1001,\n\t      bind: function bind() {\n\t        this.el.__v_link_active = true;\n\t      }\n\t    });\n\t\n\t    Vue.directive('link', {\n\t      priority: 1000,\n\t\n\t      bind: function bind() {\n\t        var vm = this.vm;\n\t        /* istanbul ignore if */\n\t        if (!vm.$route) {\n\t          warn('v-link can only be used inside a router-enabled app.');\n\t          return;\n\t        }\n\t        this.router = vm.$route.router;\n\t        // update things when the route changes\n\t        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n\t        // check if active classes should be applied to a different element\n\t        this.activeEl = this.el;\n\t        var parent = this.el.parentNode;\n\t        while (parent) {\n\t          if (parent.__v_link_active) {\n\t            this.activeEl = parent;\n\t            break;\n\t          }\n\t          parent = parent.parentNode;\n\t        }\n\t        // no need to handle click if link expects to be opened\n\t        // in a new window/tab.\n\t        /* istanbul ignore if */\n\t        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n\t          return;\n\t        }\n\t        // handle click\n\t        this.el.addEventListener('click', _bind(this.onClick, this));\n\t      },\n\t\n\t      update: function update(target) {\n\t        this.target = target;\n\t        if (isObject(target)) {\n\t          this.append = target.append;\n\t          this.exact = target.exact;\n\t          this.prevActiveClass = this.activeClass;\n\t          this.activeClass = target.activeClass;\n\t        }\n\t        this.onRouteUpdate(this.vm.$route);\n\t      },\n\t\n\t      onClick: function onClick(e) {\n\t        // don't redirect with control keys\n\t        /* istanbul ignore if */\n\t        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n\t        // don't redirect when preventDefault called\n\t        /* istanbul ignore if */\n\t        if (e.defaultPrevented) return;\n\t        // don't redirect on right click\n\t        /* istanbul ignore if */\n\t        if (e.button !== 0) return;\n\t\n\t        var target = this.target;\n\t        if (target) {\n\t          // v-link with expression, just go\n\t          e.preventDefault();\n\t          this.router.go(target);\n\t        } else {\n\t          // no expression, delegate for an <a> inside\n\t          var el = e.target;\n\t          while (el.tagName !== 'A' && el !== this.el) {\n\t            el = el.parentNode;\n\t          }\n\t          if (el.tagName === 'A' && sameOrigin(el)) {\n\t            e.preventDefault();\n\t            this.router.go({\n\t              path: el.pathname,\n\t              replace: target && target.replace,\n\t              append: target && target.append\n\t            });\n\t          }\n\t        }\n\t      },\n\t\n\t      onRouteUpdate: function onRouteUpdate(route) {\n\t        // router._stringifyPath is dependent on current route\n\t        // and needs to be called again whenver route changes.\n\t        var newPath = this.router._stringifyPath(this.target);\n\t        if (this.path !== newPath) {\n\t          this.path = newPath;\n\t          this.updateActiveMatch();\n\t          this.updateHref();\n\t        }\n\t        this.updateClasses(route.path);\n\t      },\n\t\n\t      updateActiveMatch: function updateActiveMatch() {\n\t        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n\t      },\n\t\n\t      updateHref: function updateHref() {\n\t        if (this.el.tagName !== 'A') {\n\t          return;\n\t        }\n\t        var path = this.path;\n\t        var router = this.router;\n\t        var isAbsolute = path.charAt(0) === '/';\n\t        // do not format non-hash relative paths\n\t        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n\t        if (href) {\n\t          this.el.href = href;\n\t        } else {\n\t          this.el.removeAttribute('href');\n\t        }\n\t      },\n\t\n\t      updateClasses: function updateClasses(path) {\n\t        var el = this.activeEl;\n\t        var activeClass = this.activeClass || this.router._linkActiveClass;\n\t        // clear old class\n\t        if (this.prevActiveClass !== activeClass) {\n\t          removeClass(el, this.prevActiveClass);\n\t        }\n\t        // remove query string before matching\n\t        var dest = this.path.replace(queryStringRE, '');\n\t        path = path.replace(queryStringRE, '');\n\t        // add new class\n\t        if (this.exact) {\n\t          if (dest === path ||\n\t          // also allow additional trailing slash\n\t          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n\t            addClass(el, activeClass);\n\t          } else {\n\t            removeClass(el, activeClass);\n\t          }\n\t        } else {\n\t          if (this.activeRE && this.activeRE.test(path)) {\n\t            addClass(el, activeClass);\n\t          } else {\n\t            removeClass(el, activeClass);\n\t          }\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        this.el.removeEventListener('click', this.handler);\n\t        this.unwatch && this.unwatch();\n\t      }\n\t    });\n\t\n\t    function sameOrigin(link) {\n\t      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n\t    }\n\t  }\n\t\n\t  var historyBackends = {\n\t    abstract: AbstractHistory,\n\t    hash: HashHistory,\n\t    html5: HTML5History\n\t  };\n\t\n\t  // late bind during install\n\t  var Vue = undefined;\n\t\n\t  /**\n\t   * Router constructor\n\t   *\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  var Router = (function () {\n\t    function Router() {\n\t      var _this = this;\n\t\n\t      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var _ref$hashbang = _ref.hashbang;\n\t      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n\t      var _ref$abstract = _ref.abstract;\n\t      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n\t      var _ref$history = _ref.history;\n\t      var history = _ref$history === undefined ? false : _ref$history;\n\t      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n\t      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n\t      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n\t      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n\t      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n\t      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n\t      var _ref$root = _ref.root;\n\t      var root = _ref$root === undefined ? null : _ref$root;\n\t      var _ref$linkActiveClass = _ref.linkActiveClass;\n\t      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n\t      babelHelpers.classCallCheck(this, Router);\n\t\n\t      /* istanbul ignore if */\n\t      if (!Router.installed) {\n\t        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n\t      }\n\t\n\t      // Vue instances\n\t      this.app = null;\n\t      this._children = [];\n\t\n\t      // route recognizer\n\t      this._recognizer = new RouteRecognizer();\n\t      this._guardRecognizer = new RouteRecognizer();\n\t\n\t      // state\n\t      this._started = false;\n\t      this._startCb = null;\n\t      this._currentRoute = {};\n\t      this._currentTransition = null;\n\t      this._previousTransition = null;\n\t      this._notFoundHandler = null;\n\t      this._notFoundRedirect = null;\n\t      this._beforeEachHooks = [];\n\t      this._afterEachHooks = [];\n\t\n\t      // trigger transition on initial render?\n\t      this._rendered = false;\n\t      this._transitionOnLoad = transitionOnLoad;\n\t\n\t      // history mode\n\t      this._root = root;\n\t      this._abstract = abstract;\n\t      this._hashbang = hashbang;\n\t\n\t      // check if HTML5 history is available\n\t      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n\t      this._history = history && hasPushState;\n\t      this._historyFallback = history && !hasPushState;\n\t\n\t      // create history object\n\t      var inBrowser = Vue.util.inBrowser;\n\t      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\t\n\t      var History = historyBackends[this.mode];\n\t      this.history = new History({\n\t        root: root,\n\t        hashbang: this._hashbang,\n\t        onChange: function onChange(path, state, anchor) {\n\t          _this._match(path, state, anchor);\n\t        }\n\t      });\n\t\n\t      // other options\n\t      this._saveScrollPosition = saveScrollPosition;\n\t      this._linkActiveClass = linkActiveClass;\n\t      this._suppress = suppressTransitionError;\n\t    }\n\t\n\t    /**\n\t     * Allow directly passing components to a route\n\t     * definition.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} handler\n\t     */\n\t\n\t    // API ===================================================\n\t\n\t    /**\n\t    * Register a map of top-level paths.\n\t    *\n\t    * @param {Object} map\n\t    */\n\t\n\t    Router.prototype.map = function map(_map) {\n\t      for (var route in _map) {\n\t        this.on(route, _map[route]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Register a single root-level path\n\t     *\n\t     * @param {String} rootPath\n\t     * @param {Object} handler\n\t     *                 - {String} component\n\t     *                 - {Object} [subRoutes]\n\t     *                 - {Boolean} [forceRefresh]\n\t     *                 - {Function} [before]\n\t     *                 - {Function} [after]\n\t     */\n\t\n\t    Router.prototype.on = function on(rootPath, handler) {\n\t      if (rootPath === '*') {\n\t        this._notFound(handler);\n\t      } else {\n\t        this._addRoute(rootPath, handler, []);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set redirects.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.redirect = function redirect(map) {\n\t      for (var path in map) {\n\t        this._addRedirect(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set aliases.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.alias = function alias(map) {\n\t      for (var path in map) {\n\t        this._addAlias(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global before hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.beforeEach = function beforeEach(fn) {\n\t      this._beforeEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global after hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.afterEach = function afterEach(fn) {\n\t      this._afterEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Navigate to a given path.\n\t     * The path can be an object describing a named path in\n\t     * the format of { name: '...', params: {}, query: {}}\n\t     * The path is assumed to be already decoded, and will\n\t     * be resolved against root (if provided)\n\t     *\n\t     * @param {String|Object} path\n\t     * @param {Boolean} [replace]\n\t     */\n\t\n\t    Router.prototype.go = function go(path) {\n\t      var replace = false;\n\t      var append = false;\n\t      if (Vue.util.isObject(path)) {\n\t        replace = path.replace;\n\t        append = path.append;\n\t      }\n\t      path = this._stringifyPath(path);\n\t      if (path) {\n\t        this.history.go(path, replace, append);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Short hand for replacing current path\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    Router.prototype.replace = function replace(path) {\n\t      if (typeof path === 'string') {\n\t        path = { path: path };\n\t      }\n\t      path.replace = true;\n\t      this.go(path);\n\t    };\n\t\n\t    /**\n\t     * Start the router.\n\t     *\n\t     * @param {VueConstructor} App\n\t     * @param {String|Element} container\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    Router.prototype.start = function start(App, container, cb) {\n\t      /* istanbul ignore if */\n\t      if (this._started) {\n\t        warn('already started.');\n\t        return;\n\t      }\n\t      this._started = true;\n\t      this._startCb = cb;\n\t      if (!this.app) {\n\t        /* istanbul ignore if */\n\t        if (!App || !container) {\n\t          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n\t        }\n\t        /* istanbul ignore if */\n\t        if (App instanceof Vue) {\n\t          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n\t        }\n\t        this._appContainer = container;\n\t        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n\t        // give it a name for better debugging\n\t        Ctor.options.name = Ctor.options.name || 'RouterApp';\n\t      }\n\t\n\t      // handle history fallback in browsers that do not\n\t      // support HTML5 history API\n\t      if (this._historyFallback) {\n\t        var _location = window.location;\n\t        var _history = new HTML5History({ root: this._root });\n\t        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n\t        if (path && path !== '/') {\n\t          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n\t          return;\n\t        }\n\t      }\n\t\n\t      this.history.start();\n\t    };\n\t\n\t    /**\n\t     * Stop listening to route changes.\n\t     */\n\t\n\t    Router.prototype.stop = function stop() {\n\t      this.history.stop();\n\t      this._started = false;\n\t    };\n\t\n\t    // Internal methods ======================================\n\t\n\t    /**\n\t    * Add a route containing a list of segments to the internal\n\t    * route recognizer. Will be called recursively to add all\n\t    * possible sub-routes.\n\t    *\n\t    * @param {String} path\n\t    * @param {Object} handler\n\t    * @param {Array} segments\n\t    */\n\t\n\t    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n\t      guardComponent(path, handler);\n\t      handler.path = path;\n\t      handler.fullPath = (segments.reduce(function (path, segment) {\n\t        return path + segment.path;\n\t      }, '') + path).replace('//', '/');\n\t      segments.push({\n\t        path: path,\n\t        handler: handler\n\t      });\n\t      this._recognizer.add(segments, {\n\t        as: handler.name\n\t      });\n\t      // add sub routes\n\t      if (handler.subRoutes) {\n\t        for (var subPath in handler.subRoutes) {\n\t          // recursively walk all sub routes\n\t          this._addRoute(subPath, handler.subRoutes[subPath],\n\t          // pass a copy in recursion to avoid mutating\n\t          // across branches\n\t          segments.slice());\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Set the notFound route handler.\n\t     *\n\t     * @param {Object} handler\n\t     */\n\t\n\t    Router.prototype._notFound = function _notFound(handler) {\n\t      guardComponent('*', handler);\n\t      this._notFoundHandler = [{ handler: handler }];\n\t    };\n\t\n\t    /**\n\t     * Add a redirect record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} redirectPath\n\t     */\n\t\n\t    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n\t      if (path === '*') {\n\t        this._notFoundRedirect = redirectPath;\n\t      } else {\n\t        this._addGuard(path, redirectPath, this.replace);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Add an alias record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} aliasPath\n\t     */\n\t\n\t    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n\t      this._addGuard(path, aliasPath, this._match);\n\t    };\n\t\n\t    /**\n\t     * Add a path guard.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} mappedPath\n\t     * @param {Function} handler\n\t     */\n\t\n\t    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n\t      var _this2 = this;\n\t\n\t      this._guardRecognizer.add([{\n\t        path: path,\n\t        handler: function handler(match, query) {\n\t          var realPath = mapParams(mappedPath, match.params, query);\n\t          _handler.call(_this2, realPath);\n\t        }\n\t      }]);\n\t    };\n\t\n\t    /**\n\t     * Check if a path matches any redirect records.\n\t     *\n\t     * @param {String} path\n\t     * @return {Boolean} - if true, will skip normal match.\n\t     */\n\t\n\t    Router.prototype._checkGuard = function _checkGuard(path) {\n\t      var matched = this._guardRecognizer.recognize(path);\n\t      if (matched) {\n\t        matched[0].handler(matched[0], matched.queryParams);\n\t        return true;\n\t      } else if (this._notFoundRedirect) {\n\t        matched = this._recognizer.recognize(path);\n\t        if (!matched) {\n\t          this.replace(this._notFoundRedirect);\n\t          return true;\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Match a URL path and set the route context on vm,\n\t     * triggering view updates.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._match = function _match(path, state, anchor) {\n\t      var _this3 = this;\n\t\n\t      if (this._checkGuard(path)) {\n\t        return;\n\t      }\n\t\n\t      var currentRoute = this._currentRoute;\n\t      var currentTransition = this._currentTransition;\n\t\n\t      if (currentTransition) {\n\t        if (currentTransition.to.path === path) {\n\t          // do nothing if we have an active transition going to the same path\n\t          return;\n\t        } else if (currentRoute.path === path) {\n\t          // We are going to the same path, but we also have an ongoing but\n\t          // not-yet-validated transition. Abort that transition and reset to\n\t          // prev transition.\n\t          currentTransition.aborted = true;\n\t          this._currentTransition = this._prevTransition;\n\t          return;\n\t        } else {\n\t          // going to a totally different path. abort ongoing transition.\n\t          currentTransition.aborted = true;\n\t        }\n\t      }\n\t\n\t      // construct new route and transition context\n\t      var route = new Route(path, this);\n\t      var transition = new RouteTransition(this, route, currentRoute);\n\t\n\t      // current transition is updated right now.\n\t      // however, current route will only be updated after the transition has\n\t      // been validated.\n\t      this._prevTransition = currentTransition;\n\t      this._currentTransition = transition;\n\t\n\t      if (!this.app) {\n\t        (function () {\n\t          // initial render\n\t          var router = _this3;\n\t          _this3.app = new _this3._appConstructor({\n\t            el: _this3._appContainer,\n\t            created: function created() {\n\t              this.$router = router;\n\t            },\n\t            _meta: {\n\t              $route: route\n\t            }\n\t          });\n\t        })();\n\t      }\n\t\n\t      // check global before hook\n\t      var beforeHooks = this._beforeEachHooks;\n\t      var startTransition = function startTransition() {\n\t        transition.start(function () {\n\t          _this3._postTransition(route, state, anchor);\n\t        });\n\t      };\n\t\n\t      if (beforeHooks.length) {\n\t        transition.runQueue(beforeHooks, function (hook, _, next) {\n\t          if (transition === _this3._currentTransition) {\n\t            transition.callHook(hook, null, next, {\n\t              expectBoolean: true\n\t            });\n\t          }\n\t        }, startTransition);\n\t      } else {\n\t        startTransition();\n\t      }\n\t\n\t      if (!this._rendered && this._startCb) {\n\t        this._startCb.call(null);\n\t      }\n\t\n\t      // HACK:\n\t      // set rendered to true after the transition start, so\n\t      // that components that are acitvated synchronously know\n\t      // whether it is the initial render.\n\t      this._rendered = true;\n\t    };\n\t\n\t    /**\n\t     * Set current to the new transition.\n\t     * This is called by the transition object when the\n\t     * validation of a route has succeeded.\n\t     *\n\t     * @param {Transition} transition\n\t     */\n\t\n\t    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n\t      // set current route\n\t      var route = this._currentRoute = transition.to;\n\t      // update route context for all children\n\t      if (this.app.$route !== route) {\n\t        this.app.$route = route;\n\t        this._children.forEach(function (child) {\n\t          child.$route = route;\n\t        });\n\t      }\n\t      // call global after hook\n\t      if (this._afterEachHooks.length) {\n\t        this._afterEachHooks.forEach(function (hook) {\n\t          return hook.call(null, {\n\t            to: transition.to,\n\t            from: transition.from\n\t          });\n\t        });\n\t      }\n\t      this._currentTransition.done = true;\n\t    };\n\t\n\t    /**\n\t     * Handle stuff after the transition.\n\t     *\n\t     * @param {Route} route\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n\t      // handle scroll positions\n\t      // saved scroll positions take priority\n\t      // then we check if the path has an anchor\n\t      var pos = state && state.pos;\n\t      if (pos && this._saveScrollPosition) {\n\t        Vue.nextTick(function () {\n\t          window.scrollTo(pos.x, pos.y);\n\t        });\n\t      } else if (anchor) {\n\t        Vue.nextTick(function () {\n\t          var el = document.getElementById(anchor.slice(1));\n\t          if (el) {\n\t            window.scrollTo(window.scrollX, el.offsetTop);\n\t          }\n\t        });\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Normalize named route object / string paths into\n\t     * a string.\n\t     *\n\t     * @param {Object|String|Number} path\n\t     * @return {String}\n\t     */\n\t\n\t    Router.prototype._stringifyPath = function _stringifyPath(path) {\n\t      var fullPath = '';\n\t      if (path && typeof path === 'object') {\n\t        if (path.name) {\n\t          var extend = Vue.util.extend;\n\t          var currentParams = this._currentTransition && this._currentTransition.to.params;\n\t          var targetParams = path.params || {};\n\t          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n\t          if (path.query) {\n\t            params.queryParams = path.query;\n\t          }\n\t          fullPath = this._recognizer.generate(path.name, params);\n\t        } else if (path.path) {\n\t          fullPath = path.path;\n\t          if (path.query) {\n\t            var query = this._recognizer.generateQueryString(path.query);\n\t            if (fullPath.indexOf('?') > -1) {\n\t              fullPath += '&' + query.slice(1);\n\t            } else {\n\t              fullPath += query;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        fullPath = path ? path + '' : '';\n\t      }\n\t      return encodeURI(fullPath);\n\t    };\n\t\n\t    return Router;\n\t  })();\n\t\n\t  function guardComponent(path, handler) {\n\t    var comp = handler.component;\n\t    if (Vue.util.isPlainObject(comp)) {\n\t      comp = handler.component = Vue.extend(comp);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (typeof comp !== 'function') {\n\t      handler.component = null;\n\t      warn('invalid component for route \"' + path + '\".');\n\t    }\n\t  }\n\t\n\t  /* Installation */\n\t\n\t  Router.installed = false;\n\t\n\t  /**\n\t   * Installation interface.\n\t   * Install the necessary directives.\n\t   */\n\t\n\t  Router.install = function (externalVue) {\n\t    /* istanbul ignore if */\n\t    if (Router.installed) {\n\t      warn('already installed.');\n\t      return;\n\t    }\n\t    Vue = externalVue;\n\t    applyOverride(Vue);\n\t    View(Vue);\n\t    Link(Vue);\n\t    exports$1.Vue = Vue;\n\t    Router.installed = true;\n\t  };\n\t\n\t  // auto install\n\t  /* istanbul ignore if */\n\t  if (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(Router);\n\t  }\n\t\n\t  return Router;\n\t\n\t}));\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v1.0.16\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind$1(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a non-enumerable property\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\tvar isIE9 = inBrowser && navigator.userAgent.toLowerCase().indexOf('msie 9.0') > 0;\n\t\n\tvar isAndroid = inBrowser && navigator.userAgent.toLowerCase().indexOf('android') > 0;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined') {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t  if (this.size === this.limit) {\n\t    removed = this.shift();\n\t  }\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} str\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '(.+?)' + unsafeClose + '|' + open + '(.+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  text = text.replace(/\\n/g, '');\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE$1.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether or not to handle fully object properties which\n\t   * are already backed by getters and seters. Depending on\n\t   * use case and environment, this might introduce non-neglible\n\t   * performance penalties.\n\t   */\n\t  convertAllProperties: false,\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t    warn = function (msg, e) {\n\t      if (hasConsole && (!config.silent || config.debug)) {\n\t        console.warn('[Vue warn]: ' + msg);\n\t        /* istanbul ignore if */\n\t        if (config.debug) {\n\t          if (e) {\n\t            throw e;\n\t          } else {\n\t            console.warn(new Error('Warning Stack Trace').stack);\n\t          }\n\t        }\n\t      }\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  var doc = document.documentElement;\n\t  var parent = node && node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on$1(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !(el instanceof SVGElement)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && el.content instanceof DocumentFragment) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__vue_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/;\n\tvar reservedTagRE = /^(slot|partial|component)$/;\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        if (tag.indexOf('-') > -1 || /HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        !/^(data|time|rtc|rb)$/.test(tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el) {\n\t  // dynamic syntax\n\t  var exp = getAttr(el, 'is');\n\t  if (exp != null) {\n\t    return { id: exp };\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  var key = prop.path;\n\t  value = coerceProp(prop, value);\n\t  vm[key] = vm._data[key] = assertProp(prop, value) ? value : undefined;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction assertProp(prop, value) {\n\t  // if a prop is not provided and is not required,\n\t  // skip the check.\n\t  if (prop.raw === null && !prop.required) {\n\t    return true;\n\t  }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = true;\n\t  var expectedType;\n\t  if (type) {\n\t    if (type === String) {\n\t      expectedType = 'string';\n\t      valid = typeof value === expectedType;\n\t    } else if (type === Number) {\n\t      expectedType = 'number';\n\t      valid = typeof value === 'number';\n\t    } else if (type === Boolean) {\n\t      expectedType = 'boolean';\n\t      valid = typeof value === 'boolean';\n\t    } else if (type === Function) {\n\t      expectedType = 'function';\n\t      valid = typeof value === 'function';\n\t    } else if (type === Object) {\n\t      expectedType = 'object';\n\t      valid = isPlainObject(value);\n\t    } else if (type === Array) {\n\t      expectedType = 'array';\n\t      valid = isArray(value);\n\t    } else {\n\t      valid = value instanceof type;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    (\"production\") !== 'production' && warn('Invalid prop: type check failed for ' + prop.path + '=\"' + prop.raw + '\".' + ' Expected ' + formatType(expectedType) + ', got ' + formatValue(value) + '.');\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator.call(null, value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for ' + prop.path + '=\"' + prop.raw + '\"');\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  // coerce is a function\n\t  return coerce(value);\n\t}\n\t\n\tfunction formatType(val) {\n\t  return val ? val.charAt(0).toUpperCase() + val.slice(1) : 'custom type';\n\t}\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * 0.11 deprecation warning\n\t */\n\t\n\tstrats.paramAttributes = function () {\n\t  /* istanbul ignore next */\n\t  (\"production\") !== 'production' && warn('\"paramAttributes\" option has been deprecated in 0.12. ' + 'Use \"props\" instead.');\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var def;\n\t    var ids = Object.keys(components);\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  var options = {};\n\t  var key;\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      parent = mergeOptions(parent, child.mixins[i], vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  return assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t}\n\t\n\t/**\n\t * Assert asset exists\n\t */\n\t\n\tfunction assertAsset(val, type, id) {\n\t  if (!val) {\n\t    (\"production\") !== 'production' && warn('Failed to resolve ' + type + ': ' + id);\n\t  }\n\t}\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar uid$3 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$3++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  target.__proto__ = src;\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if ((isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter, setter;\n\t  if (config.convertAllProperties) {\n\t    var property = Object.getOwnPropertyDescriptor(obj, key);\n\t    if (property && property.configurable === false) {\n\t      return;\n\t    }\n\t    getter = property && property.get;\n\t    setter = property && property.set;\n\t  }\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind$1,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on$1,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tassertAsset: assertAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tinitProp: initProp,\n\t\tassertProp: assertProp,\n\t\tcoerceProp: coerceProp,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // save raw constructor data before merge\n\t    // so that we know which properties are provided at\n\t    // instantiation.\n\t    if (false) {\n\t      this._runtimeData = options.data;\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initScope().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.');\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'proctected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\")|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar booleanLiteralRE = /^(?:true|false)$/;\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here becaue the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    return new Function('scope', 'return ' + body + ';');\n\t  } catch (e) {\n\t    (\"production\") !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat true/false as paths\n\t  !booleanLiteralRE.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\tvar internalQueueDepleted = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue = [];\n\t  userQueue = [];\n\t  has = {};\n\t  circular = {};\n\t  waiting = internalQueueDepleted = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  runBatcherQueue(queue);\n\t  internalQueueDepleted = true;\n\t  runBatcherQueue(userQueue);\n\t  // dev tool hook\n\t  /* istanbul ignore if */\n\t  if (devtools) {\n\t    devtools.emit('flush');\n\t  }\n\t  resetBatcherState();\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        queue.splice(has[id], 1);\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression: ' + watcher.expression);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // if an internal watcher is pushed, but the internal\n\t    // queue is already depleted, we run it immediately.\n\t    if (internalQueueDepleted && !watcher.user) {\n\t      watcher.run();\n\t      return;\n\t    }\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String} expression\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = isFn ? expOrFn.toString() : expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = Object.create(null);\n\t  this.newDeps = null;\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDeps[id]) {\n\t    this.newDeps[id] = dep;\n\t    if (!this.deps[id]) {\n\t      this.deps[id] = dep;\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression \"' + this.expression + '\". ' + (config.debug ? '' : 'Turn on debug mode to see stack trace.'), e);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter \"' + this.expression + '\"', e);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.');\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t  this.newDeps = Object.create(null);\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var ids = Object.keys(this.deps);\n\t  var i = ids.length;\n\t  while (i--) {\n\t    var id = ids[i];\n\t    if (!this.newDeps[id]) {\n\t      this.deps[id].removeSub(this);\n\t    }\n\t  }\n\t  this.deps = this.newDeps;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var depIds = Object.keys(this.deps);\n\t  var i = depIds.length;\n\t  while (i--) {\n\t    this.deps[depIds[i]].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var depIds = Object.keys(this.deps);\n\t    var i = depIds.length;\n\t    while (i--) {\n\t      this.deps[depIds[i]].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tfunction traverse(val) {\n\t  var i, keys;\n\t  if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) traverse(val[i]);\n\t  } else if (isObject(val)) {\n\t    keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) traverse(val[keys[i]]);\n\t  }\n\t}\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.');\n\t  }\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar FOR = 2000;\n\tvar IF = 2000;\n\tvar SLOT = 2100;\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        value = value.replace(importantRE, '').trim();\n\t      }\n\t      this.el.style.setProperty(prop, value, isImportant);\n\t    } else {\n\t      this.el.style.removeProperty(prop);\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return prefixes[i] + prop;\n\t    }\n\t  }\n\t  if (camel in testEl.style) {\n\t    return prop;\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.');\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.');\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.');\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on = {\n\t\n\t  acceptStatement: true,\n\t  priority: ON,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on$1(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on$1(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', this.forceUpdate);\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.listener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.value = _toString(value);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model. You might want to use a two-way filter ' + 'to ensure correct behavior.');\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && node.content instanceof DocumentFragment;\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment.\n\t  if (isRealTemplate(node)) {\n\t    trimNode(node.content);\n\t    return node.content;\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (template instanceof DocumentFragment) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__vue_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__vfrag__ = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__vfrag__ = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el)) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : el.outerHTML);\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseFactory = new FragmentFactory(this.vm, next);\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t      this.factory = new FragmentFactory(this.vm, el);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.');\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseFactory && !this.elseFrag) {\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar uid$1 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in items\" syntax\n\t    var inMatch = this.expression.match(/(.*) in (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Alias is required in v-for.');\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$1;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          frag.scope[alias] = value;\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t      return w.active;\n\t    });\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    defineReactive(scope, alias, value);\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__vfrag__ = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.before(prevEl.nextSibling);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else {\n\t        def(value, id, frag);\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * wathcer's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__vfrag__;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__vfrag__;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.');\n\t  };\n\t}\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\tvar text = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar publicDirectives = {\n\t  text: text,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on,\n\t  bind: bind,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind$1(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t\n\t  // Important hack:\n\t  // in Chrome, if a just-entered element is applied the\n\t  // leave class while its interpolated property still has\n\t  // a very small value (within one frame), Chrome will\n\t  // skip the leave transition entirely and not firing the\n\t  // transtionend event. Therefore we need to protected\n\t  // against such cases using a one-frame timeout.\n\t  this.justEntered = true;\n\t  var self = this;\n\t  setTimeout(function () {\n\t    self.justEntered = false;\n\t  }, 17);\n\t\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on$1(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t}\n\t\n\tvar transition = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    // apply on closest vm\n\t    el.__v_trans = new Transition(el, id, hooks, this.el.__vue__ || this.vm);\n\t    if (oldId) {\n\t      removeClass(el, oldId + '-transition');\n\t    }\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      val = coerceProp(prop, val);\n\t      if (assertProp(prop, val)) {\n\t        child[childKey] = val;\n\t      }\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(id, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || id;\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(id, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHook = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHook && !cached) {\n\t      this.waitingFor = newComponent;\n\t      activateHook.call(newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      this.waitingFor.$destroy();\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (false) {\n\t      if (current) current._inactive = true;\n\t      target._inactive = false;\n\t    }\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (value && typeof value === 'string') {\n\t      this.handleObject(stringToObject(value));\n\t    } else if (isPlainObject(value)) {\n\t      this.handleObject(value);\n\t    } else if (isArray(value)) {\n\t      this.handleArray(value);\n\t    } else {\n\t      this.cleanup();\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    this.cleanup(value);\n\t    var keys = this.prevKeys = Object.keys(value);\n\t    for (var i = 0, l = keys.length; i < l; i++) {\n\t      var key = keys[i];\n\t      if (value[key]) {\n\t        addClass(this.el, key);\n\t      } else {\n\t        removeClass(this.el, key);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleArray: function handleArray(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      if (value[i]) {\n\t        addClass(this.el, value[i]);\n\t      }\n\t    }\n\t    this.prevKeys = value.slice();\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    if (this.prevKeys) {\n\t      var i = this.prevKeys.length;\n\t      while (i--) {\n\t        var key = this.prevKeys[i];\n\t        if (key && (!value || !contains$1(value, key))) {\n\t          removeClass(this.el, key);\n\t        }\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tfunction stringToObject(value) {\n\t  var res = {};\n\t  var keys = value.trim().split(/\\s+/);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    res[keys[i]] = true;\n\t  }\n\t  return res;\n\t}\n\t\n\tfunction contains$1(value, key) {\n\t  return isArray(value) ? value.indexOf(key) > -1 : hasOwn(value, key);\n\t}\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition\n\t};\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.');\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.');\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.');\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (options.required) {\n\t      // warn missing required\n\t      (\"production\") !== 'production' && warn('Missing required prop: ' + name);\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, getDefault(vm, options));\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (vm._context) {\n\t          if (prop.mode === propBindingModes.ONE_TIME) {\n\t            // one time binding\n\t            value = (scope || vm._context).$get(prop.parentPath);\n\t            initProp(vm, prop, value);\n\t          } else {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          }\n\t        } else {\n\t            (\"production\") !== 'production' && warn('Cannot bind dynamic prop on a root instance' + ' with no parent: ' + prop.name + '=\"' + raw + '\"');\n\t          }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value\n\t        value = options.type === Boolean && raw === '' ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction getDefault(vm, options) {\n\t  // no default, return undefined\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Object/Array as default prop values will be shared ' + 'across multiple instances. Use a factory function ' + 'to return the default value instead.');\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// terminal directives\n\tvar terminalDirectives = ['for', 'if'];\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && node.tagName !== 'SCRIPT') {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(el.attributes, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: publicDirectives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = value;\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) return;\n\t  // special case: give named slot a higher priority\n\t  // than unnamed slots\n\t  if (tag === 'slot' && hasBindAttr(el, 'name')) {\n\t    tag = '_namedSlot';\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t  var value, dirName;\n\t  for (var i = 0, l = terminalDirectives.length; i < l; i++) {\n\t    dirName = terminalDirectives[i];\n\t    value = el.getAttribute('v-' + dirName);\n\t    if (value != null) {\n\t      return makeTerminalNodeLinkFn(el, dirName, value, options);\n\t    }\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} [def]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    // either an element directive, or if/for\n\t    def: def || publicDirectives[dirName]\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', publicDirectives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.');\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', publicDirectives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', publicDirectives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName);\n\t\n\t              if (false) {\n\t                assertAsset(dirDef, 'directive', dirName);\n\t              }\n\t\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (el instanceof DocumentFragment) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value)) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\tterminalDirectives: terminalDirectives,\n\t\ttransclude: transclude\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.');\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var propsData = this._data;\n\t    var optionsDataFn = this.$options.data;\n\t    var optionsData = optionsDataFn && optionsDataFn();\n\t    var runtimeData;\n\t    if (false) {\n\t      runtimeData = (typeof this._runtimeData === 'function' ? this._runtimeData() : this._runtimeData) || {};\n\t      this._runtimeData = null;\n\t    }\n\t    if (optionsData) {\n\t      this._data = optionsData;\n\t      for (var prop in propsData) {\n\t        if (false) {\n\t          warn('Data field \"' + prop + '\" is already defined ' + 'as a prop. Use prop default value instead.');\n\t        }\n\t        if (this._props[prop].raw !== null || !hasOwn(optionsData, prop)) {\n\t          set(optionsData, prop, propsData[prop]);\n\t        }\n\t      }\n\t    }\n\t    var data = this._data;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      this._proxy(key);\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind$1(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind$1(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind$1(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".');\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {String} name\n\t * @param {Node} el\n\t * @param {Vue} vm\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} raw\n\t * @param {Object} def - directive definition object\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t *\n\t * @param {Object} def\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop;\n\t    }\n\t    var preProcess = this._preProcess ? bind$1(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind$1(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = params[i];\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on$1(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (el instanceof DocumentFragment) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {String} name - directive name\n\t   * @param {Node} node   - target node\n\t   * @param {Object} desc - parsed directive descriptor\n\t   * @param {Object} def  - directive definition object\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name);\n\t      if (false) {\n\t        assertAsset(fn, 'filter', filter.name);\n\t      }\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String} id\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (id, cb) {\n\t    var factory = resolveAsset(this.$options, 'components', id);\n\t    if (false) {\n\t      assertAsset(factory, 'component', id);\n\t    }\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory(function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component: ' + id + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tfunction globalAPI (Vue) {\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text$1,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          definition.name = id;\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t}\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement && !isSimplePath(exp)) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      for (var key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.');\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install APIs\n\tglobalAPI(Vue);\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = toArray(arguments, n).reduce(function (prev, cur) {\n\t    return prev.concat(cur);\n\t  }, []);\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} sortKey\n\t * @param {String} reverse\n\t */\n\t\n\tfunction orderBy(arr, sortKey, reverse) {\n\t  arr = convertArray(arr);\n\t  if (!sortKey) {\n\t    return arr;\n\t  }\n\t  var order = reverse && reverse < 0 ? -1 : 1;\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(function (a, b) {\n\t    if (sortKey !== '$key') {\n\t      if (isObject(a) && '$value' in a) a = a.$value;\n\t      if (isObject(b) && '$value' in b) b = b.$value;\n\t    }\n\t    a = isObject(a) ? getPath(a, sortKey) : a;\n\t    b = isObject(b) ? getPath(b, sortKey) : b;\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  });\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   */\n\t\n\t  currency: function currency(value, _currency) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    var stringified = Math.abs(value).toFixed(2);\n\t    var _int = stringified.slice(0, -3);\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = stringified.slice(-3);\n\t    var sign = value < 0 ? '-' : '';\n\t    return _currency + sign + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id);\n\t    if (false) {\n\t      assertAsset(partial, 'partial', id);\n\t    }\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\t// This is the elementDirective that handles <content>\n\t// transclusions. It relies on the raw content of an\n\t// instance being stored as `$options._content` during\n\t// the transclude phase.\n\t\n\t// We are exporting two versions, one for named and one\n\t// for unnamed, because the unnamed slots must be compiled\n\t// AFTER all named slots have selected their content. So\n\t// we need to give them different priorities in the compilation\n\t// process. (See #1965)\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t\n\t  bind: function bind() {\n\t    var host = this.vm;\n\t    var raw = host.$options._content;\n\t    if (!raw) {\n\t      this.fallback();\n\t      return;\n\t    }\n\t    var context = host._context;\n\t    var slotName = this.params && this.params.name;\n\t    if (!slotName) {\n\t      // Default slot\n\t      this.tryCompile(extractFragment(raw.childNodes, raw, true), context, host);\n\t    } else {\n\t      // Named slot\n\t      var selector = '[slot=\"' + slotName + '\"]';\n\t      var nodes = raw.querySelectorAll(selector);\n\t      if (nodes.length) {\n\t        this.tryCompile(extractFragment(nodes, raw), context, host);\n\t      } else {\n\t        this.fallback();\n\t      }\n\t    }\n\t  },\n\t\n\t  tryCompile: function tryCompile(content, context, host) {\n\t    if (content.hasChildNodes()) {\n\t      this.compile(content, context, host);\n\t    } else {\n\t      this.fallback();\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar namedSlot = extend(extend({}, slot), {\n\t  priority: slot.priority + 1,\n\t  params: ['name']\n\t});\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @param {Element} parent\n\t * @param {Boolean} main\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent, main) {\n\t  var frag = document.createDocumentFragment();\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    // if this is the main outlet, we want to skip all\n\t    // previously selected nodes;\n\t    // otherwise, we want to mark the node as selected.\n\t    // clone the node so the original raw content remains\n\t    // intact. this ensures proper re-compilation in cases\n\t    // where the outlet is inside a conditional block\n\t    if (main && !node.__v_selected) {\n\t      append(node);\n\t    } else if (!main && node.parentNode === parent) {\n\t      node.__v_selected = true;\n\t      append(node);\n\t    }\n\t  }\n\t  return frag;\n\t\n\t  function append(node) {\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      node = parseTemplate(node);\n\t    }\n\t    node = cloneNode(node);\n\t    frag.appendChild(node);\n\t  }\n\t}\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  _namedSlot: namedSlot, // same as slot but with higher priority\n\t  partial: partial\n\t};\n\t\n\tVue.version = '1.0.16';\n\t\n\t/**\n\t * Vue and every constructor that extends Vue has an\n\t * associated options object, which can be accessed during\n\t * compilation steps as `this.constructor.options`.\n\t *\n\t * These can be seen as the default options of every\n\t * Vue instance.\n\t */\n\t\n\tVue.options = {\n\t  directives: publicDirectives,\n\t  elementDirectives: elementDirectives,\n\t  filters: filters,\n\t  transitions: {},\n\t  components: {},\n\t  partials: {},\n\t  replace: true\n\t};\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tif (devtools) {\n\t  devtools.emit('init', Vue);\n\t} else if (false) {\n\t  console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t}\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** app.1706979ef88c9d65d6f2.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a1bac829570ca63131fa\n **/","/*!\n * SkyEvent Web前端 入口\n * SkyEvent Web Front-End Enterance\n * (c) 2016 Ziheng Gao\n */\nimport Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport i18n from 'vue-i18n'\nimport ZhMsg from './lang/zh'\nimport EnMsg from './lang/en'\nimport IndexPages from './Pages/Index'\nimport EventsPages from './Pages/Events'\nimport Lang from './lang-detect'\n\n// ready translated locales\nvar locales = {\n  en: EnMsg,\n  zh: ZhMsg\n}\n\n// set plugin\nVue.use(i18n, {\n  lang: Lang.get(),\n  locales: locales\n})\nVue.use(VueRouter)\nvar router = new VueRouter()\nrouter.map({\n  '/': {\n    component: IndexPages\n  },\n  '/events': {\n    component: EventsPages\n  }\n})\nimport App from './App'\nApp.methods.language = function (lang) {\n  Lang.set(lang)\n  location.reload()\n}\nrouter.start(App, '#app')\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","<template>\n  <div>\n    <navbar></navbar>\n    <router-view></router-view>\n    <div class=\"container\">\n      <hr>\n      <!-- Footer -->\n      <footer>\n        <div class=\"row\">\n          <div class=\"col-lg-12\">\n            <p>Copyright &copy; SkyEvent 2016 <span class=\"pull-right\">Create by Ziheng Gao</span></p>\n          </div>\n        </div>\n      </footer>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Navbar from './components/Navbar'\nimport User from './model/user'\nimport Events from './model/events'\nimport Version from './version'\n\nexport default {\n  components: {\n    Navbar\n  },\n  data: function () {\n    return {\n      version: Version.data,\n      user: User,\n      events: Events\n    }\n  },\n  methods: {\n    language: function (lang) {}\n  }\n}\n</script>\n\n<style>\nbody {\n    padding-top: 50px;\n}\n\nfooter {\n    margin: 50px 0;\n}\n</style>\n\n\n/** WEBPACK FOOTER **\n ** App.vue?2940574e\n **/","<template>\n  <div class=\"container\">\n    <div class=\"jumbotron hero-spacer\">\n      <div class=\"row\">\n        <div class=\"col-lg-12\">\n          <h2 class=\"page-header\">{{ $t('index.events') }}\n          </h2>\n        </div>\n      </div>\n\n      <eventlist></eventlist>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Eventlist from '../components/Eventlist'\n\nexport default {\n  components: {\n    Eventlist\n  }\n}\n</script>\n\n<style>\n.hero-spacer {\n    margin-top: 50px;\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** Events.vue?3966204e\n **/","<template>\n  <jumbotron></jumbotron>\n  <features></features>\n</template>\n\n<script>\nimport Jumbotron from '../components/Jumbotron'\nimport Features from '../components/Features'\n\nexport default {\n  components: {\n    Jumbotron,\n    Features\n  }\n}\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** Index.vue?4c23d1dc\n **/","<template>\n  <div v-for=\"event in events\">\n    <div class=\"row\">\n      <div class=\"col-md-7\">\n        <a href=\"#\">\n          <img class=\"img-responsive\" :src=\"event.image\" alt=\"\">\n        </a>\n      </div>\n      <div class=\"col-md-5\">\n        <h3>{{ event.title }}</h3>\n        <h4>Subheading</h4>\n        <p>{{ event.description }}</p>\n        <a class=\"btn btn-primary\" href=\"#\">View Project <span class=\"glyphicon glyphicon-chevron-right\"></span></a>\n      </div>\n    </div>\n    <hr v-show=\"hr($index)\">\n  </div>\n</template>\n\n<script>\nexport default {\n  data: function () {\n    return {\n      events: this.$root.events.getAll()\n    }\n  },\n  methods: {\n    hr: function (index) {\n      if (this.events.length === index + 1) {\n        return false\n      } else {\n        return true\n      }\n    }\n  }\n}\n</script>\n\n<style>\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** Eventlist.vue?6b899f20\n **/","<template>\n  <div class =\"container\">\n    <div class=\"jumbotron hero-spacer\">\n      <h1 class=\"text-center\">SkyEvent  <small>v{{ version.num }} {{ version.sign }}</small></h1>\n      <p class=\"text-center\"><small>{{ $t('message.current_version') }}: v{{ version.num }} {{ version.sign }} build{{ version.build }}</small></p>\n      <p>{{ $t('index.description') }}</p>\n      <p>\n        <a v-link=\"{ path: '/events' }\" class=\"btn btn-primary btn-lg\">{{ $t('index.events') }}</a>\n        <a v-link=\"{ path: '/flights' }\" class=\"btn btn-primary btn-lg\">{{ $t('index.flights') }}</a>\n        <a v-link=\"{ path: '/logs' }\" class=\"btn btn-primary btn-lg\">{{ $t('index.versionlog') }}</a>\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data: function () {\n    return {\n      version: this.$root.version\n    }\n  }\n}\n</script>\n\n<style>\n.hero-spacer {\n    margin-top: 50px;\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** Jumbotron.vue?1f6c8199\n **/","<template>\n  <nav class=\"navbar navbar-inverse navbar-fixed-top\" role=\"navigation\">\n      <div class=\"container\">\n          <!-- Brand and toggle get grouped for better mobile display -->\n          <div class=\"navbar-header\">\n              <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\">\n                  <span class=\"sr-only\">Toggle navigation</span>\n                  <span class=\"icon-bar\"></span>\n                  <span class=\"icon-bar\"></span>\n                  <span class=\"icon-bar\"></span>\n              </button>\n              <a class=\"navbar-brand\" href=\"#\">SkyEvent</a>\n          </div>\n          <!-- Collect the nav links, forms, and other content for toggling -->\n          <div class=\"collapse navbar-collapse\">\n              <ul class=\"nav navbar-nav\">\n                  <li v-link=\"{ path: '/', exact: true, activeClass: 'active' }\">\n                      <a v-link=\"{ path: '/' }\">{{ $t('message.home') }}</a>\n                  </li>\n                  <li v-link=\"{ path: '/events', exact: true, activeClass: 'active' }\">\n                      <a v-link=\"{ path: '/events' }\">{{ $t('message.event') }}</a>\n                  </li>\n              </ul>\n\n              <ul class=\"nav navbar-nav navbar-right\">\n                <!-- languages selector -->\n                <li class=\"dropdown\">\n                  <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">语言 / Languages <span class=\"caret\"></span></a>\n                  <ul class=\"dropdown-menu\">\n                    <li><a class=\"vlink\" @click=\"lang('zh')\">简体中文 (Simplified Chinese)</a></li>\n                    <li><a class=\"vlink\" @click=\"lang('en')\">English</a></li>\n                  </ul>\n                </li>\n                <!-- Userbar -->\n                <userbar></userbar>\n              </ul>\n          </div>\n          <!-- /.navbar-collapse -->\n      </div>\n      <!-- /.container -->\n  </nav>\n</template>\n\n<script>\nimport Userbar from './Userbar'\n\nexport default {\n  components: {\n    Userbar\n  },\n  methods: {\n    lang: function (lang) {\n      this.$parent.language(lang)\n    }\n  }\n}\n</script>\n\n<style>\n.vlink {\n  cursor: pointer;\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** Navbar.vue?075f5adc\n **/","<template>\n  <!-- Guest -->\n  <li class=\"dropdown\" v-if=\"flaq\">\n    <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">{{ $t('message.guest') }} <span class=\"caret\"></span></a>\n    <ul class=\"dropdown-menu\">\n      <li><a href=\"#\">{{ $t('user.login') }}</a></li>\n      <li><a href=\"#\">{{ $t('user.reg') }}</a></li>\n    </ul>\n  </li>\n  <!-- User -->\n  <li class=\"dropdown\" v-else>\n    <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">C1航路管制员 Ziheng Gao <span class=\"caret\"></span></a>\n    <ul class=\"dropdown-menu\">\n      <li><a href=\"#\">Action</a></li>\n      <li><a href=\"#\">Another action</a></li>\n      <li><a href=\"#\">Something else here</a></li>\n      <li role=\"separator\" class=\"divider\"></li>\n      <li><a href=\"#\">{{ $t('user.logout') }}</a></li>\n    </ul>\n  </li>\n</template>\n\n<script>\nvar M\n\nexport default {\n  init: function () {\n    M = this.$root.user\n  },\n  data: function () {\n    return {\n      flaq: M.getState()\n    }\n  },\n  methods: {\n    lang: function (lang) {\n      this.$parent.language(lang)\n    }\n  }\n}\n</script>\n\n<style>\n.vlink {\n  cursor: pointer;\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** Userbar.vue?c3fde11c\n **/","import Cookies from 'js-cookie'\n\nexport default {\n  set: function (lang) {\n    Cookies.set('language', lang)\n  },\n  get: function () {\n    var language = Cookies.get('language')\n    if (!language) {\n      language = navigator.browserLanguage ? navigator.browserLanguage : navigator.language\n      language = language.substr(0, 2)\n    }\n    if (language !== 'zh' && language !== 'en') {\n      language = 'en'\n    }\n    return language\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lang-detect.js\n **/","/*!\n * SkyEvent Web Front-End English Translation Package\n * (c) 2016 Ziheng Gao\n */\nexport default {\n  message: {\n    current_version: 'Current Version',\n    home: 'Home',\n    event: 'Event',\n    guest: 'Guest'\n  },\n  index: {\n    events: 'Events List',\n    flights: 'Flights List',\n    versionlog: 'Version Log',\n    description: 'SkyEvent is a website for manage flight simuate events from VATPRC. You can join a event and get more infomation,Rank system is available too. More features will online...'\n  },\n  user: {\n    login: 'Login',\n    reg: 'Register',\n    logout: 'Logout'\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lang/en.js\n **/","/*!\n * SkyEvent Web前端 中文语言包\n * (c) 2016 Ziheng Gao\n */\nexport default {\n  message: {\n    current_version: '当前版本',\n    home: '首页',\n    event: '活动',\n    guest: '游客'\n  },\n  index: {\n    events: '活动列表',\n    flights: '航班列表',\n    versionlog: '版本更新记录',\n    description: 'SkyEvent是VATPRC旗下管理各种模拟飞行活动网站，您可以选择您感兴趣活动的活动报名参加，并获得活动有关的信息，您可通过参与活动加入积分评比。更多功能不断加入中...'\n  },\n  user: {\n    login: '登录',\n    reg: '注册',\n    logout: '登出'\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lang/zh.js\n **/","export default {\n  getAll: function () {\n    return [\n      {\n        title: '巴基斯坦vACC独立日纪念活动',\n        description: '巴基斯坦一直与中国有着良好的友谊关系，两国保持着密切的文化往来。',\n        image: 'http://forum.vatprc.net/uploads/monthly_07_2015/post-628-0-85587800-1437650188.png'\n      },\n      {\n        title: 'Tour of China 2015 & 环中国 2015 贵阳 - 三亚',\n        description: '本周环中国我们将飞向中国最南端旅游城市鹿城三亚！',\n        image: 'http://forum.vatprc.net/uploads/monthly_08_2015/post-577-0-56088900-1439629176.png'\n      },\n      {\n        title: '中韩双城记 北京 首尔',\n        description: '久违的“中韩双城记” 北京 <-> 首尔连飞活动再度归来，VATSIM中国分部与韩国分部再度合作。经典线路，经典旅程，期待各位飞友前来参加！',\n        image: 'http://forum.vatprc.net/uploads/monthly_01_2016/post-577-0-80573900-1453379139.png'\n      }\n    ]\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/model/events.js\n **/","export default {\n  getState: function () {\n    return true\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/model/user.js\n **/","/*!\n * JavaScript Cookie v2.1.0\n * https://github.com/js-cookie/js-cookie\n *\n * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n * Released under the MIT license\n */\n(function (factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\tvar _OldCookies = window.Cookies;\n\t\tvar api = window.Cookies = factory();\n\t\tapi.noConflict = function () {\n\t\t\twindow.Cookies = _OldCookies;\n\t\t\treturn api;\n\t\t};\n\t}\n}(function () {\n\tfunction extend () {\n\t\tvar i = 0;\n\t\tvar result = {};\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar attributes = arguments[ i ];\n\t\t\tfor (var key in attributes) {\n\t\t\t\tresult[key] = attributes[key];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction init (converter) {\n\t\tfunction api (key, value, attributes) {\n\t\t\tvar result;\n\n\t\t\t// Write\n\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tattributes = extend({\n\t\t\t\t\tpath: '/'\n\t\t\t\t}, api.defaults, attributes);\n\n\t\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\t\tvar expires = new Date();\n\t\t\t\t\texpires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);\n\t\t\t\t\tattributes.expires = expires;\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tresult = JSON.stringify(value);\n\t\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\t\tvalue = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\n\t\t\t\tif (!converter.write) {\n\t\t\t\t\tvalue = encodeURIComponent(String(value))\n\t\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = converter.write(value, key);\n\t\t\t\t}\n\n\t\t\t\tkey = encodeURIComponent(String(key));\n\t\t\t\tkey = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);\n\t\t\t\tkey = key.replace(/[\\(\\)]/g, escape);\n\n\t\t\t\treturn (document.cookie = [\n\t\t\t\t\tkey, '=', value,\n\t\t\t\t\tattributes.expires && '; expires=' + attributes.expires.toUTCString(), // use expires attribute, max-age is not supported by IE\n\t\t\t\t\tattributes.path    && '; path=' + attributes.path,\n\t\t\t\t\tattributes.domain  && '; domain=' + attributes.domain,\n\t\t\t\t\tattributes.secure ? '; secure' : ''\n\t\t\t\t].join(''));\n\t\t\t}\n\n\t\t\t// Read\n\n\t\t\tif (!key) {\n\t\t\t\tresult = {};\n\t\t\t}\n\n\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t// in case there are no cookies at all. Also prevents odd result when\n\t\t\t// calling \"get()\"\n\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\tvar rdecode = /(%[0-9A-Z]{2})+/g;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\tvar name = parts[0].replace(rdecode, decodeURIComponent);\n\t\t\t\tvar cookie = parts.slice(1).join('=');\n\n\t\t\t\tif (cookie.charAt(0) === '\"') {\n\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tcookie = converter.read ?\n\t\t\t\t\t\tconverter.read(cookie, name) : converter(cookie, name) ||\n\t\t\t\t\t\tcookie.replace(rdecode, decodeURIComponent);\n\n\t\t\t\t\tif (this.json) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\tresult = cookie;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!key) {\n\t\t\t\t\t\tresult[name] = cookie;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tapi.get = api.set = api;\n\t\tapi.getJSON = function () {\n\t\t\treturn api.apply({\n\t\t\t\tjson: true\n\t\t\t}, [].slice.call(arguments));\n\t\t};\n\t\tapi.defaults = {};\n\n\t\tapi.remove = function (key, attributes) {\n\t\t\tapi(key, '', extend(attributes, {\n\t\t\t\texpires: -1\n\t\t\t}));\n\t\t};\n\n\t\tapi.withConverter = init;\n\n\t\treturn api;\n\t}\n\n\treturn init(function () {});\n}));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/js-cookie/src/js.cookie.js\n ** module id = 21\n ** module chunks = 0\n **/","module.exports = \"<div><navbar></navbar><router-view></router-view><div class=container><hr><footer><div class=row><div class=col-lg-12><p>Copyright &copy; SkyEvent 2016 <span class=pull-right>Create by Ziheng Gao</span></p></div></div></footer></div></div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n ** module id = 22\n ** module chunks = 0\n **/","module.exports = \"<div class=container><div class=\\\"jumbotron hero-spacer\\\"><div class=row><div class=col-lg-12><h2 class=page-header>{{ $t('index.events') }}</h2></div></div><eventlist></eventlist></div></div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/Pages/Events.vue\n ** module id = 23\n ** module chunks = 0\n **/","module.exports = \"<jumbotron></jumbotron><features></features>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/Pages/Index.vue\n ** module id = 24\n ** module chunks = 0\n **/","module.exports = \"<div v-for=\\\"event in events\\\"><div class=row><div class=col-md-7><a href=#><img class=img-responsive :src=event.image alt=\\\"\\\"></a></div><div class=col-md-5><h3>{{ event.title }}</h3><h4>Subheading</h4><p>{{ event.description }}</p><a class=\\\"btn btn-primary\\\" href=#>View Project <span class=\\\"glyphicon glyphicon-chevron-right\\\"></span></a></div></div><hr v-show=hr($index)></div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Eventlist.vue\n ** module id = 25\n ** module chunks = 0\n **/","module.exports = \"<div class=container><div class=row><div class=col-lg-12><h3>近期活动</h3></div></div><div class=\\\"row text-center\\\"><div class=\\\"col-md-3 col-sm-6 hero-feature\\\" v-for=\\\"event in events\\\"><div class=thumbnail><img src=\\\"{{ event.image }}\\\" alt=\\\"\\\"><div class=caption><h3>{{ event.title }}</h3><p>{{ event.description }}</p><p><a href=# class=\\\"btn btn-primary\\\">Buy Now!</a> <a href=# class=\\\"btn btn-default\\\">More Info</a></p></div></div></div></div></div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Features.vue\n ** module id = 26\n ** module chunks = 0\n **/","module.exports = \"<div class=container><div class=\\\"jumbotron hero-spacer\\\"><h1 class=text-center>SkyEvent <small>v{{ version.num }} {{ version.sign }}</small></h1><p class=text-center><small>{{ $t('message.current_version') }}: v{{ version.num }} {{ version.sign }} build{{ version.build }}</small></p><p>{{ $t('index.description') }}</p><p><a v-link=\\\"{ path: '/events' }\\\" class=\\\"btn btn-primary btn-lg\\\">{{ $t('index.events') }}</a> <a v-link=\\\"{ path: '/flights' }\\\" class=\\\"btn btn-primary btn-lg\\\">{{ $t('index.flights') }}</a> <a v-link=\\\"{ path: '/logs' }\\\" class=\\\"btn btn-primary btn-lg\\\">{{ $t('index.versionlog') }}</a></p></div></div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Jumbotron.vue\n ** module id = 27\n ** module chunks = 0\n **/","module.exports = \"<nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\" role=navigation><div class=container><div class=navbar-header><button type=button class=navbar-toggle data-toggle=collapse data-target=#bs-example-navbar-collapse-1><span class=sr-only>Toggle navigation</span> <span class=icon-bar></span> <span class=icon-bar></span> <span class=icon-bar></span></button> <a class=navbar-brand href=#>SkyEvent</a></div><div class=\\\"collapse navbar-collapse\\\"><ul class=\\\"nav navbar-nav\\\"><li v-link=\\\"{ path: '/', exact: true, activeClass: 'active' }\\\"><a v-link=\\\"{ path: '/' }\\\">{{ $t('message.home') }}</a></li><li v-link=\\\"{ path: '/events', exact: true, activeClass: 'active' }\\\"><a v-link=\\\"{ path: '/events' }\\\">{{ $t('message.event') }}</a></li></ul><ul class=\\\"nav navbar-nav navbar-right\\\"><li class=dropdown><a href=# class=dropdown-toggle data-toggle=dropdown role=button aria-haspopup=true aria-expanded=false>语言 / Languages <span class=caret></span></a><ul class=dropdown-menu><li><a class=vlink @click=\\\"lang('zh')\\\">简体中文 (Simplified Chinese)</a></li><li><a class=vlink @click=\\\"lang('en')\\\">English</a></li></ul></li><userbar></userbar></ul></div></div></nav>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Navbar.vue\n ** module id = 28\n ** module chunks = 0\n **/","module.exports = \"<li class=dropdown v-if=flaq><a href=# class=dropdown-toggle data-toggle=dropdown role=button aria-haspopup=true aria-expanded=false>{{ $t('message.guest') }} <span class=caret></span></a><ul class=dropdown-menu><li><a href=#>{{ $t('user.login') }}</a></li><li><a href=#>{{ $t('user.reg') }}</a></li></ul></li><li class=dropdown v-else><a href=# class=dropdown-toggle data-toggle=dropdown role=button aria-haspopup=true aria-expanded=false>C1航路管制员 Ziheng Gao <span class=caret></span></a><ul class=dropdown-menu><li><a href=#>Action</a></li><li><a href=#>Another action</a></li><li><a href=#>Something else here</a></li><li role=separator class=divider></li><li><a href=#>{{ $t('user.logout') }}</a></li></ul></li>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Userbar.vue\n ** module id = 29\n ** module chunks = 0\n **/","/*!\n * vue-i18n v2.4.0\n * (c) 2016 kazuya kawaguchi\n * Released under the MIT License.\n */\n'use strict';\n\nvar babelHelpers = {};\n\nbabelHelpers.typeof = function (obj) {\n  return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n};\n\nbabelHelpers;\n/**\n *  String format template\n *  - Inspired:  \n *    https://github.com/Matt-Esch/string-template/index.js\n */\n\nvar RE_NARGS = /\\{([0-9a-zA-Z]+)\\}/g;\n\n/**\n * template\n *  \n * @param {String} string\n * @param {Array} ...args\n * @return {String}\n */\n\nfunction format (string) {\n  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  if (args.length === 1 && babelHelpers.typeof(args[0]) === 'object') {\n    args = args[0];\n  }\n\n  if (!args || !args.hasOwnProperty) {\n    args = {};\n  }\n\n  return string.replace(RE_NARGS, function (match, i, index) {\n    var result = undefined;\n\n    if (string[index - 1] === '{' && string[index + match.length] === '}') {\n      return i;\n    } else {\n      result = args.hasOwnProperty(i) ? args[i] : null;\n      if (result === null || result === undefined) {\n        return '';\n      }\n\n      return result;\n    }\n  });\n}\n\n/**\n * Version compare\n * - Inspired:\n *   https://github.com/omichelsen/compare-versions\n */\n\nvar PATCH_PATTERN = /-([\\w-.]+)/;\n\nfunction split(v) {\n  var temp = v.split('.');\n  var arr = temp.splice(0, 2);\n  arr.push(temp.join('.'));\n  return arr;\n}\n\n/**\n * compare\n *\n * @param {String} v1\n * @param {String} v2\n * @return {Number}\n */\n\nfunction compare (v1, v2) {\n  var s1 = split(v1);\n  var s2 = split(v2);\n\n  for (var i = 0; i < 3; i++) {\n    var n1 = parseInt(s1[i] || 0, 10);\n    var n2 = parseInt(s2[i] || 0, 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  if ((s1[2] + s2[2] + '').indexOf('-') > -1) {\n    var p1 = (PATCH_PATTERN.exec(s1[2]) || [''])[0];\n    var p2 = (PATCH_PATTERN.exec(s2[2]) || [''])[0];\n\n    if (p1 === '') {\n      return 1;\n    }\n    if (p2 === '') {\n      return -1;\n    }\n    if (p1 > p2) {\n      return 1;\n    }\n    if (p2 > p1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * extend\n * \n * @param {Vue} Vue\n * @param {Object} locales\n * @return {Vue}\n */\n\nfunction extend (Vue, locales) {\n  var getPath = Vue.version && compare('1.0.8', Vue.version) === -1 ? Vue.parsers.path.getPath : Vue.parsers.path.get;\n  var util = Vue.util;\n\n  function getVal(key, lang, args) {\n    var value = key;\n    try {\n      var val = getPath(locales[lang], key) || locales[lang][key];\n      value = (args ? format(val, args) : val) || key;\n    } catch (e) {\n      value = key;\n    }\n    return value;\n  }\n\n  /**\n   * Vue.t\n   *\n   * @param {String} key\n   * @param {Array} ...args\n   * @return {String}\n   */\n\n  Vue.t = function (key) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (!key) {\n      return '';\n    }\n\n    var language = Vue.config.lang;\n    if (args.length === 1) {\n      if (util.isObject(args[0]) || util.isArray(args[0])) {\n        args = args[0];\n      } else if (typeof args[0] === 'string') {\n        language = args[0];\n      }\n    } else if (args.length === 2) {\n      if (typeof args[0] === 'string') {\n        language = args[0];\n      }\n      if (util.isObject(args[1]) || util.isArray(args[1])) {\n        args = args[1];\n      }\n    }\n\n    return getVal(key, language, args);\n  };\n\n  /**\n   * $t\n   *\n   * @param {String} key\n   * @param {Array} ...args\n   * @return {String}\n   */\n\n  Vue.prototype.$t = function (key) {\n    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    return Vue.t.apply(Vue, [key].concat(args));\n  };\n\n  return Vue;\n}\n\n/**\n * plugin\n *\n * @param {Object} Vue\n * @param {Object} opts\n */\n\nfunction plugin(Vue) {\n  var opts = arguments.length <= 1 || arguments[1] === undefined ? { lang: 'en', locales: {} } : arguments[1];\n\n  defineConfig(Vue.config, opts.lang);\n  extend(Vue, opts.locales);\n}\n\n/**\n * defineConfig\n *\n * This function define `lang` property to `Vue.config`.\n *\n * @param {Object} config\n * @param {String} lang\n * @private\n */\n\nfunction defineConfig(config, lang) {\n  Object.defineProperty(config, 'lang', {\n    get: function get() {\n      return lang;\n    },\n    set: function set(val) {\n      lang = val;\n    }\n  });\n}\n\nplugin.version = '2.4.0';\n\nmodule.exports = plugin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-i18n/dist/vue-i18n.common.js\n ** module id = 30\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"-!./../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../node_modules/vue-loader/lib/style-rewriter.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\")\n__vue_script__ = require(\"-!babel!eslint!./../node_modules/vue-loader/lib/selector.js?type=script&index=0!./App.vue\")\n__vue_template__ = require(\"-!vue-html-loader!./../node_modules/vue-loader/lib/selector.js?type=template&index=0!./App.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/App.vue\n ** module id = 31\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"-!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Events.vue\")\n__vue_script__ = require(\"-!babel!eslint!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Events.vue\")\n__vue_template__ = require(\"-!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Events.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/Pages/Events.vue\n ** module id = 32\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"-!babel!eslint!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Index.vue\")\n__vue_template__ = require(\"-!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Index.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/Pages/Index.vue\n ** module id = 33\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"-!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Eventlist.vue\")\n__vue_script__ = require(\"-!babel!eslint!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Eventlist.vue\")\n__vue_template__ = require(\"-!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Eventlist.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/Eventlist.vue\n ** module id = 34\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"-!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Features.vue\")\n__vue_script__ = require(\"-!babel!eslint!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Features.vue\")\n__vue_template__ = require(\"-!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Features.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/Features.vue\n ** module id = 35\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"-!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Jumbotron.vue\")\n__vue_script__ = require(\"-!babel!eslint!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Jumbotron.vue\")\n__vue_template__ = require(\"-!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Jumbotron.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/Jumbotron.vue\n ** module id = 36\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"-!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Navbar.vue\")\n__vue_script__ = require(\"-!babel!eslint!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Navbar.vue\")\n__vue_template__ = require(\"-!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Navbar.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/Navbar.vue\n ** module id = 37\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"-!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Userbar.vue\")\n__vue_script__ = require(\"-!babel!eslint!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Userbar.vue\")\n__vue_template__ = require(\"-!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Userbar.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/Userbar.vue\n ** module id = 38\n ** module chunks = 0\n **/","/*!\n * vue-router v0.7.10\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.VueRouter = factory();\n}(this, function () { 'use strict';\n\n  var babelHelpers = {};\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n  function Target(path, matcher, delegate) {\n    this.path = path;\n    this.matcher = matcher;\n    this.delegate = delegate;\n  }\n\n  Target.prototype = {\n    to: function to(target, callback) {\n      var delegate = this.delegate;\n\n      if (delegate && delegate.willAddRoute) {\n        target = delegate.willAddRoute(this.matcher.target, target);\n      }\n\n      this.matcher.add(this.path, target);\n\n      if (callback) {\n        if (callback.length === 0) {\n          throw new Error(\"You must have an argument in the function passed to `to`\");\n        }\n        this.matcher.addChild(this.path, target, callback, this.delegate);\n      }\n      return this;\n    }\n  };\n\n  function Matcher(target) {\n    this.routes = {};\n    this.children = {};\n    this.target = target;\n  }\n\n  Matcher.prototype = {\n    add: function add(path, handler) {\n      this.routes[path] = handler;\n    },\n\n    addChild: function addChild(path, target, callback, delegate) {\n      var matcher = new Matcher(target);\n      this.children[path] = matcher;\n\n      var match = generateMatch(path, matcher, delegate);\n\n      if (delegate && delegate.contextEntered) {\n        delegate.contextEntered(target, match);\n      }\n\n      callback(match);\n    }\n  };\n\n  function generateMatch(startingPath, matcher, delegate) {\n    return function (path, nestedCallback) {\n      var fullPath = startingPath + path;\n\n      if (nestedCallback) {\n        nestedCallback(generateMatch(fullPath, matcher, delegate));\n      } else {\n        return new Target(startingPath + path, matcher, delegate);\n      }\n    };\n  }\n\n  function addRoute(routeArray, path, handler) {\n    var len = 0;\n    for (var i = 0, l = routeArray.length; i < l; i++) {\n      len += routeArray[i].path.length;\n    }\n\n    path = path.substr(len);\n    var route = { path: path, handler: handler };\n    routeArray.push(route);\n  }\n\n  function eachRoute(baseRoute, matcher, callback, binding) {\n    var routes = matcher.routes;\n\n    for (var path in routes) {\n      if (routes.hasOwnProperty(path)) {\n        var routeArray = baseRoute.slice();\n        addRoute(routeArray, path, routes[path]);\n\n        if (matcher.children[path]) {\n          eachRoute(routeArray, matcher.children[path], callback, binding);\n        } else {\n          callback.call(binding, routeArray);\n        }\n      }\n    }\n  }\n\n  function map (callback, addRouteCallback) {\n    var matcher = new Matcher();\n\n    callback(generateMatch(\"\", matcher, this.delegate));\n\n    eachRoute([], matcher, function (route) {\n      if (addRouteCallback) {\n        addRouteCallback(this, route);\n      } else {\n        this.add(route);\n      }\n    }, this);\n  }\n\n  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\n  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\n  function isArray(test) {\n    return Object.prototype.toString.call(test) === \"[object Array]\";\n  }\n\n  // A Segment represents a segment in the original route description.\n  // Each Segment type provides an `eachChar` and `regex` method.\n  //\n  // The `eachChar` method invokes the callback with one or more character\n  // specifications. A character specification consumes one or more input\n  // characters.\n  //\n  // The `regex` method returns a regex fragment for the segment. If the\n  // segment is a dynamic of star segment, the regex fragment also includes\n  // a capture.\n  //\n  // A character specification contains:\n  //\n  // * `validChars`: a String with a list of all valid characters, or\n  // * `invalidChars`: a String with a list of all invalid characters\n  // * `repeat`: true if the character specification can repeat\n\n  function StaticSegment(string) {\n    this.string = string;\n  }\n  StaticSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      var string = this.string,\n          ch;\n\n      for (var i = 0, l = string.length; i < l; i++) {\n        ch = string.charAt(i);\n        callback({ validChars: ch });\n      }\n    },\n\n    regex: function regex() {\n      return this.string.replace(escapeRegex, '\\\\$1');\n    },\n\n    generate: function generate() {\n      return this.string;\n    }\n  };\n\n  function DynamicSegment(name) {\n    this.name = name;\n  }\n  DynamicSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"/\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"([^/]+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function StarSegment(name) {\n    this.name = name;\n  }\n  StarSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"(.+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function EpsilonSegment() {}\n  EpsilonSegment.prototype = {\n    eachChar: function eachChar() {},\n    regex: function regex() {\n      return \"\";\n    },\n    generate: function generate() {\n      return \"\";\n    }\n  };\n\n  function parse(route, names, specificity) {\n    // normalize route as not starting with a \"/\". Recognition will\n    // also normalize.\n    if (route.charAt(0) === \"/\") {\n      route = route.substr(1);\n    }\n\n    var segments = route.split(\"/\"),\n        results = [];\n\n    // A routes has specificity determined by the order that its different segments\n    // appear in. This system mirrors how the magnitude of numbers written as strings\n    // works.\n    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n    // leading symbol, \"1\".\n    // The rule is that symbols to the left carry more weight than symbols to the right\n    // when a number is written out as a string. In the above strings, the leading digit\n    // represents how many 100's are in the number, and it carries more weight than the middle\n    // number which represents how many 10's are in the number.\n    // This system of number magnitude works well for route specificity, too. A route written as\n    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n    // `x`, irrespective of the other parts.\n    // Because of this similarity, we assign each type of segment a number value written as a\n    // string. We can find the specificity of compound routes by concatenating these strings\n    // together, from left to right. After we have looped through all of the segments,\n    // we convert the string to a number.\n    specificity.val = '';\n\n    for (var i = 0, l = segments.length; i < l; i++) {\n      var segment = segments[i],\n          match;\n\n      if (match = segment.match(/^:([^\\/]+)$/)) {\n        results.push(new DynamicSegment(match[1]));\n        names.push(match[1]);\n        specificity.val += '3';\n      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n        results.push(new StarSegment(match[1]));\n        specificity.val += '2';\n        names.push(match[1]);\n      } else if (segment === \"\") {\n        results.push(new EpsilonSegment());\n        specificity.val += '1';\n      } else {\n        results.push(new StaticSegment(segment));\n        specificity.val += '4';\n      }\n    }\n\n    specificity.val = +specificity.val;\n\n    return results;\n  }\n\n  // A State has a character specification and (`charSpec`) and a list of possible\n  // subsequent states (`nextStates`).\n  //\n  // If a State is an accepting state, it will also have several additional\n  // properties:\n  //\n  // * `regex`: A regular expression that is used to extract parameters from paths\n  //   that reached this accepting state.\n  // * `handlers`: Information on how to convert the list of captures into calls\n  //   to registered handlers with the specified parameters\n  // * `types`: How many static, dynamic or star segments in this route. Used to\n  //   decide which route to use if multiple registered routes match a path.\n  //\n  // Currently, State is implemented naively by looping over `nextStates` and\n  // comparing a character specification against a character. A more efficient\n  // implementation would use a hash of keys pointing at one or more next states.\n\n  function State(charSpec) {\n    this.charSpec = charSpec;\n    this.nextStates = [];\n  }\n\n  State.prototype = {\n    get: function get(charSpec) {\n      var nextStates = this.nextStates;\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        var child = nextStates[i];\n\n        var isEqual = child.charSpec.validChars === charSpec.validChars;\n        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\n        if (isEqual) {\n          return child;\n        }\n      }\n    },\n\n    put: function put(charSpec) {\n      var state;\n\n      // If the character specification already exists in a child of the current\n      // state, just return that state.\n      if (state = this.get(charSpec)) {\n        return state;\n      }\n\n      // Make a new state for the character spec\n      state = new State(charSpec);\n\n      // Insert the new state as a child of the current state\n      this.nextStates.push(state);\n\n      // If this character specification repeats, insert the new state as a child\n      // of itself. Note that this will not trigger an infinite loop because each\n      // transition during recognition consumes a character.\n      if (charSpec.repeat) {\n        state.nextStates.push(state);\n      }\n\n      // Return the new state\n      return state;\n    },\n\n    // Find a list of child states matching the next character\n    match: function match(ch) {\n      // DEBUG \"Processing `\" + ch + \"`:\"\n      var nextStates = this.nextStates,\n          child,\n          charSpec,\n          chars;\n\n      // DEBUG \"  \" + debugState(this)\n      var returned = [];\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        child = nextStates[i];\n\n        charSpec = child.charSpec;\n\n        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n          if (chars.indexOf(ch) !== -1) {\n            returned.push(child);\n          }\n        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n          if (chars.indexOf(ch) === -1) {\n            returned.push(child);\n          }\n        }\n      }\n\n      return returned;\n    }\n\n    /** IF DEBUG\n    , debug: function() {\n      var charSpec = this.charSpec,\n          debug = \"[\",\n          chars = charSpec.validChars || charSpec.invalidChars;\n       if (charSpec.invalidChars) { debug += \"^\"; }\n      debug += chars;\n      debug += \"]\";\n       if (charSpec.repeat) { debug += \"+\"; }\n       return debug;\n    }\n    END IF **/\n  };\n\n  /** IF DEBUG\n  function debug(log) {\n    console.log(log);\n  }\n\n  function debugState(state) {\n    return state.nextStates.map(function(n) {\n      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n    }).join(\", \")\n  }\n  END IF **/\n\n  // Sort the routes by specificity\n  function sortSolutions(states) {\n    return states.sort(function (a, b) {\n      return b.specificity.val - a.specificity.val;\n    });\n  }\n\n  function recognizeChar(states, ch) {\n    var nextStates = [];\n\n    for (var i = 0, l = states.length; i < l; i++) {\n      var state = states[i];\n\n      nextStates = nextStates.concat(state.match(ch));\n    }\n\n    return nextStates;\n  }\n\n  var oCreate = Object.create || function (proto) {\n    function F() {}\n    F.prototype = proto;\n    return new F();\n  };\n\n  function RecognizeResults(queryParams) {\n    this.queryParams = queryParams || {};\n  }\n  RecognizeResults.prototype = oCreate({\n    splice: Array.prototype.splice,\n    slice: Array.prototype.slice,\n    push: Array.prototype.push,\n    length: 0,\n    queryParams: null\n  });\n\n  function findHandler(state, path, queryParams) {\n    var handlers = state.handlers,\n        regex = state.regex;\n    var captures = path.match(regex),\n        currentCapture = 1;\n    var result = new RecognizeResults(queryParams);\n\n    for (var i = 0, l = handlers.length; i < l; i++) {\n      var handler = handlers[i],\n          names = handler.names,\n          params = {};\n\n      for (var j = 0, m = names.length; j < m; j++) {\n        params[names[j]] = captures[currentCapture++];\n      }\n\n      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n    }\n\n    return result;\n  }\n\n  function addSegment(currentState, segment) {\n    segment.eachChar(function (ch) {\n      var state;\n\n      currentState = currentState.put(ch);\n    });\n\n    return currentState;\n  }\n\n  function decodeQueryParamPart(part) {\n    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n    part = part.replace(/\\+/gm, '%20');\n    return decodeURIComponent(part);\n  }\n\n  // The main interface\n\n  var RouteRecognizer = function RouteRecognizer() {\n    this.rootState = new State();\n    this.names = {};\n  };\n\n  RouteRecognizer.prototype = {\n    add: function add(routes, options) {\n      var currentState = this.rootState,\n          regex = \"^\",\n          specificity = {},\n          handlers = [],\n          allSegments = [],\n          name;\n\n      var isEmpty = true;\n\n      for (var i = 0, l = routes.length; i < l; i++) {\n        var route = routes[i],\n            names = [];\n\n        var segments = parse(route.path, names, specificity);\n\n        allSegments = allSegments.concat(segments);\n\n        for (var j = 0, m = segments.length; j < m; j++) {\n          var segment = segments[j];\n\n          if (segment instanceof EpsilonSegment) {\n            continue;\n          }\n\n          isEmpty = false;\n\n          // Add a \"/\" for the new segment\n          currentState = currentState.put({ validChars: \"/\" });\n          regex += \"/\";\n\n          // Add a representation of the segment to the NFA and regex\n          currentState = addSegment(currentState, segment);\n          regex += segment.regex();\n        }\n\n        var handler = { handler: route.handler, names: names };\n        handlers.push(handler);\n      }\n\n      if (isEmpty) {\n        currentState = currentState.put({ validChars: \"/\" });\n        regex += \"/\";\n      }\n\n      currentState.handlers = handlers;\n      currentState.regex = new RegExp(regex + \"$\");\n      currentState.specificity = specificity;\n\n      if (name = options && options.as) {\n        this.names[name] = {\n          segments: allSegments,\n          handlers: handlers\n        };\n      }\n    },\n\n    handlersFor: function handlersFor(name) {\n      var route = this.names[name],\n          result = [];\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      for (var i = 0, l = route.handlers.length; i < l; i++) {\n        result.push(route.handlers[i]);\n      }\n\n      return result;\n    },\n\n    hasRoute: function hasRoute(name) {\n      return !!this.names[name];\n    },\n\n    generate: function generate(name, params) {\n      var route = this.names[name],\n          output = \"\";\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      var segments = route.segments;\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        var segment = segments[i];\n\n        if (segment instanceof EpsilonSegment) {\n          continue;\n        }\n\n        output += \"/\";\n        output += segment.generate(params);\n      }\n\n      if (output.charAt(0) !== '/') {\n        output = '/' + output;\n      }\n\n      if (params && params.queryParams) {\n        output += this.generateQueryString(params.queryParams);\n      }\n\n      return output;\n    },\n\n    generateQueryString: function generateQueryString(params) {\n      var pairs = [];\n      var keys = [];\n      for (var key in params) {\n        if (params.hasOwnProperty(key)) {\n          keys.push(key);\n        }\n      }\n      keys.sort();\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        var value = params[key];\n        if (value == null) {\n          continue;\n        }\n        var pair = encodeURIComponent(key);\n        if (isArray(value)) {\n          for (var j = 0, l = value.length; j < l; j++) {\n            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n            pairs.push(arrayPair);\n          }\n        } else {\n          pair += \"=\" + encodeURIComponent(value);\n          pairs.push(pair);\n        }\n      }\n\n      if (pairs.length === 0) {\n        return '';\n      }\n\n      return \"?\" + pairs.join(\"&\");\n    },\n\n    parseQueryString: function parseQueryString(queryString) {\n      var pairs = queryString.split(\"&\"),\n          queryParams = {};\n      for (var i = 0; i < pairs.length; i++) {\n        var pair = pairs[i].split('='),\n            key = decodeQueryParamPart(pair[0]),\n            keyLength = key.length,\n            isArray = false,\n            value;\n        if (pair.length === 1) {\n          value = 'true';\n        } else {\n          //Handle arrays\n          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n            isArray = true;\n            key = key.slice(0, keyLength - 2);\n            if (!queryParams[key]) {\n              queryParams[key] = [];\n            }\n          }\n          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n        }\n        if (isArray) {\n          queryParams[key].push(value);\n        } else {\n          queryParams[key] = value;\n        }\n      }\n      return queryParams;\n    },\n\n    recognize: function recognize(path) {\n      var states = [this.rootState],\n          pathLen,\n          i,\n          l,\n          queryStart,\n          queryParams = {},\n          isSlashDropped = false;\n\n      queryStart = path.indexOf('?');\n      if (queryStart !== -1) {\n        var queryString = path.substr(queryStart + 1, path.length);\n        path = path.substr(0, queryStart);\n        queryParams = this.parseQueryString(queryString);\n      }\n\n      path = decodeURI(path);\n\n      // DEBUG GROUP path\n\n      if (path.charAt(0) !== \"/\") {\n        path = \"/\" + path;\n      }\n\n      pathLen = path.length;\n      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n        path = path.substr(0, pathLen - 1);\n        isSlashDropped = true;\n      }\n\n      for (i = 0, l = path.length; i < l; i++) {\n        states = recognizeChar(states, path.charAt(i));\n        if (!states.length) {\n          break;\n        }\n      }\n\n      // END DEBUG GROUP\n\n      var solutions = [];\n      for (i = 0, l = states.length; i < l; i++) {\n        if (states[i].handlers) {\n          solutions.push(states[i]);\n        }\n      }\n\n      states = sortSolutions(solutions);\n\n      var state = solutions[0];\n\n      if (state && state.handlers) {\n        // if a trailing slash was dropped and a star segment is the last segment\n        // specified, put the trailing slash back\n        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n          path = path + \"/\";\n        }\n        return findHandler(state, path, queryParams);\n      }\n    }\n  };\n\n  RouteRecognizer.prototype.map = map;\n\n  RouteRecognizer.VERSION = '0.1.9';\n\n  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\n  // export default for holding the Vue reference\n  var exports$1 = {};\n  /**\n   * Warn stuff.\n   *\n   * @param {String} msg\n   */\n\n  function warn(msg) {\n    /* istanbul ignore next */\n    if (window.console) {\n      console.warn('[vue-router] ' + msg);\n      if (!exports$1.Vue || exports$1.Vue.config.debug) {\n        console.warn(new Error('warning stack trace:').stack);\n      }\n    }\n  }\n\n  /**\n   * Resolve a relative path.\n   *\n   * @param {String} base\n   * @param {String} relative\n   * @param {Boolean} append\n   * @return {String}\n   */\n\n  function resolvePath(base, relative, append) {\n    var query = base.match(/(\\?.*)$/);\n    if (query) {\n      query = query[1];\n      base = base.slice(0, -query.length);\n    }\n    // a query!\n    if (relative.charAt(0) === '?') {\n      return base + relative;\n    }\n    var stack = base.split('/');\n    // remove trailing segment if:\n    // - not appending\n    // - appending to trailing slash (last segment is empty)\n    if (!append || !stack[stack.length - 1]) {\n      stack.pop();\n    }\n    // resolve relative path\n    var segments = relative.replace(/^\\//, '').split('/');\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n      if (segment === '.') {\n        continue;\n      } else if (segment === '..') {\n        stack.pop();\n      } else {\n        stack.push(segment);\n      }\n    }\n    // ensure leading slash\n    if (stack[0] !== '') {\n      stack.unshift('');\n    }\n    return stack.join('/');\n  }\n\n  /**\n   * Forgiving check for a promise\n   *\n   * @param {Object} p\n   * @return {Boolean}\n   */\n\n  function isPromise(p) {\n    return p && typeof p.then === 'function';\n  }\n\n  /**\n   * Retrive a route config field from a component instance\n   * OR a component contructor.\n   *\n   * @param {Function|Vue} component\n   * @param {String} name\n   * @return {*}\n   */\n\n  function getRouteConfig(component, name) {\n    var options = component && (component.$options || component.options);\n    return options && options.route && options.route[name];\n  }\n\n  /**\n   * Resolve an async component factory. Have to do a dirty\n   * mock here because of Vue core's internal API depends on\n   * an ID check.\n   *\n   * @param {Object} handler\n   * @param {Function} cb\n   */\n\n  var resolver = undefined;\n\n  function resolveAsyncComponent(handler, cb) {\n    if (!resolver) {\n      resolver = {\n        resolve: exports$1.Vue.prototype._resolveComponent,\n        $options: {\n          components: {\n            _: handler.component\n          }\n        }\n      };\n    } else {\n      resolver.$options.components._ = handler.component;\n    }\n    resolver.resolve('_', function (Component) {\n      handler.component = Component;\n      cb(Component);\n    });\n  }\n\n  /**\n   * Map the dynamic segments in a path to params.\n   *\n   * @param {String} path\n   * @param {Object} params\n   * @param {Object} query\n   */\n\n  function mapParams(path, params, query) {\n    if (params === undefined) params = {};\n\n    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n      var val = params[key];\n      /* istanbul ignore if */\n      if (!val) {\n        warn('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n      }\n      return val || '';\n    });\n    if (query) {\n      path += genQuery(query);\n    }\n    return path;\n  }\n\n  var hashRE = /#.*$/;\n\n  var HTML5History = (function () {\n    function HTML5History(_ref) {\n      var root = _ref.root;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HTML5History);\n\n      if (root) {\n        // make sure there's the starting slash\n        if (root.charAt(0) !== '/') {\n          root = '/' + root;\n        }\n        // remove trailing slash\n        this.root = root.replace(/\\/$/, '');\n        this.rootRE = new RegExp('^\\\\' + this.root);\n      } else {\n        this.root = null;\n      }\n      this.onChange = onChange;\n      // check base tag\n      var baseEl = document.querySelector('base');\n      this.base = baseEl && baseEl.getAttribute('href');\n    }\n\n    HTML5History.prototype.start = function start() {\n      var _this = this;\n\n      this.listener = function (e) {\n        var url = decodeURI(location.pathname + location.search);\n        if (_this.root) {\n          url = url.replace(_this.rootRE, '');\n        }\n        _this.onChange(url, e && e.state, location.hash);\n      };\n      window.addEventListener('popstate', this.listener);\n      this.listener();\n    };\n\n    HTML5History.prototype.stop = function stop() {\n      window.removeEventListener('popstate', this.listener);\n    };\n\n    HTML5History.prototype.go = function go(path, replace, append) {\n      var url = this.formatPath(path, append);\n      if (replace) {\n        history.replaceState({}, '', url);\n      } else {\n        // record scroll position by replacing current state\n        history.replaceState({\n          pos: {\n            x: window.pageXOffset,\n            y: window.pageYOffset\n          }\n        }, '');\n        // then push new state\n        history.pushState({}, '', url);\n      }\n      var hashMatch = path.match(hashRE);\n      var hash = hashMatch && hashMatch[0];\n      path = url\n      // strip hash so it doesn't mess up params\n      .replace(hashRE, '')\n      // remove root before matching\n      .replace(this.rootRE, '');\n      this.onChange(path, null, hash);\n    };\n\n    HTML5History.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/'\n      // absolute path\n      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n    };\n\n    return HTML5History;\n  })();\n\n  var HashHistory = (function () {\n    function HashHistory(_ref) {\n      var hashbang = _ref.hashbang;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HashHistory);\n\n      this.hashbang = hashbang;\n      this.onChange = onChange;\n    }\n\n    HashHistory.prototype.start = function start() {\n      var self = this;\n      this.listener = function () {\n        var path = location.hash;\n        var raw = path.replace(/^#!?/, '');\n        // always\n        if (raw.charAt(0) !== '/') {\n          raw = '/' + raw;\n        }\n        var formattedPath = self.formatPath(raw);\n        if (formattedPath !== path) {\n          location.replace(formattedPath);\n          return;\n        }\n        // determine query\n        // note it's possible to have queries in both the actual URL\n        // and the hash fragment itself.\n        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n        self.onChange(decodeURI(path.replace(/^#!?/, '') + query));\n      };\n      window.addEventListener('hashchange', this.listener);\n      this.listener();\n    };\n\n    HashHistory.prototype.stop = function stop() {\n      window.removeEventListener('hashchange', this.listener);\n    };\n\n    HashHistory.prototype.go = function go(path, replace, append) {\n      path = this.formatPath(path, append);\n      if (replace) {\n        location.replace(path);\n      } else {\n        location.hash = path;\n      }\n    };\n\n    HashHistory.prototype.formatPath = function formatPath(path, append) {\n      var isAbsoloute = path.charAt(0) === '/';\n      var prefix = '#' + (this.hashbang ? '!' : '');\n      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n    };\n\n    return HashHistory;\n  })();\n\n  var AbstractHistory = (function () {\n    function AbstractHistory(_ref) {\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, AbstractHistory);\n\n      this.onChange = onChange;\n      this.currentPath = '/';\n    }\n\n    AbstractHistory.prototype.start = function start() {\n      this.onChange('/');\n    };\n\n    AbstractHistory.prototype.stop = function stop() {\n      // noop\n    };\n\n    AbstractHistory.prototype.go = function go(path, replace, append) {\n      path = this.currentPath = this.formatPath(path, append);\n      this.onChange(path);\n    };\n\n    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n    };\n\n    return AbstractHistory;\n  })();\n\n  /**\n   * Determine the reusability of an existing router view.\n   *\n   * @param {Directive} view\n   * @param {Object} handler\n   * @param {Transition} transition\n   */\n\n  function canReuse(view, handler, transition) {\n    var component = view.childVM;\n    if (!component || !handler) {\n      return false;\n    }\n    // important: check view.Component here because it may\n    // have been changed in activate hook\n    if (view.Component !== handler.component) {\n      return false;\n    }\n    var canReuseFn = getRouteConfig(component, 'canReuse');\n    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n      to: transition.to,\n      from: transition.from\n    }) : true; // defaults to true\n  }\n\n  /**\n   * Check if a component can deactivate.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canDeactivate(view, transition, next) {\n    var fromComponent = view.childVM;\n    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHook(hook, fromComponent, next, {\n        expectBoolean: true\n      });\n    }\n  }\n\n  /**\n   * Check if a component can activate.\n   *\n   * @param {Object} handler\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canActivate(handler, transition, next) {\n    resolveAsyncComponent(handler, function (Component) {\n      // have to check due to async-ness\n      if (transition.aborted) {\n        return;\n      }\n      // determine if this component can be activated\n      var hook = getRouteConfig(Component, 'canActivate');\n      if (!hook) {\n        next();\n      } else {\n        transition.callHook(hook, null, next, {\n          expectBoolean: true\n        });\n      }\n    });\n  }\n\n  /**\n   * Call deactivate hooks for existing router-views.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function deactivate(view, transition, next) {\n    var component = view.childVM;\n    var hook = getRouteConfig(component, 'deactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHooks(hook, component, next);\n    }\n  }\n\n  /**\n   * Activate / switch component for a router-view.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Number} depth\n   * @param {Function} [cb]\n   */\n\n  function activate(view, transition, depth, cb, reuse) {\n    var handler = transition.activateQueue[depth];\n    if (!handler) {\n      saveChildView(view);\n      if (view._bound) {\n        view.setComponent(null);\n      }\n      cb && cb();\n      return;\n    }\n\n    var Component = view.Component = handler.component;\n    var activateHook = getRouteConfig(Component, 'activate');\n    var dataHook = getRouteConfig(Component, 'data');\n    var waitForData = getRouteConfig(Component, 'waitForData');\n\n    view.depth = depth;\n    view.activated = false;\n\n    var component = undefined;\n    var loading = !!(dataHook && !waitForData);\n\n    // \"reuse\" is a flag passed down when the parent view is\n    // either reused via keep-alive or as a child of a kept-alive view.\n    // of course we can only reuse if the current kept-alive instance\n    // is of the correct type.\n    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\n    if (reuse) {\n      // just reuse\n      component = view.childVM;\n      component.$loadingRouteData = loading;\n    } else {\n      saveChildView(view);\n\n      // unbuild current component. this step also destroys\n      // and removes all nested child views.\n      view.unbuild(true);\n\n      // build the new component. this will also create the\n      // direct child view of the current one. it will register\n      // itself as view.childView.\n      component = view.build({\n        _meta: {\n          $loadingRouteData: loading\n        },\n        created: function created() {\n          this._routerView = view;\n        }\n      });\n\n      // handle keep-alive.\n      // when a kept-alive child vm is restored, we need to\n      // add its cached child views into the router's view list,\n      // and also properly update current view's child view.\n      if (view.keepAlive) {\n        component.$loadingRouteData = loading;\n        var cachedChildView = component._keepAliveRouterView;\n        if (cachedChildView) {\n          view.childView = cachedChildView;\n          component._keepAliveRouterView = null;\n        }\n      }\n    }\n\n    // cleanup the component in case the transition is aborted\n    // before the component is ever inserted.\n    var cleanup = function cleanup() {\n      component.$destroy();\n    };\n\n    // actually insert the component and trigger transition\n    var insert = function insert() {\n      if (reuse) {\n        cb && cb();\n        return;\n      }\n      var router = transition.router;\n      if (router._rendered || router._transitionOnLoad) {\n        view.transition(component);\n      } else {\n        // no transition on first render, manual transition\n        /* istanbul ignore if */\n        if (view.setCurrent) {\n          // 0.12 compat\n          view.setCurrent(component);\n        } else {\n          // 1.0\n          view.childVM = component;\n        }\n        component.$before(view.anchor, null, false);\n      }\n      cb && cb();\n    };\n\n    var afterData = function afterData() {\n      // activate the child view\n      if (view.childView) {\n        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n      }\n      insert();\n    };\n\n    // called after activation hook is resolved\n    var afterActivate = function afterActivate() {\n      view.activated = true;\n      if (dataHook && waitForData) {\n        // wait until data loaded to insert\n        loadData(component, transition, dataHook, afterData, cleanup);\n      } else {\n        // load data and insert at the same time\n        if (dataHook) {\n          loadData(component, transition, dataHook);\n        }\n        afterData();\n      }\n    };\n\n    if (activateHook) {\n      transition.callHooks(activateHook, component, afterActivate, { cleanup: cleanup });\n    } else {\n      afterActivate();\n    }\n  }\n\n  /**\n   * Reuse a view, just reload data if necessary.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   */\n\n  function reuse(view, transition) {\n    var component = view.childVM;\n    var dataHook = getRouteConfig(component, 'data');\n    if (dataHook) {\n      loadData(component, transition, dataHook);\n    }\n  }\n\n  /**\n   * Asynchronously load and apply data to component.\n   *\n   * @param {Vue} component\n   * @param {Transition} transition\n   * @param {Function} hook\n   * @param {Function} cb\n   * @param {Function} cleanup\n   */\n\n  function loadData(component, transition, hook, cb, cleanup) {\n    component.$loadingRouteData = true;\n    transition.callHooks(hook, component, function (data, onError) {\n      // merge data from multiple data hooks\n      if (Array.isArray(data) && data._needMerge) {\n        data = data.reduce(function (res, obj) {\n          if (isPlainObject(obj)) {\n            Object.keys(obj).forEach(function (key) {\n              res[key] = obj[key];\n            });\n          }\n          return res;\n        }, Object.create(null));\n      }\n      // handle promise sugar syntax\n      var promises = [];\n      if (isPlainObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          var val = data[key];\n          if (isPromise(val)) {\n            promises.push(val.then(function (resolvedVal) {\n              component.$set(key, resolvedVal);\n            }));\n          } else {\n            component.$set(key, val);\n          }\n        });\n      }\n      if (!promises.length) {\n        component.$loadingRouteData = false;\n        component.$emit('route-data-loaded', component);\n        cb && cb();\n      } else {\n        promises[0].constructor.all(promises).then(function () {\n          component.$loadingRouteData = false;\n          component.$emit('route-data-loaded', component);\n          cb && cb();\n        }, onError);\n      }\n    }, {\n      cleanup: cleanup,\n      expectData: true\n    });\n  }\n\n  /**\n   * Save the child view for a kept-alive view so that\n   * we can restore it when it is switched back to.\n   *\n   * @param {Directive} view\n   */\n\n  function saveChildView(view) {\n    if (view.keepAlive && view.childVM && view.childView) {\n      view.childVM._keepAliveRouterView = view.childView;\n    }\n    view.childView = null;\n  }\n\n  /**\n   * Check plain object.\n   *\n   * @param {*} val\n   */\n\n  function isPlainObject(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  /**\n   * A RouteTransition object manages the pipeline of a\n   * router-view switching process. This is also the object\n   * passed into user route hooks.\n   *\n   * @param {Router} router\n   * @param {Route} to\n   * @param {Route} from\n   */\n\n  var RouteTransition = (function () {\n    function RouteTransition(router, to, from) {\n      babelHelpers.classCallCheck(this, RouteTransition);\n\n      this.router = router;\n      this.to = to;\n      this.from = from;\n      this.next = null;\n      this.aborted = false;\n      this.done = false;\n    }\n\n    /**\n     * Abort current transition and return to previous location.\n     */\n\n    RouteTransition.prototype.abort = function abort() {\n      if (!this.aborted) {\n        this.aborted = true;\n        // if the root path throws an error during validation\n        // on initial load, it gets caught in an infinite loop.\n        var abortingOnLoad = !this.from.path && this.to.path === '/';\n        if (!abortingOnLoad) {\n          this.router.replace(this.from.path || '/');\n        }\n      }\n    };\n\n    /**\n     * Abort current transition and redirect to a new location.\n     *\n     * @param {String} path\n     */\n\n    RouteTransition.prototype.redirect = function redirect(path) {\n      if (!this.aborted) {\n        this.aborted = true;\n        if (typeof path === 'string') {\n          path = mapParams(path, this.to.params, this.to.query);\n        } else {\n          path.params = path.params || this.to.params;\n          path.query = path.query || this.to.query;\n        }\n        this.router.replace(path);\n      }\n    };\n\n    /**\n     * A router view transition's pipeline can be described as\n     * follows, assuming we are transitioning from an existing\n     * <router-view> chain [Component A, Component B] to a new\n     * chain [Component A, Component C]:\n     *\n     *  A    A\n     *  | => |\n     *  B    C\n     *\n     * 1. Reusablity phase:\n     *   -> canReuse(A, A)\n     *   -> canReuse(B, C)\n     *   -> determine new queues:\n     *      - deactivation: [B]\n     *      - activation: [C]\n     *\n     * 2. Validation phase:\n     *   -> canDeactivate(B)\n     *   -> canActivate(C)\n     *\n     * 3. Activation phase:\n     *   -> deactivate(B)\n     *   -> activate(C)\n     *\n     * Each of these steps can be asynchronous, and any\n     * step can potentially abort the transition.\n     *\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.start = function start(cb) {\n      var transition = this;\n\n      // determine the queue of views to deactivate\n      var deactivateQueue = [];\n      var view = this.router._rootView;\n      while (view) {\n        deactivateQueue.unshift(view);\n        view = view.childView;\n      }\n      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\n      // determine the queue of route handlers to activate\n      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n        return match.handler;\n      });\n\n      // 1. Reusability phase\n      var i = undefined,\n          reuseQueue = undefined;\n      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n          break;\n        }\n      }\n      if (i > 0) {\n        reuseQueue = reverseDeactivateQueue.slice(0, i);\n        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n        activateQueue = activateQueue.slice(i);\n      }\n\n      // 2. Validation phase\n      transition.runQueue(deactivateQueue, canDeactivate, function () {\n        transition.runQueue(activateQueue, canActivate, function () {\n          transition.runQueue(deactivateQueue, deactivate, function () {\n            // 3. Activation phase\n\n            // Update router current route\n            transition.router._onTransitionValidated(transition);\n\n            // trigger reuse for all reused views\n            reuseQueue && reuseQueue.forEach(function (view) {\n              return reuse(view, transition);\n            });\n\n            // the root of the chain that needs to be replaced\n            // is the top-most non-reusable view.\n            if (deactivateQueue.length) {\n              var _view = deactivateQueue[deactivateQueue.length - 1];\n              var depth = reuseQueue ? reuseQueue.length : 0;\n              activate(_view, transition, depth, cb);\n            } else {\n              cb();\n            }\n          });\n        });\n      });\n    };\n\n    /**\n     * Asynchronously and sequentially apply a function to a\n     * queue.\n     *\n     * @param {Array} queue\n     * @param {Function} fn\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n      var transition = this;\n      step(0);\n      function step(index) {\n        if (index >= queue.length) {\n          cb();\n        } else {\n          fn(queue[index], transition, function () {\n            step(index + 1);\n          });\n        }\n      }\n    };\n\n    /**\n     * Call a user provided route transition hook and handle\n     * the response (e.g. if the user returns a promise).\n     *\n     * If the user neither expects an argument nor returns a\n     * promise, the hook is assumed to be synchronous.\n     *\n     * @param {Function} hook\n     * @param {*} [context]\n     * @param {Function} [cb]\n     * @param {Object} [options]\n     *                 - {Boolean} expectBoolean\n     *                 - {Boolean} expectData\n     *                 - {Function} cleanup\n     */\n\n    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n      var _ref$expectBoolean = _ref.expectBoolean;\n      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n      var _ref$expectData = _ref.expectData;\n      var expectData = _ref$expectData === undefined ? false : _ref$expectData;\n      var cleanup = _ref.cleanup;\n\n      var transition = this;\n      var nextCalled = false;\n\n      // abort the transition\n      var abort = function abort() {\n        cleanup && cleanup();\n        transition.abort();\n      };\n\n      // handle errors\n      var onError = function onError(err) {\n        // cleanup indicates an after-activation hook,\n        // so instead of aborting we just let the transition\n        // finish.\n        cleanup ? next() : abort();\n        if (err && !transition.router._suppress) {\n          warn('Uncaught error during transition: ');\n          throw err instanceof Error ? err : new Error(err);\n        }\n      };\n\n      // advance the transition to the next step\n      var next = function next(data) {\n        if (nextCalled) {\n          warn('transition.next() should be called only once.');\n          return;\n        }\n        nextCalled = true;\n        if (transition.aborted) {\n          cleanup && cleanup();\n          return;\n        }\n        cb && cb(data, onError);\n      };\n\n      // expose a clone of the transition object, so that each\n      // hook gets a clean copy and prevent the user from\n      // messing with the internals.\n      var exposed = {\n        to: transition.to,\n        from: transition.from,\n        abort: abort,\n        next: next,\n        redirect: function redirect() {\n          transition.redirect.apply(transition, arguments);\n        }\n      };\n\n      // actually call the hook\n      var res = undefined;\n      try {\n        res = hook.call(context, exposed);\n      } catch (err) {\n        return onError(err);\n      }\n\n      // handle boolean/promise return values\n      var resIsPromise = isPromise(res);\n      if (expectBoolean) {\n        if (typeof res === 'boolean') {\n          res ? next() : abort();\n        } else if (resIsPromise) {\n          res.then(function (ok) {\n            ok ? next() : abort();\n          }, onError);\n        } else if (!hook.length) {\n          next(res);\n        }\n      } else if (resIsPromise) {\n        res.then(next, onError);\n      } else if (expectData && isPlainOjbect(res) || !hook.length) {\n        next(res);\n      }\n    };\n\n    /**\n     * Call a single hook or an array of async hooks in series.\n     *\n     * @param {Array} hooks\n     * @param {*} context\n     * @param {Function} cb\n     * @param {Object} [options]\n     */\n\n    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n      var _this = this;\n\n      if (Array.isArray(hooks)) {\n        (function () {\n          var res = [];\n          res._needMerge = true;\n          var onError = undefined;\n          _this.runQueue(hooks, function (hook, _, next) {\n            if (!_this.aborted) {\n              _this.callHook(hook, context, function (r, onError) {\n                if (r) res.push(r);\n                onError = onError;\n                next();\n              }, options);\n            }\n          }, function () {\n            cb(res, onError);\n          });\n        })();\n      } else {\n        this.callHook(hooks, context, cb, options);\n      }\n    };\n\n    return RouteTransition;\n  })();\n\n  function isPlainOjbect(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  function toArray(val) {\n    return val ? Array.prototype.slice.call(val) : [];\n  }\n\n  var internalKeysRE = /^(component|subRoutes)$/;\n\n  /**\n   * Route Context Object\n   *\n   * @param {String} path\n   * @param {Router} router\n   */\n\n  var Route = function Route(path, router) {\n    var _this = this;\n\n    babelHelpers.classCallCheck(this, Route);\n\n    var matched = router._recognizer.recognize(path);\n    if (matched) {\n      // copy all custom fields from route configs\n      [].forEach.call(matched, function (match) {\n        for (var key in match.handler) {\n          if (!internalKeysRE.test(key)) {\n            _this[key] = match.handler[key];\n          }\n        }\n      });\n      // set query and params\n      this.query = matched.queryParams;\n      this.params = [].reduce.call(matched, function (prev, cur) {\n        if (cur.params) {\n          for (var key in cur.params) {\n            prev[key] = cur.params[key];\n          }\n        }\n        return prev;\n      }, {});\n    }\n    // expose path and router\n    this.path = path;\n    this.router = router;\n    // for internal use\n    this.matched = matched || router._notFoundHandler;\n    // Important: freeze self to prevent observation\n    Object.freeze(this);\n  };\n\n  function applyOverride (Vue) {\n    var _Vue$util = Vue.util;\n    var extend = _Vue$util.extend;\n    var isArray = _Vue$util.isArray;\n    var defineReactive = _Vue$util.defineReactive;\n\n    // override Vue's init and destroy process to keep track of router instances\n    var init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      options = options || {};\n      var root = options._parent || options.parent || this;\n      var router = root.$router;\n      var route = root.$route;\n      if (router) {\n        // expose router\n        this.$router = router;\n        router._children.push(this);\n        /* istanbul ignore if */\n        if (this._defineMeta) {\n          // 0.12\n          this._defineMeta('$route', route);\n        } else {\n          // 1.0\n          defineReactive(this, '$route', route);\n        }\n      }\n      init.call(this, options);\n    };\n\n    var destroy = Vue.prototype._destroy;\n    Vue.prototype._destroy = function () {\n      if (!this._isBeingDestroyed && this.$router) {\n        this.$router._children.$remove(this);\n      }\n      destroy.apply(this, arguments);\n    };\n\n    // 1.0 only: enable route mixins\n    var strats = Vue.config.optionMergeStrategies;\n    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\n    if (strats) {\n      strats.route = function (parentVal, childVal) {\n        if (!childVal) return parentVal;\n        if (!parentVal) return childVal;\n        var ret = {};\n        extend(ret, parentVal);\n        for (var key in childVal) {\n          var a = ret[key];\n          var b = childVal[key];\n          // for data, activate and deactivate, we need to merge them into\n          // arrays similar to lifecycle hooks.\n          if (a && hooksToMergeRE.test(key)) {\n            ret[key] = (isArray(a) ? a : [a]).concat(b);\n          } else {\n            ret[key] = b;\n          }\n        }\n        return ret;\n      };\n    }\n  }\n\n  function View (Vue) {\n\n    var _ = Vue.util;\n    var componentDef =\n    // 0.12\n    Vue.directive('_component') ||\n    // 1.0\n    Vue.internalDirectives.component;\n    // <router-view> extends the internal component directive\n    var viewDef = _.extend({}, componentDef);\n\n    // with some overrides\n    _.extend(viewDef, {\n\n      _isRouterView: true,\n\n      bind: function bind() {\n        var route = this.vm.$route;\n        /* istanbul ignore if */\n        if (!route) {\n          warn('<router-view> can only be used inside a ' + 'router-enabled app.');\n          return;\n        }\n        // force dynamic directive so v-component doesn't\n        // attempt to build right now\n        this._isDynamicLiteral = true;\n        // finally, init by delegating to v-component\n        componentDef.bind.call(this);\n\n        // locate the parent view\n        var parentView = undefined;\n        var parent = this.vm;\n        while (parent) {\n          if (parent._routerView) {\n            parentView = parent._routerView;\n            break;\n          }\n          parent = parent.$parent;\n        }\n        if (parentView) {\n          // register self as a child of the parent view,\n          // instead of activating now. This is so that the\n          // child's activate hook is called after the\n          // parent's has resolved.\n          this.parentView = parentView;\n          parentView.childView = this;\n        } else {\n          // this is the root view!\n          var router = route.router;\n          router._rootView = this;\n        }\n\n        // handle late-rendered view\n        // two possibilities:\n        // 1. root view rendered after transition has been\n        //    validated;\n        // 2. child view rendered after parent view has been\n        //    activated.\n        var transition = route.router._currentTransition;\n        if (!parentView && transition.done || parentView && parentView.activated) {\n          var depth = parentView ? parentView.depth + 1 : 0;\n          activate(this, transition, depth);\n        }\n      },\n\n      unbind: function unbind() {\n        if (this.parentView) {\n          this.parentView.childView = null;\n        }\n        componentDef.unbind.call(this);\n      }\n    });\n\n    Vue.elementDirective('router-view', viewDef);\n  }\n\n  var trailingSlashRE = /\\/$/;\n  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n  var queryStringRE = /\\?.*$/;\n\n  // install v-link, which provides navigation support for\n  // HTML5 history mode\n  function Link (Vue) {\n    var _Vue$util = Vue.util;\n    var _bind = _Vue$util.bind;\n    var isObject = _Vue$util.isObject;\n    var addClass = _Vue$util.addClass;\n    var removeClass = _Vue$util.removeClass;\n\n    Vue.directive('link-active', {\n      priority: 1001,\n      bind: function bind() {\n        this.el.__v_link_active = true;\n      }\n    });\n\n    Vue.directive('link', {\n      priority: 1000,\n\n      bind: function bind() {\n        var vm = this.vm;\n        /* istanbul ignore if */\n        if (!vm.$route) {\n          warn('v-link can only be used inside a router-enabled app.');\n          return;\n        }\n        this.router = vm.$route.router;\n        // update things when the route changes\n        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n        // check if active classes should be applied to a different element\n        this.activeEl = this.el;\n        var parent = this.el.parentNode;\n        while (parent) {\n          if (parent.__v_link_active) {\n            this.activeEl = parent;\n            break;\n          }\n          parent = parent.parentNode;\n        }\n        // no need to handle click if link expects to be opened\n        // in a new window/tab.\n        /* istanbul ignore if */\n        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n          return;\n        }\n        // handle click\n        this.el.addEventListener('click', _bind(this.onClick, this));\n      },\n\n      update: function update(target) {\n        this.target = target;\n        if (isObject(target)) {\n          this.append = target.append;\n          this.exact = target.exact;\n          this.prevActiveClass = this.activeClass;\n          this.activeClass = target.activeClass;\n        }\n        this.onRouteUpdate(this.vm.$route);\n      },\n\n      onClick: function onClick(e) {\n        // don't redirect with control keys\n        /* istanbul ignore if */\n        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n        // don't redirect when preventDefault called\n        /* istanbul ignore if */\n        if (e.defaultPrevented) return;\n        // don't redirect on right click\n        /* istanbul ignore if */\n        if (e.button !== 0) return;\n\n        var target = this.target;\n        if (target) {\n          // v-link with expression, just go\n          e.preventDefault();\n          this.router.go(target);\n        } else {\n          // no expression, delegate for an <a> inside\n          var el = e.target;\n          while (el.tagName !== 'A' && el !== this.el) {\n            el = el.parentNode;\n          }\n          if (el.tagName === 'A' && sameOrigin(el)) {\n            e.preventDefault();\n            this.router.go({\n              path: el.pathname,\n              replace: target && target.replace,\n              append: target && target.append\n            });\n          }\n        }\n      },\n\n      onRouteUpdate: function onRouteUpdate(route) {\n        // router._stringifyPath is dependent on current route\n        // and needs to be called again whenver route changes.\n        var newPath = this.router._stringifyPath(this.target);\n        if (this.path !== newPath) {\n          this.path = newPath;\n          this.updateActiveMatch();\n          this.updateHref();\n        }\n        this.updateClasses(route.path);\n      },\n\n      updateActiveMatch: function updateActiveMatch() {\n        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n      },\n\n      updateHref: function updateHref() {\n        if (this.el.tagName !== 'A') {\n          return;\n        }\n        var path = this.path;\n        var router = this.router;\n        var isAbsolute = path.charAt(0) === '/';\n        // do not format non-hash relative paths\n        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n        if (href) {\n          this.el.href = href;\n        } else {\n          this.el.removeAttribute('href');\n        }\n      },\n\n      updateClasses: function updateClasses(path) {\n        var el = this.activeEl;\n        var activeClass = this.activeClass || this.router._linkActiveClass;\n        // clear old class\n        if (this.prevActiveClass !== activeClass) {\n          removeClass(el, this.prevActiveClass);\n        }\n        // remove query string before matching\n        var dest = this.path.replace(queryStringRE, '');\n        path = path.replace(queryStringRE, '');\n        // add new class\n        if (this.exact) {\n          if (dest === path ||\n          // also allow additional trailing slash\n          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n            addClass(el, activeClass);\n          } else {\n            removeClass(el, activeClass);\n          }\n        } else {\n          if (this.activeRE && this.activeRE.test(path)) {\n            addClass(el, activeClass);\n          } else {\n            removeClass(el, activeClass);\n          }\n        }\n      },\n\n      unbind: function unbind() {\n        this.el.removeEventListener('click', this.handler);\n        this.unwatch && this.unwatch();\n      }\n    });\n\n    function sameOrigin(link) {\n      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n    }\n  }\n\n  var historyBackends = {\n    abstract: AbstractHistory,\n    hash: HashHistory,\n    html5: HTML5History\n  };\n\n  // late bind during install\n  var Vue = undefined;\n\n  /**\n   * Router constructor\n   *\n   * @param {Object} [options]\n   */\n\n  var Router = (function () {\n    function Router() {\n      var _this = this;\n\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$hashbang = _ref.hashbang;\n      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n      var _ref$abstract = _ref.abstract;\n      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n      var _ref$history = _ref.history;\n      var history = _ref$history === undefined ? false : _ref$history;\n      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n      var _ref$root = _ref.root;\n      var root = _ref$root === undefined ? null : _ref$root;\n      var _ref$linkActiveClass = _ref.linkActiveClass;\n      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n      babelHelpers.classCallCheck(this, Router);\n\n      /* istanbul ignore if */\n      if (!Router.installed) {\n        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n      }\n\n      // Vue instances\n      this.app = null;\n      this._children = [];\n\n      // route recognizer\n      this._recognizer = new RouteRecognizer();\n      this._guardRecognizer = new RouteRecognizer();\n\n      // state\n      this._started = false;\n      this._startCb = null;\n      this._currentRoute = {};\n      this._currentTransition = null;\n      this._previousTransition = null;\n      this._notFoundHandler = null;\n      this._notFoundRedirect = null;\n      this._beforeEachHooks = [];\n      this._afterEachHooks = [];\n\n      // trigger transition on initial render?\n      this._rendered = false;\n      this._transitionOnLoad = transitionOnLoad;\n\n      // history mode\n      this._root = root;\n      this._abstract = abstract;\n      this._hashbang = hashbang;\n\n      // check if HTML5 history is available\n      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n      this._history = history && hasPushState;\n      this._historyFallback = history && !hasPushState;\n\n      // create history object\n      var inBrowser = Vue.util.inBrowser;\n      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\n      var History = historyBackends[this.mode];\n      this.history = new History({\n        root: root,\n        hashbang: this._hashbang,\n        onChange: function onChange(path, state, anchor) {\n          _this._match(path, state, anchor);\n        }\n      });\n\n      // other options\n      this._saveScrollPosition = saveScrollPosition;\n      this._linkActiveClass = linkActiveClass;\n      this._suppress = suppressTransitionError;\n    }\n\n    /**\n     * Allow directly passing components to a route\n     * definition.\n     *\n     * @param {String} path\n     * @param {Object} handler\n     */\n\n    // API ===================================================\n\n    /**\n    * Register a map of top-level paths.\n    *\n    * @param {Object} map\n    */\n\n    Router.prototype.map = function map(_map) {\n      for (var route in _map) {\n        this.on(route, _map[route]);\n      }\n      return this;\n    };\n\n    /**\n     * Register a single root-level path\n     *\n     * @param {String} rootPath\n     * @param {Object} handler\n     *                 - {String} component\n     *                 - {Object} [subRoutes]\n     *                 - {Boolean} [forceRefresh]\n     *                 - {Function} [before]\n     *                 - {Function} [after]\n     */\n\n    Router.prototype.on = function on(rootPath, handler) {\n      if (rootPath === '*') {\n        this._notFound(handler);\n      } else {\n        this._addRoute(rootPath, handler, []);\n      }\n      return this;\n    };\n\n    /**\n     * Set redirects.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.redirect = function redirect(map) {\n      for (var path in map) {\n        this._addRedirect(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set aliases.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.alias = function alias(map) {\n      for (var path in map) {\n        this._addAlias(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set global before hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.beforeEach = function beforeEach(fn) {\n      this._beforeEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Set global after hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.afterEach = function afterEach(fn) {\n      this._afterEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Navigate to a given path.\n     * The path can be an object describing a named path in\n     * the format of { name: '...', params: {}, query: {}}\n     * The path is assumed to be already decoded, and will\n     * be resolved against root (if provided)\n     *\n     * @param {String|Object} path\n     * @param {Boolean} [replace]\n     */\n\n    Router.prototype.go = function go(path) {\n      var replace = false;\n      var append = false;\n      if (Vue.util.isObject(path)) {\n        replace = path.replace;\n        append = path.append;\n      }\n      path = this._stringifyPath(path);\n      if (path) {\n        this.history.go(path, replace, append);\n      }\n    };\n\n    /**\n     * Short hand for replacing current path\n     *\n     * @param {String} path\n     */\n\n    Router.prototype.replace = function replace(path) {\n      if (typeof path === 'string') {\n        path = { path: path };\n      }\n      path.replace = true;\n      this.go(path);\n    };\n\n    /**\n     * Start the router.\n     *\n     * @param {VueConstructor} App\n     * @param {String|Element} container\n     * @param {Function} [cb]\n     */\n\n    Router.prototype.start = function start(App, container, cb) {\n      /* istanbul ignore if */\n      if (this._started) {\n        warn('already started.');\n        return;\n      }\n      this._started = true;\n      this._startCb = cb;\n      if (!this.app) {\n        /* istanbul ignore if */\n        if (!App || !container) {\n          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n        }\n        /* istanbul ignore if */\n        if (App instanceof Vue) {\n          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n        }\n        this._appContainer = container;\n        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n        // give it a name for better debugging\n        Ctor.options.name = Ctor.options.name || 'RouterApp';\n      }\n\n      // handle history fallback in browsers that do not\n      // support HTML5 history API\n      if (this._historyFallback) {\n        var _location = window.location;\n        var _history = new HTML5History({ root: this._root });\n        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n        if (path && path !== '/') {\n          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n          return;\n        }\n      }\n\n      this.history.start();\n    };\n\n    /**\n     * Stop listening to route changes.\n     */\n\n    Router.prototype.stop = function stop() {\n      this.history.stop();\n      this._started = false;\n    };\n\n    // Internal methods ======================================\n\n    /**\n    * Add a route containing a list of segments to the internal\n    * route recognizer. Will be called recursively to add all\n    * possible sub-routes.\n    *\n    * @param {String} path\n    * @param {Object} handler\n    * @param {Array} segments\n    */\n\n    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n      guardComponent(path, handler);\n      handler.path = path;\n      handler.fullPath = (segments.reduce(function (path, segment) {\n        return path + segment.path;\n      }, '') + path).replace('//', '/');\n      segments.push({\n        path: path,\n        handler: handler\n      });\n      this._recognizer.add(segments, {\n        as: handler.name\n      });\n      // add sub routes\n      if (handler.subRoutes) {\n        for (var subPath in handler.subRoutes) {\n          // recursively walk all sub routes\n          this._addRoute(subPath, handler.subRoutes[subPath],\n          // pass a copy in recursion to avoid mutating\n          // across branches\n          segments.slice());\n        }\n      }\n    };\n\n    /**\n     * Set the notFound route handler.\n     *\n     * @param {Object} handler\n     */\n\n    Router.prototype._notFound = function _notFound(handler) {\n      guardComponent('*', handler);\n      this._notFoundHandler = [{ handler: handler }];\n    };\n\n    /**\n     * Add a redirect record.\n     *\n     * @param {String} path\n     * @param {String} redirectPath\n     */\n\n    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n      if (path === '*') {\n        this._notFoundRedirect = redirectPath;\n      } else {\n        this._addGuard(path, redirectPath, this.replace);\n      }\n    };\n\n    /**\n     * Add an alias record.\n     *\n     * @param {String} path\n     * @param {String} aliasPath\n     */\n\n    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n      this._addGuard(path, aliasPath, this._match);\n    };\n\n    /**\n     * Add a path guard.\n     *\n     * @param {String} path\n     * @param {String} mappedPath\n     * @param {Function} handler\n     */\n\n    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n      var _this2 = this;\n\n      this._guardRecognizer.add([{\n        path: path,\n        handler: function handler(match, query) {\n          var realPath = mapParams(mappedPath, match.params, query);\n          _handler.call(_this2, realPath);\n        }\n      }]);\n    };\n\n    /**\n     * Check if a path matches any redirect records.\n     *\n     * @param {String} path\n     * @return {Boolean} - if true, will skip normal match.\n     */\n\n    Router.prototype._checkGuard = function _checkGuard(path) {\n      var matched = this._guardRecognizer.recognize(path);\n      if (matched) {\n        matched[0].handler(matched[0], matched.queryParams);\n        return true;\n      } else if (this._notFoundRedirect) {\n        matched = this._recognizer.recognize(path);\n        if (!matched) {\n          this.replace(this._notFoundRedirect);\n          return true;\n        }\n      }\n    };\n\n    /**\n     * Match a URL path and set the route context on vm,\n     * triggering view updates.\n     *\n     * @param {String} path\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._match = function _match(path, state, anchor) {\n      var _this3 = this;\n\n      if (this._checkGuard(path)) {\n        return;\n      }\n\n      var currentRoute = this._currentRoute;\n      var currentTransition = this._currentTransition;\n\n      if (currentTransition) {\n        if (currentTransition.to.path === path) {\n          // do nothing if we have an active transition going to the same path\n          return;\n        } else if (currentRoute.path === path) {\n          // We are going to the same path, but we also have an ongoing but\n          // not-yet-validated transition. Abort that transition and reset to\n          // prev transition.\n          currentTransition.aborted = true;\n          this._currentTransition = this._prevTransition;\n          return;\n        } else {\n          // going to a totally different path. abort ongoing transition.\n          currentTransition.aborted = true;\n        }\n      }\n\n      // construct new route and transition context\n      var route = new Route(path, this);\n      var transition = new RouteTransition(this, route, currentRoute);\n\n      // current transition is updated right now.\n      // however, current route will only be updated after the transition has\n      // been validated.\n      this._prevTransition = currentTransition;\n      this._currentTransition = transition;\n\n      if (!this.app) {\n        (function () {\n          // initial render\n          var router = _this3;\n          _this3.app = new _this3._appConstructor({\n            el: _this3._appContainer,\n            created: function created() {\n              this.$router = router;\n            },\n            _meta: {\n              $route: route\n            }\n          });\n        })();\n      }\n\n      // check global before hook\n      var beforeHooks = this._beforeEachHooks;\n      var startTransition = function startTransition() {\n        transition.start(function () {\n          _this3._postTransition(route, state, anchor);\n        });\n      };\n\n      if (beforeHooks.length) {\n        transition.runQueue(beforeHooks, function (hook, _, next) {\n          if (transition === _this3._currentTransition) {\n            transition.callHook(hook, null, next, {\n              expectBoolean: true\n            });\n          }\n        }, startTransition);\n      } else {\n        startTransition();\n      }\n\n      if (!this._rendered && this._startCb) {\n        this._startCb.call(null);\n      }\n\n      // HACK:\n      // set rendered to true after the transition start, so\n      // that components that are acitvated synchronously know\n      // whether it is the initial render.\n      this._rendered = true;\n    };\n\n    /**\n     * Set current to the new transition.\n     * This is called by the transition object when the\n     * validation of a route has succeeded.\n     *\n     * @param {Transition} transition\n     */\n\n    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n      // set current route\n      var route = this._currentRoute = transition.to;\n      // update route context for all children\n      if (this.app.$route !== route) {\n        this.app.$route = route;\n        this._children.forEach(function (child) {\n          child.$route = route;\n        });\n      }\n      // call global after hook\n      if (this._afterEachHooks.length) {\n        this._afterEachHooks.forEach(function (hook) {\n          return hook.call(null, {\n            to: transition.to,\n            from: transition.from\n          });\n        });\n      }\n      this._currentTransition.done = true;\n    };\n\n    /**\n     * Handle stuff after the transition.\n     *\n     * @param {Route} route\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n      // handle scroll positions\n      // saved scroll positions take priority\n      // then we check if the path has an anchor\n      var pos = state && state.pos;\n      if (pos && this._saveScrollPosition) {\n        Vue.nextTick(function () {\n          window.scrollTo(pos.x, pos.y);\n        });\n      } else if (anchor) {\n        Vue.nextTick(function () {\n          var el = document.getElementById(anchor.slice(1));\n          if (el) {\n            window.scrollTo(window.scrollX, el.offsetTop);\n          }\n        });\n      }\n    };\n\n    /**\n     * Normalize named route object / string paths into\n     * a string.\n     *\n     * @param {Object|String|Number} path\n     * @return {String}\n     */\n\n    Router.prototype._stringifyPath = function _stringifyPath(path) {\n      var fullPath = '';\n      if (path && typeof path === 'object') {\n        if (path.name) {\n          var extend = Vue.util.extend;\n          var currentParams = this._currentTransition && this._currentTransition.to.params;\n          var targetParams = path.params || {};\n          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n          if (path.query) {\n            params.queryParams = path.query;\n          }\n          fullPath = this._recognizer.generate(path.name, params);\n        } else if (path.path) {\n          fullPath = path.path;\n          if (path.query) {\n            var query = this._recognizer.generateQueryString(path.query);\n            if (fullPath.indexOf('?') > -1) {\n              fullPath += '&' + query.slice(1);\n            } else {\n              fullPath += query;\n            }\n          }\n        }\n      } else {\n        fullPath = path ? path + '' : '';\n      }\n      return encodeURI(fullPath);\n    };\n\n    return Router;\n  })();\n\n  function guardComponent(path, handler) {\n    var comp = handler.component;\n    if (Vue.util.isPlainObject(comp)) {\n      comp = handler.component = Vue.extend(comp);\n    }\n    /* istanbul ignore if */\n    if (typeof comp !== 'function') {\n      handler.component = null;\n      warn('invalid component for route \"' + path + '\".');\n    }\n  }\n\n  /* Installation */\n\n  Router.installed = false;\n\n  /**\n   * Installation interface.\n   * Install the necessary directives.\n   */\n\n  Router.install = function (externalVue) {\n    /* istanbul ignore if */\n    if (Router.installed) {\n      warn('already installed.');\n      return;\n    }\n    Vue = externalVue;\n    applyOverride(Vue);\n    View(Vue);\n    Link(Vue);\n    exports$1.Vue = Vue;\n    Router.installed = true;\n  };\n\n  // auto install\n  /* istanbul ignore if */\n  if (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(Router);\n  }\n\n  return Router;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-router/dist/vue-router.js\n ** module id = 39\n ** module chunks = 0\n **/","/*!\n * Vue.js v1.0.16\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind$1(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a non-enumerable property\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\nvar isIE9 = inBrowser && navigator.userAgent.toLowerCase().indexOf('msie 9.0') > 0;\n\nvar isAndroid = inBrowser && navigator.userAgent.toLowerCase().indexOf('android') > 0;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined') {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n  if (this.size === this.limit) {\n    removed = this.shift();\n  }\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} str\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '(.+?)' + unsafeClose + '|' + open + '(.+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  text = text.replace(/\\n/g, '');\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE$1 = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE$1.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text$1 = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether or not to handle fully object properties which\n   * are already backed by getters and seters. Depending on\n   * use case and environment, this might introduce non-neglible\n   * performance penalties.\n   */\n  convertAllProperties: false,\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n    warn = function (msg, e) {\n      if (hasConsole && (!config.silent || config.debug)) {\n        console.warn('[Vue warn]: ' + msg);\n        /* istanbul ignore if */\n        if (config.debug) {\n          if (e) {\n            throw e;\n          } else {\n            console.warn(new Error('Warning Stack Trace').stack);\n          }\n        }\n      }\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  var doc = document.documentElement;\n  var parent = node && node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on$1(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !(el instanceof SVGElement)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && el.content instanceof DocumentFragment) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__vue_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/;\nvar reservedTagRE = /^(slot|partial|component)$/;\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        if (tag.indexOf('-') > -1 || /HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        !/^(data|time|rtc|rb)$/.test(tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el) {\n  // dynamic syntax\n  var exp = getAttr(el, 'is');\n  if (exp != null) {\n    return { id: exp };\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  var key = prop.path;\n  value = coerceProp(prop, value);\n  vm[key] = vm._data[key] = assertProp(prop, value) ? value : undefined;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction assertProp(prop, value) {\n  // if a prop is not provided and is not required,\n  // skip the check.\n  if (prop.raw === null && !prop.required) {\n    return true;\n  }\n  var options = prop.options;\n  var type = options.type;\n  var valid = true;\n  var expectedType;\n  if (type) {\n    if (type === String) {\n      expectedType = 'string';\n      valid = typeof value === expectedType;\n    } else if (type === Number) {\n      expectedType = 'number';\n      valid = typeof value === 'number';\n    } else if (type === Boolean) {\n      expectedType = 'boolean';\n      valid = typeof value === 'boolean';\n    } else if (type === Function) {\n      expectedType = 'function';\n      valid = typeof value === 'function';\n    } else if (type === Object) {\n      expectedType = 'object';\n      valid = isPlainObject(value);\n    } else if (type === Array) {\n      expectedType = 'array';\n      valid = isArray(value);\n    } else {\n      valid = value instanceof type;\n    }\n  }\n  if (!valid) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid prop: type check failed for ' + prop.path + '=\"' + prop.raw + '\".' + ' Expected ' + formatType(expectedType) + ', got ' + formatValue(value) + '.');\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator.call(null, value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for ' + prop.path + '=\"' + prop.raw + '\"');\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  // coerce is a function\n  return coerce(value);\n}\n\nfunction formatType(val) {\n  return val ? val.charAt(0).toUpperCase() + val.slice(1) : 'custom type';\n}\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * 0.11 deprecation warning\n */\n\nstrats.paramAttributes = function () {\n  /* istanbul ignore next */\n  process.env.NODE_ENV !== 'production' && warn('\"paramAttributes\" option has been deprecated in 0.12. ' + 'Use \"props\" instead.');\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var def;\n    var ids = Object.keys(components);\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  var options = {};\n  var key;\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  return assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n}\n\n/**\n * Assert asset exists\n */\n\nfunction assertAsset(val, type, id) {\n  if (!val) {\n    process.env.NODE_ENV !== 'production' && warn('Failed to resolve ' + type + ': ' + id);\n  }\n}\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index.\n *\n * @param {Number} index\n * @param {*} val\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar uid$3 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$3++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction protoAugment(target, src) {\n  target.__proto__ = src;\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if ((isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  // cater for pre-defined getter/setters\n  var getter, setter;\n  if (config.convertAllProperties) {\n    var property = Object.getOwnPropertyDescriptor(obj, key);\n    if (property && property.configurable === false) {\n      return;\n    }\n    getter = property && property.get;\n    setter = property && property.set;\n  }\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind$1,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on$1,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tassertAsset: assertAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tinitProp: initProp,\n\tassertProp: assertProp,\n\tcoerceProp: coerceProp,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // save raw constructor data before merge\n    // so that we know which properties are provided at\n    // instantiation.\n    if (process.env.NODE_ENV !== 'production') {\n      this._runtimeData = options.data;\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initScope().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.');\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'proctected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\")|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar booleanLiteralRE = /^(?:true|false)$/;\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here becaue the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    return new Function('scope', 'return ' + body + ';');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat true/false as paths\n  !booleanLiteralRE.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar internalQueueDepleted = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue = [];\n  userQueue = [];\n  has = {};\n  circular = {};\n  waiting = internalQueueDepleted = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  runBatcherQueue(queue);\n  internalQueueDepleted = true;\n  runBatcherQueue(userQueue);\n  // dev tool hook\n  /* istanbul ignore if */\n  if (devtools) {\n    devtools.emit('flush');\n  }\n  resetBatcherState();\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        queue.splice(has[id], 1);\n        warn('You may have an infinite update loop for watcher ' + 'with expression: ' + watcher.expression);\n      }\n    }\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // if an internal watcher is pushed, but the internal\n    // queue is already depleted, we run it immediately.\n    if (internalQueueDepleted && !watcher.user) {\n      watcher.run();\n      return;\n    }\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String} expression\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = isFn ? expOrFn.toString() : expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = Object.create(null);\n  this.newDeps = null;\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDeps[id]) {\n    this.newDeps[id] = dep;\n    if (!this.deps[id]) {\n      this.deps[id] = dep;\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression \"' + this.expression + '\". ' + (config.debug ? '' : 'Turn on debug mode to see stack trace.'), e);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter \"' + this.expression + '\"', e);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.');\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n  this.newDeps = Object.create(null);\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var ids = Object.keys(this.deps);\n  var i = ids.length;\n  while (i--) {\n    var id = ids[i];\n    if (!this.newDeps[id]) {\n      this.deps[id].removeSub(this);\n    }\n  }\n  this.deps = this.newDeps;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var depIds = Object.keys(this.deps);\n  var i = depIds.length;\n  while (i--) {\n    this.deps[depIds[i]].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var depIds = Object.keys(this.deps);\n    var i = depIds.length;\n    while (i--) {\n      this.deps[depIds[i]].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nfunction traverse(val) {\n  var i, keys;\n  if (isArray(val)) {\n    i = val.length;\n    while (i--) traverse(val[i]);\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) traverse(val[keys[i]]);\n  }\n}\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.');\n  }\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar FOR = 2000;\nvar IF = 2000;\nvar SLOT = 2100;\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        value = value.replace(importantRE, '').trim();\n      }\n      this.el.style.setProperty(prop, value, isImportant);\n    } else {\n      this.el.style.removeProperty(prop);\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixes[i] + prop;\n    }\n  }\n  if (camel in testEl.style) {\n    return prop;\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.');\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.');\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.');\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on = {\n\n  acceptStatement: true,\n  priority: ON,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on$1(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on$1(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', this.forceUpdate);\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.listener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.listener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.value = _toString(value);\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model. You might want to use a two-way filter ' + 'to ensure correct behavior.');\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && node.content instanceof DocumentFragment;\n}\n\nvar tagRE$1 = /<([\\w:]+)/;\nvar entityRE = /&#?\\w+?;/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n\n  if (!tagMatch && !entityMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment.\n  if (isRealTemplate(node)) {\n    trimNode(node.content);\n    return node.content;\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (template instanceof DocumentFragment) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__vue_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__vfrag__ = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__vfrag__ = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el)) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : el.outerHTML);\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar vIf = {\n\n  priority: IF,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseFactory = new FragmentFactory(this.vm, next);\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n      this.factory = new FragmentFactory(this.vm, el);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.');\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseFactory && !this.elseFrag) {\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar uid$1 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in items\" syntax\n    var inMatch = this.expression.match(/(.*) in (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Alias is required in v-for.');\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$1;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          frag.scope[alias] = value;\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    this.vm._watchers = this.vm._watchers.filter(function (w) {\n      return w.active;\n    });\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    defineReactive(scope, alias, value);\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__vfrag__ = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.before(prevEl.nextSibling);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else {\n        def(value, id, frag);\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * wathcer's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__vfrag__;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__vfrag__;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.');\n  };\n}\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\nvar text = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\n// must export plain object\nvar publicDirectives = {\n  text: text,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on,\n  bind: bind,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind$1(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n\n  // Important hack:\n  // in Chrome, if a just-entered element is applied the\n  // leave class while its interpolated property still has\n  // a very small value (within one frame), Chrome will\n  // skip the leave transition entirely and not firing the\n  // transtionend event. Therefore we need to protected\n  // against such cases using a one-frame timeout.\n  this.justEntered = true;\n  var self = this;\n  setTimeout(function () {\n    self.justEntered = false;\n  }, 17);\n\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on$1(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nvar transition = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    // apply on closest vm\n    el.__v_trans = new Transition(el, id, hooks, this.el.__vue__ || this.vm);\n    if (oldId) {\n      removeClass(el, oldId + '-transition');\n    }\n    addClass(el, id + '-transition');\n  }\n};\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      val = coerceProp(prop, val);\n      if (assertProp(prop, val)) {\n        child[childKey] = val;\n      }\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   */\n\n  resolveComponent: function resolveComponent(id, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || id;\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(id, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHook = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHook && !cached) {\n      this.waitingFor = newComponent;\n      activateHook.call(newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      this.waitingFor.$destroy();\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (process.env.NODE_ENV !== 'production') {\n      if (current) current._inactive = true;\n      target._inactive = false;\n    }\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (value && typeof value === 'string') {\n      this.handleObject(stringToObject(value));\n    } else if (isPlainObject(value)) {\n      this.handleObject(value);\n    } else if (isArray(value)) {\n      this.handleArray(value);\n    } else {\n      this.cleanup();\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    this.cleanup(value);\n    var keys = this.prevKeys = Object.keys(value);\n    for (var i = 0, l = keys.length; i < l; i++) {\n      var key = keys[i];\n      if (value[key]) {\n        addClass(this.el, key);\n      } else {\n        removeClass(this.el, key);\n      }\n    }\n  },\n\n  handleArray: function handleArray(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (value[i]) {\n        addClass(this.el, value[i]);\n      }\n    }\n    this.prevKeys = value.slice();\n  },\n\n  cleanup: function cleanup(value) {\n    if (this.prevKeys) {\n      var i = this.prevKeys.length;\n      while (i--) {\n        var key = this.prevKeys[i];\n        if (key && (!value || !contains$1(value, key))) {\n          removeClass(this.el, key);\n        }\n      }\n    }\n  }\n};\n\nfunction stringToObject(value) {\n  var res = {};\n  var keys = value.trim().split(/\\s+/);\n  var i = keys.length;\n  while (i--) {\n    res[keys[i]] = true;\n  }\n  return res;\n}\n\nfunction contains$1(value, key) {\n  return isArray(value) ? value.indexOf(key) > -1 : hasOwn(value, key);\n}\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition\n};\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.');\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.');\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.');\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (options.required) {\n      // warn missing required\n      process.env.NODE_ENV !== 'production' && warn('Missing required prop: ' + name);\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, getDefault(vm, options));\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (vm._context) {\n          if (prop.mode === propBindingModes.ONE_TIME) {\n            // one time binding\n            value = (scope || vm._context).$get(prop.parentPath);\n            initProp(vm, prop, value);\n          } else {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          }\n        } else {\n            process.env.NODE_ENV !== 'production' && warn('Cannot bind dynamic prop on a root instance' + ' with no parent: ' + prop.name + '=\"' + raw + '\"');\n          }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value\n        value = options.type === Boolean && raw === '' ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} options\n * @return {*}\n */\n\nfunction getDefault(vm, options) {\n  // no default, return undefined\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Object/Array as default prop values will be shared ' + 'across multiple instances. Use a factory function ' + 'to return the default value instead.');\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// terminal directives\nvar terminalDirectives = ['for', 'if'];\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && node.tagName !== 'SCRIPT') {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(el.attributes, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: publicDirectives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = value;\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) return;\n  // special case: give named slot a higher priority\n  // than unnamed slots\n  if (tag === 'slot' && hasBindAttr(el, 'name')) {\n    tag = '_namedSlot';\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n  var value, dirName;\n  for (var i = 0, l = terminalDirectives.length; i < l; i++) {\n    dirName = terminalDirectives[i];\n    value = el.getAttribute('v-' + dirName);\n    if (value != null) {\n      return makeTerminalNodeLinkFn(el, dirName, value, options);\n    }\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} [def]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    // either an element directive, or if/for\n    def: def || publicDirectives[dirName]\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', publicDirectives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.');\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', publicDirectives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', publicDirectives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName);\n\n              if (process.env.NODE_ENV !== 'production') {\n                assertAsset(dirDef, 'directive', dirName);\n              }\n\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (el instanceof DocumentFragment) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value)) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\tterminalDirectives: terminalDirectives,\n\ttransclude: transclude\n});\n\nfunction stateMixin (Vue) {\n\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.');\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var propsData = this._data;\n    var optionsDataFn = this.$options.data;\n    var optionsData = optionsDataFn && optionsDataFn();\n    var runtimeData;\n    if (process.env.NODE_ENV !== 'production') {\n      runtimeData = (typeof this._runtimeData === 'function' ? this._runtimeData() : this._runtimeData) || {};\n      this._runtimeData = null;\n    }\n    if (optionsData) {\n      this._data = optionsData;\n      for (var prop in propsData) {\n        if (process.env.NODE_ENV !== 'production' && hasOwn(optionsData, prop) && !hasOwn(runtimeData, prop)) {\n          warn('Data field \"' + prop + '\" is already defined ' + 'as a prop. Use prop default value instead.');\n        }\n        if (this._props[prop].raw !== null || !hasOwn(optionsData, prop)) {\n          set(optionsData, prop, propsData[prop]);\n        }\n      }\n    }\n    var data = this._data;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      this._proxy(key);\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind$1(userDef.get, this) : noop;\n          def.set = userDef.set ? bind$1(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind$1(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".');\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {String} name\n * @param {Node} el\n * @param {Vue} vm\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} raw\n * @param {Object} def - directive definition object\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n *\n * @param {Object} def\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop;\n    }\n    var preProcess = this._preProcess ? bind$1(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind$1(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = params[i];\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on$1(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (el instanceof DocumentFragment) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {String} name - directive name\n   * @param {Node} node   - target node\n   * @param {Object} desc - parsed directive descriptor\n   * @param {Object} def  - directive definition object\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[i];\n      fn = resolveAsset(this.$options, 'filters', filter.name);\n      if (process.env.NODE_ENV !== 'production') {\n        assertAsset(fn, 'filter', filter.name);\n      }\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String} id\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (id, cb) {\n    var factory = resolveAsset(this.$options, 'components', id);\n    if (process.env.NODE_ENV !== 'production') {\n      assertAsset(factory, 'component', id);\n    }\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory(function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component: ' + id + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nfunction globalAPI (Vue) {\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text$1,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = id;\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n}\n\nvar filterRE = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement && !isSimplePath(exp)) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      for (var key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.');\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install APIs\nglobalAPI(Vue);\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = toArray(arguments, n).reduce(function (prev, cur) {\n    return prev.concat(cur);\n  }, []);\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} sortKey\n * @param {String} reverse\n */\n\nfunction orderBy(arr, sortKey, reverse) {\n  arr = convertArray(arr);\n  if (!sortKey) {\n    return arr;\n  }\n  var order = reverse && reverse < 0 ? -1 : 1;\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(function (a, b) {\n    if (sortKey !== '$key') {\n      if (isObject(a) && '$value' in a) a = a.$value;\n      if (isObject(b) && '$value' in b) b = b.$value;\n    }\n    a = isObject(a) ? getPath(a, sortKey) : a;\n    b = isObject(b) ? getPath(b, sortKey) : b;\n    return a === b ? 0 : a > b ? order : -order;\n  });\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   */\n\n  currency: function currency(value, _currency) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    var stringified = Math.abs(value).toFixed(2);\n    var _int = stringified.slice(0, -3);\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = stringified.slice(-3);\n    var sign = value < 0 ? '-' : '';\n    return _currency + sign + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id);\n    if (process.env.NODE_ENV !== 'production') {\n      assertAsset(partial, 'partial', id);\n    }\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\n// This is the elementDirective that handles <content>\n// transclusions. It relies on the raw content of an\n// instance being stored as `$options._content` during\n// the transclude phase.\n\n// We are exporting two versions, one for named and one\n// for unnamed, because the unnamed slots must be compiled\n// AFTER all named slots have selected their content. So\n// we need to give them different priorities in the compilation\n// process. (See #1965)\n\nvar slot = {\n\n  priority: SLOT,\n\n  bind: function bind() {\n    var host = this.vm;\n    var raw = host.$options._content;\n    if (!raw) {\n      this.fallback();\n      return;\n    }\n    var context = host._context;\n    var slotName = this.params && this.params.name;\n    if (!slotName) {\n      // Default slot\n      this.tryCompile(extractFragment(raw.childNodes, raw, true), context, host);\n    } else {\n      // Named slot\n      var selector = '[slot=\"' + slotName + '\"]';\n      var nodes = raw.querySelectorAll(selector);\n      if (nodes.length) {\n        this.tryCompile(extractFragment(nodes, raw), context, host);\n      } else {\n        this.fallback();\n      }\n    }\n  },\n\n  tryCompile: function tryCompile(content, context, host) {\n    if (content.hasChildNodes()) {\n      this.compile(content, context, host);\n    } else {\n      this.fallback();\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar namedSlot = extend(extend({}, slot), {\n  priority: slot.priority + 1,\n  params: ['name']\n});\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @param {Element} parent\n * @param {Boolean} main\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent, main) {\n  var frag = document.createDocumentFragment();\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    // if this is the main outlet, we want to skip all\n    // previously selected nodes;\n    // otherwise, we want to mark the node as selected.\n    // clone the node so the original raw content remains\n    // intact. this ensures proper re-compilation in cases\n    // where the outlet is inside a conditional block\n    if (main && !node.__v_selected) {\n      append(node);\n    } else if (!main && node.parentNode === parent) {\n      node.__v_selected = true;\n      append(node);\n    }\n  }\n  return frag;\n\n  function append(node) {\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      node = parseTemplate(node);\n    }\n    node = cloneNode(node);\n    frag.appendChild(node);\n  }\n}\n\nvar elementDirectives = {\n  slot: slot,\n  _namedSlot: namedSlot, // same as slot but with higher priority\n  partial: partial\n};\n\nVue.version = '1.0.16';\n\n/**\n * Vue and every constructor that extends Vue has an\n * associated options object, which can be accessed during\n * compilation steps as `this.constructor.options`.\n *\n * These can be seen as the default options of every\n * Vue instance.\n */\n\nVue.options = {\n  directives: publicDirectives,\n  elementDirectives: elementDirectives,\n  filters: filters,\n  transitions: {},\n  components: {},\n  partials: {},\n  replace: true\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (devtools) {\n  devtools.emit('init', Vue);\n} else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(navigator.userAgent)) {\n  console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n}\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 40\n ** module chunks = 0\n **/"],"sourceRoot":""}